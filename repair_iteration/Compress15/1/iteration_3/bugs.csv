bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Object  myComment  =  getComment(otherName);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(otherName);	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
2	[BUG]  [BUGGY]  Object  myComment  =  getComment(other);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(other);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(other);	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
3	[BUG]  [BUGGY]  Object  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  null;	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
4	[BUG]  [BUGGY]  Object  myComment  =  getComment(other.getComment());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(other.getComment());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(other.getComment());	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
5	[BUG]  [BUGGY]  Object  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  null;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  null;	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
6	[BUG]  [BUGGY]  Object  myComment  =  getComment(other.getName());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(other.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(other.getName());	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
7	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  myName;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ": "  +  myName;	  String    myComment    =    getCommentName()    +   ":   "    +    obj;    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
8	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  obj.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  obj.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ": "  +  obj.toString();	  String    myComment    =    getCommentName()    +   ":   "    +    obj;    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
9	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  otherName;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  otherName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ": "  +  otherName;	  String    myComment    =    getCommentName()    +   ":   "    +    obj;    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
10	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  obj.getClass();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  obj.getClass();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ": "  +  obj.getClass();	  String    myComment    =    getCommentName()    +   ":   "    +    obj;    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
11	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ",  obj: "  +  obj;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ",  obj: "  +  obj;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ",  obj: "  +  obj;	  String    myComment    =    getCommentName()    +   ":   "    +    obj;    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
12	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  obj.getValue();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ": "  +  obj.getValue();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ": "  +  obj.getValue();	  String    myComment    =    getCommentName()    +   ":   "    +    obj;    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
13	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getImmediateParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getImmediateParent();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getImmediateParent();	  String    myComment    =    getImmediateParent()    +    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
14	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent()  /  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent()  /  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent()  /  1;	  String    myComment    =    getImmediateParent()    +    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
15	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getValue();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getValue();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getValue();	  String    myComment    =    getImmediateParent()    +    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
16	[BUG]  [BUGGY]  String  myComment  =(this.obj!=  null)?  null  :  this.obj.getComment();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(this.obj!=  null)?  null  :  this.obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(this.obj!=  null)?  null  :  this.obj.getComment();	  String    myComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
17	[BUG]  [BUGGY]  String  myComment  =(this.obj  ==  null)?  null  :  this.obj.getComment();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(this.obj  ==  null)?  null  :  this.obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(this.obj  ==  null)?  null  :  this.obj.getComment();	  String    myComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
18	[BUG]  [BUGGY]  String  myComment  =  this.obj!=  null?  null  :  this.obj.getComment();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj!=  null?  null  :  this.obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj!=  null?  null  :  this.obj.getComment();	  String    myComment    =    this.obj.getComment();    	non-compiled	[CE]  ')'  expected	116	None	replace
19	[BUG]  [BUGGY]  String  myComment  =  this.obj  ==  null?  null  :  this.obj.getComment();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  ==  null?  null  :  this.obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  ==  null?  null  :  this.obj.getComment();	  String    myComment    =    this.obj.getComment();    	non-compiled	[CE]  ')'  expected	116	None	replace
20	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  yourComment  =  getName();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  yourComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  yourComment  =  getName();  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
21	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  yourComment  =  getName();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  yourComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getName();  yourComment  =  getName();  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
22	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  yourComment  =  getName();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  yourComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  yourComment  =  getName();  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
23	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
24	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  yourComment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  yourComment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  yourComment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
25	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getName();  if(myComment!=  null)  {  return  false;  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
26	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)+  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)+  2;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)+  2;	  String    myComment    =    getComment().equals(otherName)+    1;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
27	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)/  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)/  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)/  1;	  String    myComment    =    getComment().equals(otherName)+    1;    	non-compiled	[CE]  ')'  expected	102	None	replace
28	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)+  3;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)+  3;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)+  3;	  String    myComment    =    getComment().equals(otherName)+    1;    	non-compiled	[CE]  ')'  expected	102	None	replace
29	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)+  4;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)+  4;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)+  4;	  String    myComment    =    getComment().equals(otherName)+    1;    	non-compiled	[CE]  ')'  expected	102	None	replace
30	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName)+  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName)+  1;	  String    myComment    =    getComment().equals(otherName)+    1;    	non-compiled	[CE]  ')'  expected	102	None	replace
31	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)-  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)-  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)-  1;	  String    myComment    =    getComment().equals(otherName)+    1;    	non-compiled	[CE]  ')'  expected	102	None	replace
32	[BUG]  [BUGGY]  String  myComment  =(other  ==  null)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(other  ==  null)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(other  ==  null)?  null  :  other.getComment();	  String    myComment    =(obj    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	41	None	replace
33	[BUG]  [BUGGY]  String  myComment  =(other!=  null)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(other!=  null)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(other!=  null)?  null  :  other.getComment();	  String    myComment    =(obj    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	41	None	replace
34	[BUG]  [BUGGY]  Object  myComment  =(other  ==  null)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =(other  ==  null)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =(other  ==  null)?  null  :  other.getComment();	  String    myComment    =(obj    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	41	None	replace
35	[BUG]  [BUGGY]  String  myComment  =(comment  ==  null)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(comment  ==  null)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(comment  ==  null)?  null  :  other.getComment();	  String    myComment    =(obj    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	41	None	replace
36	[BUG]  [BUGGY]  String  myComment  =  super.equals(otherName)||  super.equals(obj);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(otherName)||  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(otherName)||  super.equals(obj);	  String    myComment    =    super.equals(obj)||    super.equals(obj);    	non-compiled	[CE]  ')'  expected	82	None	replace
37	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj)&&  super.equals(obj);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj)&&  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj)&&  super.equals(obj);	  String    myComment    =    super.equals(obj)||    super.equals(obj);    	non-compiled	[CE]  ')'  expected	82	None	replace
38	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj)||  super.equals(otherName);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj)||  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj)||  super.equals(otherName);	  String    myComment    =    super.equals(obj)||    super.equals(obj);    	non-compiled	[CE]  ')'  expected	82	None	replace
39	[BUG]  [BUGGY]  String  myComment  =  super.equals(otherName)&&  super.equals(obj);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(otherName)&&  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(otherName)&&  super.equals(obj);	  String    myComment    =    super.equals(obj)||    super.equals(obj);    	non-compiled	[CE]  ')'  expected	82	None	replace
40	[BUG]  [BUGGY]  String  myComment  =  obj.equals(super.equals(obj))  &&  super.equals(obj);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj.equals(super.equals(obj))  &&  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj.equals(super.equals(obj))  &&  super.equals(obj);	  String    myComment    =    super.equals(obj)||    super.equals(obj);    	non-compiled	[CE]  ')'  expected	82	None	replace
41	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj)||  super.equalsIgnoreCase(obj);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj)||  super.equalsIgnoreCase(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(obj)||  super.equalsIgnoreCase(obj);	  String    myComment    =    super.equals(obj)||    super.equals(obj);    	non-compiled	[CE]  ')'  expected	82	None	replace
42	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase()  /  1;  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase()  /  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase()  /  1;	  String    myComment    =    getComment().toLowerCase()    +    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
43	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase()  *  1;  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase()  *  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase()  *  1;	  String    myComment    =    getComment().toLowerCase()    +    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
44	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(),  false);  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(),  false);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(),  false);	  String    myComment    =    getComment().toLowerCase()    +    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
45	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(),  1;  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(),  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(),  1;	  String    myComment    =    getComment().toLowerCase()    +    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
46	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  0);  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  0);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  0);	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  ')'  expected	21	None	replace
47	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  obj);  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  obj);	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  ')'  expected	21	None	replace
48	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  null);  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  null);	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  ')'  expected	21	None	replace
49	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH  +  1);  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH  +  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH  +  1);	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  ')'  expected	21	None	replace
50	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  1);  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  1);	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  ')'  expected	21	None	replace
51	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH)+  1;  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH)+  1;	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  ')'  expected	21	None	replace
52	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj.getName());  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj.getName());	  String    myComment    =    super.equals(getName());    	non-compiled	[CE]  ')'  expected	105	None	replace
53	[BUG]  [BUGGY]  String  myComment  =  super.equals(otherName.getName());  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(otherName.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(otherName.getName());	  String    myComment    =    super.equals(getName());    	non-compiled	[CE]  ')'  expected	105	None	replace
54	[BUG]  [BUGGY]  String  myComment  =  getName().equals(super.getName());  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(super.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(super.getName());	  String    myComment    =    super.equals(getName());    	non-compiled	[CE]  ')'  expected	105	None	replace
55	[BUG]  [BUGGY]  String  myComment  =  super.equals(getComment());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(getComment());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(getComment());	  String    myComment    =    super.equals(getName());    	non-compiled	[CE]  ')'  expected	105	None	replace
56	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(obj,  myName);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(obj,  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(obj,  myName);	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  ')'  expected	90	None	replace
57	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  null;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  null;	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  ')'  expected	90	None	replace
58	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(myName);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(myName);	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  ')'  expected	90	None	replace
59	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  getInternalAttributes(otherName);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  getInternalAttributes(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getComment()  :  getInternalAttributes(otherName);	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  ')'  expected	90	None	replace
60	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  null;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  null;	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  ')'  expected	90	None	replace
61	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName)?  null  :  other.getComment();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	109	None	replace
62	[BUG]  [BUGGY]  String  myComment  =  getCommentName().equals(otherName)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().equals(otherName)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().equals(otherName)?  null  :  other.getComment();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	109	None	replace
63	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getQualifiedName();  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getQualifiedName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  null  :  other.getQualifiedName();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	109	None	replace
64	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getSimpleName();  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getSimpleName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  null  :  other.getSimpleName();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	109	None	replace
65	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getEntry();  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getEntry();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  null  :  other.getEntry();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	109	None	replace
66	[BUG]  [BUGGY]  String  myComment  =  gotName();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  gotName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  gotName();	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  ')'  expected	51	None	replace
67	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  ')'  expected	51	None	replace
68	[BUG]  [BUGGY]  boolean  myComment  =  getName();  boolean  myComment  =  gotName();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  boolean  myComment  =  gotName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  boolean  myComment  =  gotName();	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  ')'  expected	51	None	replace
69	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  if(myComment  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  if(myComment  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getName();  if(myComment  ==  null)  {  return  false;  }	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  ')'  expected	51	None	replace
70	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  myComment  =  gotName();  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  myComment  =  gotName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getName();  myComment  =  gotName();  }	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  ')'  expected	51	None	replace
71	[BUG]  [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	null  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	29	None	replace
72	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  mement  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  mement  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  boolean  mement  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	29	None	replace
73	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	29	None	replace
74	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	29	None	replace
75	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	29	None	replace
76	[BUG]  [BUGGY]  null  myComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  null  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	null  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	29	None	replace
77	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  false;  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  false;  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  ')'  expected	45	None	replace
78	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  myComment  =  getName();  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  myComment  =  getName();  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  ')'  expected	45	None	replace
79	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  if(myComment!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  if(myComment!=  null)  {  return  false;  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  ')'  expected	45	None	replace
80	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  if(myComment  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  if(myComment  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  if(myComment  ==  null)  {  return  false;  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  ')'  expected	45	None	replace
81	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  myComment  =  getName();  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  myComment  =  getName();  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  ')'  expected	45	None	replace
82	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  true;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  true;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  true;  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  ')'  expected	45	None	replace
83	[BUG]  [BUGGY]  String  myComment  =  super.equals(otherName)&&!myName.equals(otherName);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(otherName)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(otherName)&&!myName.equals(otherName);	  String    myComment    =    super.equals(obj)&&!myName.equals(obj);    	non-compiled	[CE]  ')'  expected	83	None	replace
84	[BUG]  [BUGGY]  String  myComment  =  super.equals(otherName)&&!myName.equals(obj);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(otherName)&&!myName.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(otherName)&&!myName.equals(obj);	  String    myComment    =    super.equals(obj)&&!myName.equals(obj);    	non-compiled	[CE]  ')'  expected	83	None	replace
85	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj)||!myName.equals(obj);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj)||!myName.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj)||!myName.equals(obj);	  String    myComment    =    super.equals(obj)&&!myName.equals(obj);    	non-compiled	[CE]  ')'  expected	83	None	replace
86	[BUG]  [BUGGY]  Object  myComment  =  getComment().equals(otherName.toString());  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().equals(otherName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().equals(otherName.toString());	  Object    myComment    =    getComment().equals(otherName);    	non-compiled	[CE]  ')'  expected	117	None	replace
87	[BUG]  [BUGGY]  Object  myComment  =  getComment().equalsIgnoreCase(otherName);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().equalsIgnoreCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().equalsIgnoreCase(otherName);	  Object    myComment    =    getComment().equals(otherName);    	non-compiled	[CE]  ')'  expected	117	None	replace
88	[BUG]  [BUGGY]  Object  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName);	  Object    myComment    =    getComment().equals(otherName);    	non-compiled	[CE]  ')'  expected	117	None	replace
89	[BUG]  [BUGGY]  Object  myComment  =  getComment().equals(obj);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().equals(obj);	  Object    myComment    =    getComment().equals(otherName);    	non-compiled	[CE]  ')'  expected	117	None	replace
90	[BUG]  [BUGGY]  Object  myComment  =  getComment().equals(otherName)+  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().equals(otherName)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().equals(otherName)+  1;	  Object    myComment    =    getComment().equals(otherName);    	non-compiled	[CE]  ')'  expected	117	None	replace
91	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName).toString();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName).toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName).toString();	  String    myComment    =    getComment().equals(otherName).toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
92	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName).toString();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName).toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName).toString();	  String    myComment    =    getComment().equals(otherName).toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
93	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName).getName();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName).getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName).getName();	  String    myComment    =    getComment().equals(otherName).toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
94	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.toString();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  null  :  other.toString();	  String    myComment    =    getComment().equals(otherName).toString();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
95	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  otherName.toString();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  otherName.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  null  :  otherName.toString();	  String    myComment    =    getComment().equals(otherName).toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
96	[BUG]  [BUGGY]  String  myComment  =  getCommentName(otherName);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(otherName);	  String    myComment    =    getCommentName(obj);    	non-compiled	[CE]  ')'  expected	94	None	replace
97	[BUG]  [BUGGY]  String  myComment  =  getCommentName(obj,  myName);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(obj,  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(obj,  myName);	  String    myComment    =    getCommentName(obj);    	non-compiled	[CE]  ')'  expected	94	None	replace
98	[BUG]  [BUGGY]  String  myComment  =  getCommentName(obj).toString();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(obj).toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(obj).toString();	  String    myComment    =    getCommentName(obj);    	non-compiled	[CE]  ')'  expected	94	None	replace
99	[BUG]  [BUGGY]  String  myComment  =  getCommentName(obj).toLowerCase();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(obj).toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(obj).toLowerCase();	  String    myComment    =    getCommentName(obj);    	non-compiled	[CE]  ')'  expected	94	None	replace
100	[BUG]  [BUGGY]  String  myComment  =  getCommentName(obj.getClass());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(obj.getClass());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(obj.getClass());	  String    myComment    =    getCommentName(obj);    	non-compiled	[CE]  ')'  expected	94	None	replace
101	[BUG]  [BUGGY]  String  myComment  =  getCommentName(myName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(myName);	  String    myComment    =    getCommentName(obj);    	non-compiled	[CE]  ')'  expected	94	None	replace
102	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	123	None	replace
103	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	123	None	replace
104	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	123	None	replace
105	[BUG]  [BUGGY]  String  myComment  =  getExternalAttributes().toString();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalAttributes().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalAttributes().toString();	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	92	None	replace
106	[BUG]  [BUGGY]  String  myComment  =  getExternalAttributes(otherName);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalAttributes(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalAttributes(otherName);	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	92	None	replace
107	[BUG]  [BUGGY]  String  myComment  =  getExternalAttributes(obj);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalAttributes(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalAttributes(obj);	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	92	None	replace
108	[BUG]  [BUGGY]  String  myComment  =  getExternalAttributes().trim();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalAttributes().trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalAttributes().trim();	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	92	None	replace
109	[BUG]  [BUGGY]  String  myComment  =  getExternalName();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalName();	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	92	None	replace
110	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes()  /  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes()  /  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes()  /  1;	  String    myComment    =    getInternalAttributes()    +    1;    	non-compiled	[CE]  ')'  expected	11	None	replace
111	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().length;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().length;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().length;	  String    myComment    =    getInternalAttributes()    +    1;    	non-compiled	[CE]  ')'  expected	11	None	replace
112	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes()  -  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes()  -  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes()  -  1;	  String    myComment    =    getInternalAttributes()    +    1;    	non-compiled	[CE]  ')'  expected	11	None	replace
113	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes()  *  1;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes()  *  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes()  *  1;	  String    myComment    =    getInternalAttributes()    +    1;    	non-compiled	[CE]  ')'  expected	11	None	replace
114	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName.getQualifiedName());  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName.getQualifiedName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName.getQualifiedName());	  String    myComment    =    getComment().equals(otherName.toString());    	non-compiled	[CE]  ')'  expected	14	None	replace
115	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName.toString(),  otherName.toString());  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName.toString(),  otherName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName.toString(),  otherName.toString());	  String    myComment    =    getComment().equals(otherName.toString());    	non-compiled	[CE]  ')'  expected	14	None	replace
116	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName.getKey());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName.getKey());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName.getKey());	  String    myComment    =    getComment().equals(otherName.toString());    	non-compiled	[CE]  ')'  expected	14	None	replace
117	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName.toString(),  myName);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName.toString(),  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName.toString(),  myName);	  String    myComment    =    getComment().equals(otherName.toString());    	non-compiled	[CE]  ')'  expected	14	None	replace
118	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName.toString()  + "_ ");  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName.toString()  + "_ ");  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName.toString()  + "_ ");	  String    myComment    =    getComment().equals(otherName.toString());    	non-compiled	[CE]  ')'  expected	14	None	replace
119	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
120	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
121	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
122	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
123	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
124	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
125	[BUG]  [BUGGY]  String  myComment  =  getName().toLowerCase()  +  1;  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().toLowerCase()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().toLowerCase()  +  1;	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  ')'  expected	61	None	replace
126	[BUG]  [BUGGY]  String  myComment  =  getName().toLowerCase(Locale.ENGLISH);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().toLowerCase(Locale.ENGLISH);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().toLowerCase(Locale.ENGLISH);	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  ')'  expected	61	None	replace
127	[BUG]  [BUGGY]  String  myComment  =  getName().toUpperCase();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().toUpperCase();	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  ')'  expected	61	None	replace
128	[BUG]  [BUGGY]  String  myComment  =  getName().toLowerCase(Locale.getDefault());  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().toLowerCase(Locale.getDefault());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().toLowerCase(Locale.getDefault());	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  ')'  expected	61	None	replace
129	[BUG]  [BUGGY]  String  myComment  =  getName().toLowerCase(Locale.US);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().toLowerCase(Locale.US);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().toLowerCase(Locale.US);	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  ')'  expected	61	None	replace
130	[BUG]  [BUGGY]  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
131	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(name))  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(name))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(name))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
132	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  throw  new  IllegalArgumentException( " ");  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
133	[BUG]  [BUGGY]  boolean  myComment  =  getName();  boolean  comment  =  getName();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  boolean  comment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  boolean  comment  =  getName();	  String    myComment    =    getName();    String    comment    =    getName();    	non-compiled	[CE]  ';'  expected	50	None	replace
134	[BUG]  [BUGGY]  String  myComment  =  getQualifiedName();  String  comment  =  getName();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getQualifiedName();  String  comment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getQualifiedName();  String  comment  =  getName();	  String    myComment    =    getName();    String    comment    =    getName();    	non-compiled	[CE]  ';'  expected	50	None	replace
135	[BUG]  [BUGGY]  boolean  myComment  =  getName();  String  comment  =  getName();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  String  comment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  String  comment  =  getName();	  String    myComment    =    getName();    String    comment    =    getName();    	non-compiled	[CE]  ';'  expected	50	None	replace
136	[BUG]  [BUGGY]  Object  myComment  =  getName();  String  comment  =  getName();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getName();  String  comment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getName();  String  comment  =  getName();	  String    myComment    =    getName();    String    comment    =    getName();    	non-compiled	[CE]  ';'  expected	50	None	replace
137	[BUG]  [BUGGY]  String  comment  =  getName();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  comment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  comment  =  getName();	  String    myComment    =    getName();    String    comment    =    getName();    	non-compiled	[CE]  ';'  expected	50	None	replace
138	[BUG]  [BUGGY]  String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(name!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
139	[BUG]  [BUGGY]  ||  obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  ||  obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	||  obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(name!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
140	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(name!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
141	[BUG]  [BUGGY]  ||  obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  ||  obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	||  obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(name!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
142	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  >=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  >=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name  >=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(name!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
143	[BUG]  [BUGGY]  String  myComment  =  getComment(other.getComment(),  myName);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other.getComment(),  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other.getComment(),  myName);	  String    myComment    =    getComment(other.getComment());    	non-compiled	[CE]  ';'  expected	59	None	replace
144	[BUG]  [BUGGY]  String  myComment  =  getComment(obj.getComment());  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj.getComment());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj.getComment());	  String    myComment    =    getComment(other.getComment());    	non-compiled	[CE]  ';'  expected	59	None	replace
145	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName.getComment());  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName.getComment());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName.getComment());	  String    myComment    =    getComment(other.getComment());    	non-compiled	[CE]  ';'  expected	59	None	replace
146	[BUG]  [BUGGY]  char  myComment  =  getComment(other.getComment());  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getComment(other.getComment());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getComment(other.getComment());	  String    myComment    =    getComment(other.getComment());    	non-compiled	[CE]  ';'  expected	59	None	replace
147	[BUG]  [BUGGY]  String  myComment  =  getComment(other.getComment(),  obj);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other.getComment(),  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other.getComment(),  obj);	  String    myComment    =    getComment(other.getComment());    	non-compiled	[CE]  ';'  expected	59	None	replace
148	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes(otherName);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalAttributes(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalAttributes(otherName);	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  ';'  expected	91	None	replace
149	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getExternalAttributes();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getExternalAttributes();	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  ';'  expected	91	None	replace
150	[BUG]  [BUGGY]  String  otherComment  =  getImplicitInternalAttributes();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getImplicitInternalAttributes();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getImplicitInternalAttributes();	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  ';'  expected	91	None	replace
151	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes().get(otherName);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalAttributes().get(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalAttributes().get(otherName);	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  ';'  expected	91	None	replace
152	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes().remove(otherName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalAttributes().remove(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalAttributes().remove(otherName);	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  ')'  expected	91	None	replace
153	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes().toString();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalAttributes().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalAttributes().toString();	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  ';'  expected	91	None	replace
154	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  false);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  false);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  false);	  String    myComment    =    getComment().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  ';'  expected	23	None	replace
155	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.US);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.US);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.US);	  String    myComment    =    getComment().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  ';'  expected	23	None	replace
156	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault()  +  1);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault()  +  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.getDefault()  +  1);	  String    myComment    =    getComment().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  ';'  expected	23	None	replace
157	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  null);  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  null);	  String    myComment    =    getComment().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  ';'  expected	23	None	replace
158	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  true);  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  true);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  true);	  String    myComment    =    getComment().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  ';'  expected	23	None	replace
159	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(myName);    	non-compiled	[CE]  ';'  expected	69	None	replace
160	[BUG]  [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(myName);    	non-compiled	[CE]  ';'  expected	69	None	replace
161	[BUG]  [BUGGY]  String  myComment  =  getName().trim().toLowerCase();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().trim().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().trim().toLowerCase();	  String    myComment    =    getName().trim();    	non-compiled	[CE]  ')'  expected	63	None	replace
162	[BUG]  [BUGGY]  String  myComment  =  getName().substring(0,  obj.length()  -  1);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().substring(0,  obj.length()  -  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().substring(0,  obj.length()  -  1);	  String    myComment    =    getName().trim();    	non-compiled	[CE]  ')'  expected	63	None	replace
163	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName.getName());  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName.getName());	  String    myComment    =    getName().trim();    	non-compiled	[CE]  ')'  expected	63	None	replace
164	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName);	  String    myComment    =    getName().trim();    	non-compiled	[CE]  ')'  expected	63	None	replace
165	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName).toString();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName).toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName).toString();	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  ')'  expected	78	None	replace
166	[BUG]  [BUGGY]  String  myComment  =  getComment(obj),  myName.toString();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj),  myName.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj),  myName.toString();	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  ')'  expected	78	None	replace
167	[BUG]  [BUGGY]  String  myComment  =  getComment(obj).getName();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj).getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj).getName();	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  ')'  expected	78	None	replace
168	[BUG]  [BUGGY]  String  myComment  =  getComment(obj).toString().trim();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj).toString().trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj).toString().trim();	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  ')'  expected	78	None	replace
169	[BUG]  [BUGGY]  String  myComment  =  getComment(obj).toString()  + "n ";  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj).toString()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj).toString()  + "n ";	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  ')'  expected	78	None	replace
170	[BUG]  [BUGGY]  String  myComment  =  getComment(obj).toUpperCase();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj).toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj).toUpperCase();	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  ')'  expected	78	None	replace
171	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().get(otherName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().get(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().get(otherName);	  String    myComment    =    getInternalAttributes().remove(otherName);    	non-compiled	[CE]  ')'  expected	13	None	replace
172	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().get(myName);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().get(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().get(myName);	  String    myComment    =    getInternalAttributes().remove(otherName);    	non-compiled	[CE]  ')'  expected	13	None	replace
173	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().remove(myName);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().remove(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().remove(myName);	  String    myComment    =    getInternalAttributes().remove(otherName);    	non-compiled	[CE]  ')'  expected	13	None	replace
174	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().elementAt(otherName);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().elementAt(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().elementAt(otherName);	  String    myComment    =    getInternalAttributes().remove(otherName);    	non-compiled	[CE]  ')'  expected	13	None	replace
175	[BUG]  [BUGGY]  String  myComment  =  getInternalName().remove(otherName);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalName().remove(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalName().remove(otherName);	  String    myComment    =    getInternalAttributes().remove(otherName);    	non-compiled	[CE]  ')'  expected	13	None	replace
176	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().toString()  + "n ";  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().toString()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().toString()  + "n ";	  String    myComment    =    getImmediateParent().toString();    	non-compiled	[CE]  ')'  expected	74	None	replace
177	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.toString();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.toString();	  String    myComment    =    getImmediateParent().toString();    	non-compiled	[CE]  ')'  expected	74	None	replace
178	[BUG]  [BUGGY]  String  myComment  =  getImmediateName().toString();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName().toString();	  String    myComment    =    getImmediateParent().toString();    	non-compiled	[CE]  ')'  expected	74	None	replace
179	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().commentToString();  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().commentToString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().commentToString();	  String    myComment    =    getImmediateParent().toString();    	non-compiled	[CE]  ')'  expected	74	None	replace
180	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  otherName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  otherName);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  ')'  expected	60	None	replace
181	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  b);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  b);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  b);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  ')'  expected	60	None	replace
182	[BUG]  [BUGGY]  String  myComment  =  getComment(gpb,  obj);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(gpb,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(gpb,  obj);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  ')'  expected	60	None	replace
183	[BUG]  [BUGGY]  String  myComment  =  getComment(other,  gpb);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other,  gpb);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other,  gpb);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  ')'  expected	60	None	replace
184	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName,  gpb);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName,  gpb);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName,  gpb);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  ')'  expected	60	None	replace
185	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  gpb,  myName);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  gpb,  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  gpb,  myName);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  ')'  expected	60	None	replace
186	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  other.getName());  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  other.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  other.getName());	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  ')'  expected	60	None	replace
187	[BUG]  [BUGGY]  String  myComment  =  getComment(other.getKey());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other.getKey());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other.getKey());	  String    myComment    =    getComment(obj.getKey());    	non-compiled	[CE]  ')'  expected	111	None	replace
188	[BUG]  [BUGGY]  String  myComment  =  getComment(obj.getKey(),  myName);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj.getKey(),  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj.getKey(),  myName);	  String    myComment    =    getComment(obj.getKey());    	non-compiled	[CE]  ')'  expected	111	None	replace
189	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName.getKey());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName.getKey());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName.getKey());	  String    myComment    =    getComment(obj.getKey());    	non-compiled	[CE]  ')'  expected	111	None	replace
190	[BUG]  [BUGGY]  String  myComment  =  getComment(obj.getValue());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj.getValue());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj.getValue());	  String    myComment    =    getComment(obj.getKey());    	non-compiled	[CE]  ')'  expected	111	None	replace
191	[BUG]  [BUGGY]  String  myComment  =  getComment(obj.getKey()  +  1);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj.getKey()  +  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj.getKey()  +  1);	  String    myComment    =    getComment(obj.getKey());    	non-compiled	[CE]  ')'  expected	111	None	replace
192	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getSimpleName();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getSimpleName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getSimpleName();	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  ')'  expected	71	None	replace
193	[BUG]  [BUGGY]  String  myComment  =  other.getImmediateParent().getName();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getImmediateParent().getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getImmediateParent().getName();	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  ')'  expected	71	None	replace
194	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getName()  + "n ";  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getName()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getName()  + "n ";	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  ')'  expected	71	None	replace
195	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().commentToName();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().commentToName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().commentToName();	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  ')'  expected	71	None	replace
196	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(otherName);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(otherName);	  String    myComment    =    super.equals(otherName);    	non-compiled	[CE]  ')'  expected	65	None	replace
197	[BUG]  [BUGGY]  String  myComment  =  super.equals(otherName,  obj);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(otherName,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(otherName,  obj);	  String    myComment    =    super.equals(otherName);    	non-compiled	[CE]  ')'  expected	65	None	replace
198	[BUG]  [BUGGY]  String  myComment  =  super.equals(otherName)&&!myComment.equals(otherName);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(otherName)&&!myComment.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(otherName)&&!myComment.equals(otherName);	  String    myComment    =    super.equals(otherName);    	non-compiled	[CE]  ')'  expected	65	None	replace
199	[BUG]  [BUGGY]  String  myComment  =  getSimpleName().toLowerCase();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName().toLowerCase();	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  ')'  expected	64	None	replace
200	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  + "_ "  +  obj.getClass().getName();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  + "_ "  +  obj.getClass().getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  + "_ "  +  obj.getClass().getName();	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  ')'  expected	64	None	replace
201	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  + ": ";  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  + ": ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  + ": ";	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  ')'  expected	64	None	replace
202	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  + "n ";  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  + "n ";	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  ')'  expected	64	None	replace
203	[BUG]  [BUGGY]  String  myComment  =  getSimpleName().trim();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName().trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName().trim();	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  ')'  expected	64	None	replace
204	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	126	None	replace
205	[BUG]  [BUGGY]  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	126	None	replace
206	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	126	None	replace
207	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	126	None	replace
208	[BUG]  [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(otherName,  obj);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(otherName,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equalsIgnoreCase(otherName,  obj);	  String    myComment    =    getComment().equalsIgnoreCase(otherName);    	non-compiled	[CE]  ')'  expected	17	None	replace
209	[BUG]  [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(myName);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equalsIgnoreCase(myName);	  String    myComment    =    getComment().equalsIgnoreCase(otherName);    	non-compiled	[CE]  ')'  expected	17	None	replace
210	[BUG]  [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(otherName,  name);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(otherName,  name);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equalsIgnoreCase(otherName,  name);	  String    myComment    =    getComment().equalsIgnoreCase(otherName);    	non-compiled	[CE]  ')'  expected	17	None	replace
211	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myComment.equalsIgnoreCase(otherName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myComment.equalsIgnoreCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)&&!myComment.equalsIgnoreCase(otherName);	  String    myComment    =    getComment().equalsIgnoreCase(otherName);    	non-compiled	[CE]  ')'  expected	17	None	replace
212	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  myComment  =  getComment().toUpperCase();  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  myComment  =  getComment().toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  boolean  myComment  =  getComment().toUpperCase();	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  ')'  expected	27	None	replace
213	[BUG]  [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	null  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  ')'  expected	27	None	replace
214	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  myComment  =  getComment().toUpperCase();  }  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  myComment  =  getComment().toUpperCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  myComment  =  getComment().toUpperCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  ')'  expected	27	None	replace
215	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  ')'  expected	27	None	replace
216	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  if(myComment  ==  null)  {  String  myComment  =  getComment().toUpperCase();  }  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  if(myComment  ==  null)  {  String  myComment  =  getComment().toUpperCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  if(myComment  ==  null)  {  String  myComment  =  getComment().toUpperCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  ')'  expected	27	None	replace
217	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase()  +  1;  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase()  +  1;	  String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
218	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase(obj);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase(obj);	  String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
219	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase(otherName);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase(otherName);	  String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
220	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase(locale);  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase(locale);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase(locale);	  String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  ')'  expected	20	None	replace
221	[BUG]  [BUGGY]  if(otherName  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(otherName  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(otherName  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
222	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  myComment  =  getComment().toLowerCase();  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  boolean  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  not  a  statement	24	None	replace
223	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  not  a  statement	24	None	replace
224	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  myComment  =  getComment().toLowerCase();  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  not  a  statement	24	None	replace
225	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.getName();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  null  :  obj.getName();	  String    myComment    =    obj!=    null?    null    :    obj.getComment();    	non-compiled	[CE]  not  a  statement	32	None	replace
226	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  null  :  obj.getName();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  null  :  obj.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  null  :  obj.getName();	  String    myComment    =    obj!=    null?    null    :    obj.getComment();    	non-compiled	[CE]  not  a  statement	32	None	replace
227	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
228	[BUG]  [BUGGY]  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
229	[BUG]  [BUGGY]  String  myComment  =(comment  ==  null)?  null  :  getComment().toString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(comment  ==  null)?  null  :  getComment().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(comment  ==  null)?  null  :  getComment().toString();	  String    myComment    =(comment    ==    null)?    null    :    getComment();    	non-compiled	[CE]  not  a  statement	97	None	replace
230	[BUG]  [BUGGY]  String  myComment  =(comment!=  null)?  null  :  getComment();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(comment!=  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(comment!=  null)?  null  :  getComment();	  String    myComment    =(comment    ==    null)?    null    :    getComment();    	non-compiled	[CE]  not  a  statement	97	None	replace
231	[BUG]  [BUGGY]  String  myComment  =(otherName  ==  null)?  null  :  getComment();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(otherName  ==  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(otherName  ==  null)?  null  :  getComment();	  String    myComment    =(comment    ==    null)?    null    :    getComment();    	non-compiled	[CE]  not  a  statement	97	None	replace
232	[BUG]  [BUGGY]  String  myComment  =(myComment  ==  null)?  null  :  getComment();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myComment  ==  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myComment  ==  null)?  null  :  getComment();	  String    myComment    =(comment    ==    null)?    null    :    getComment();    	non-compiled	[CE]  not  a  statement	97	None	replace
233	[BUG]  [BUGGY]  String  myComment  =(otherName  ==  null)?  null  :  getComment().equals(otherName);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(otherName  ==  null)?  null  :  getComment().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(otherName  ==  null)?  null  :  getComment().equals(otherName);	  String    myComment    =(obj    ==    null)?    null    :    getComment().equals(otherName);    	non-compiled	[CE]  not  a  statement	108	None	replace
234	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString().equals(otherName);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().toString().equals(otherName);	  String    myComment    =(obj    ==    null)?    null    :    getComment().equals(otherName);    	non-compiled	[CE]  not  a  statement	108	None	replace
235	[BUG]  [BUGGY]  String  myComment  =(comment  ==  null)?  null  :  getComment().equals(otherName);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(comment  ==  null)?  null  :  getComment().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(comment  ==  null)?  null  :  getComment().equals(otherName);	  String    myComment    =(obj    ==    null)?    null    :    getComment().equals(otherName);    	non-compiled	[CE]  not  a  statement	108	None	replace
236	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().getName().equals(otherName);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().getName().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().getName().equals(otherName);	  String    myComment    =(obj    ==    null)?    null    :    getComment().equals(otherName);    	non-compiled	[CE]  not  a  statement	108	None	replace
237	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  getComment().equals(otherName);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  getComment().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  null  :  getComment().equals(otherName);	  String    myComment    =(obj    ==    null)?    null    :    getComment().equals(otherName);    	non-compiled	[CE]  not  a  statement	108	None	replace
238	[BUG]  [BUGGY]  String  myComment  =(otherName  ==  null)?  null  :  getComment().equals(obj);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(otherName  ==  null)?  null  :  getComment().equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(otherName  ==  null)?  null  :  getComment().equals(obj);	  String    myComment    =(obj    ==    null)?    null    :    getComment().equals(otherName);    	non-compiled	[CE]  not  a  statement	108	None	replace
239	[BUG]  [BUGGY]  boolean  myComment  =  getName();  boolean  myComment  =  getName();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  boolean  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  boolean  myComment  =  getName();	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  ')'  expected	49	None	replace
240	[BUG]  [BUGGY]  boolean  myComment  =  getName();  boolean  myComment  =  getName());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  boolean  myComment  =  getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  boolean  myComment  =  getName());	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  ')'  expected	49	None	replace
241	[BUG]  [BUGGY]  boolean  myComment  =  getName();  String  myComment  =  getName();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  String  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  String  myComment  =  getName();	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  ')'  expected	49	None	replace
242	[BUG]  [BUGGY]  boolean  myComment  =  getName();  String  myComment  =  getName());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  String  myComment  =  getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  String  myComment  =  getName());	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  not  a  statement	49	None	replace
243	[BUG]  [BUGGY]  char  myComment  =  getName();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getName();	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  ')'  expected	49	None	replace
244	[BUG]  [BUGGY]  char[]  myComment  =  getName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char[]  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char[]  myComment  =  getName();	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  not  a  statement	49	None	replace
245	[BUG]  [BUGGY]  char  myComment  =  getComment(other);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getComment(other);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getComment(other);	  String    myComment    =    getComment(other);    	non-compiled	[CE]  not  a  statement	57	None	replace
246	[BUG]  [BUGGY]  String  myComment  =  getCommentName(other);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(other);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(other);	  String    myComment    =    getComment(other);    	non-compiled	[CE]  not  a  statement	57	None	replace
247	[BUG]  [BUGGY]  String  myComment  =  getComment(null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(null);	  String    myComment    =    getComment(other);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
248	[BUG]  [BUGGY]  String  myComment  =  getComment(other,  obj);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other,  obj);	  String    myComment    =    getComment(other);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
249	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)||!myComment.equals(otherName);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)||!myComment.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)||!myComment.equals(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
250	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName)&&!myComment.equals(otherName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName)&&!myComment.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName)&&!myComment.equals(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
251	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName)&&!myComment.equals(otherName);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName)&&!myComment.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName)&&!myComment.equals(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
252	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName)+  1;	  String    myComment    =    getComment(obj)+    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
253	[BUG]  [BUGGY]  String  myComment  =  getComment(obj)+  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj)+  2;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj)+  2;	  String    myComment    =    getComment(obj)+    1;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
254	[BUG]  [BUGGY]  String  myComment  =  getComment(obj)/  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj)/  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj)/  1;	  String    myComment    =    getComment(obj)+    1;    	non-compiled	[CE]  ')'  expected	79	None	replace
255	[BUG]  [BUGGY]  String  myComment  =  getComment(obj)+  1L;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj)+  1L;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj)+  1L;	  String    myComment    =    getComment(obj)+    1;    	non-compiled	[CE]  ')'  expected	79	None	replace
256	[BUG]  [BUGGY]  String  myComment  =  getComment(obj)+  3;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj)+  3;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj)+  3;	  String    myComment    =    getComment(obj)+    1;    	non-compiled	[CE]  ')'  expected	79	None	replace
257	[BUG]  [BUGGY]  String  myComment  =  getComment(obj)+  4;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj)+  4;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj)+  4;	  String    myComment    =    getComment(obj)+    1;    	non-compiled	[CE]  ')'  expected	79	None	replace
258	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
259	[BUG]  [BUGGY]  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
260	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  throw  new  IllegalArgumentException( " ");  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
261	[BUG]  [BUGGY]  String  myComment  =  getInternalName().equals(otherName);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalName().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalName().equals(otherName);	  String    myComment    =    getInternalAttributes().equals(otherName);    	non-compiled	[CE]  ')'  expected	107	None	replace
262	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName.toString());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(otherName.toString());	  String    myComment    =    getInternalAttributes().equals(otherName);    	non-compiled	[CE]  ')'  expected	107	None	replace
263	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)&&!myComment.equals(otherName);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)&&!myComment.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(otherName)&&!myComment.equals(otherName);	  String    myComment    =    getInternalAttributes().equals(otherName);    	non-compiled	[CE]  ')'  expected	107	None	replace
264	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(myName);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(myName);	  String    myComment    =    getInternalAttributes().equals(otherName);    	non-compiled	[CE]  ')'  expected	107	None	replace
265	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName.getName());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(otherName.getName());	  String    myComment    =    getInternalAttributes().equals(otherName);    	non-compiled	[CE]  ')'  expected	107	None	replace
266	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName,  obj);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName,  obj);	  String    myComment    =    getComment(otherName);    	non-compiled	[CE]  ')'  expected	55	None	replace
267	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName.toString());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName.toString());	  String    myComment    =    getComment(otherName);    	non-compiled	[CE]  ')'  expected	55	None	replace
268	[BUG]  [BUGGY]  String  myComment  =  getComment(myName);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(myName);	  String    myComment    =    getComment(otherName);    	non-compiled	[CE]  ')'  expected	55	None	replace
269	[BUG]  [BUGGY]  char  myComment  =  getComment(otherName);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getComment(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getComment(otherName);	  String    myComment    =    getComment(otherName);    	non-compiled	[CE]  ')'  expected	55	None	replace
270	[BUG]  [BUGGY]  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
271	[BUG]  [BUGGY]  Integer  myComment  =(Integer)obj.getValue();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Integer  myComment  =(Integer)obj.getValue();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Integer  myComment  =(Integer)obj.getValue();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
272	[BUG]  [BUGGY]  Integer  myComment  =(Integer)obj.getClass().getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Integer  myComment  =(Integer)obj.getClass().getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Integer  myComment  =(Integer)obj.getClass().getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
273	[BUG]  [BUGGY]  Integer  myComment  =(Integer)obj.getValue();  if(!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Integer  myComment  =(Integer)obj.getValue();  if(!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Integer  myComment  =(Integer)obj.getValue();  if(!myComment.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
274	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getCommentName().toLowerCase();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getCommentName().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getCommentName().toLowerCase();	  String    myComment    =(obj    ==    null)?    null    :    getCommentName();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
275	[BUG]  [BUGGY]  String  myComment  =(obj!=  null)?  null  :  getCommentName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj!=  null)?  null  :  getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj!=  null)?  null  :  getCommentName();	  String    myComment    =(obj    ==    null)?    null    :    getCommentName();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
276	[BUG]  [BUGGY]  String  myComment  =(other  ==  null)?  null  :  getCommentName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(other  ==  null)?  null  :  getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(other  ==  null)?  null  :  getCommentName();	  String    myComment    =(obj    ==    null)?    null    :    getCommentName();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
277	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  getCommentName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  null  :  getCommentName();	  String    myComment    =(obj    ==    null)?    null    :    getCommentName();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
278	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
279	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
280	[BUG]  [BUGGY]  if(obj!=  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj!=  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj!=  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
281	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  if(obj  instanceof  ZipArchiveEntry)  {  return  false;  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
282	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
283	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
284	[BUG]  [BUGGY]  String  myComment  =  getname();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getname();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getname();	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
285	[BUG]  [BUGGY]  String  myComment  =  getQualifiedName();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getQualifiedName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getQualifiedName();	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
286	[BUG]  [BUGGY]  String  myComment  =  getFullName();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getFullName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getFullName();	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
287	[BUG]  [BUGGY]  String  myComment  =  getString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getString();	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
288	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  /  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  /  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  /  1;	  String    myComment    =    getCommentName()    +    1;    	non-compiled	[CE]  ')'  expected	54	None	replace
289	[BUG]  [BUGGY]  String  myComment  =  getCommentName().toString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().toString();	  String    myComment    =    getCommentName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
290	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  myName,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  myName,  null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  myName,  null);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
291	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  myName,  name);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  myName,  name);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  myName,  name);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  ')'  expected	56	None	replace
292	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  id);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  id);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  id);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  ')'  expected	56	None	replace
293	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  entryName);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  entryName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  entryName);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  ')'  expected	56	None	replace
294	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  this.entryName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  this.entryName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  this.entryName);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  ')'  expected	56	None	replace
295	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getName().toLowerCase();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getName().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getName().toLowerCase();	  String    myComment    =(obj    ==    null)?    null    :    getName();    	non-compiled	[CE]  ')'  expected	40	None	replace
296	[BUG]  [BUGGY]  String  myComment  =(obj!=  null)?  null  :  getName();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj!=  null)?  null  :  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj!=  null)?  null  :  getName();	  String    myComment    =(obj    ==    null)?    null    :    getName();    	non-compiled	[CE]  ')'  expected	40	None	replace
297	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getName().toString();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getName().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getName().toString();	  String    myComment    =(obj    ==    null)?    null    :    getName();    	non-compiled	[CE]  ')'  expected	40	None	replace
298	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getEntryName();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getEntryName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getEntryName();	  String    myComment    =(obj    ==    null)?    null    :    getName();    	non-compiled	[CE]  ')'  expected	40	None	replace
299	[BUG]  [BUGGY]  String  myComment  =(other  ==  null)?  null  :  getName();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(other  ==  null)?  null  :  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(other  ==  null)?  null  :  getName();	  String    myComment    =(obj    ==    null)?    null    :    getName();    	non-compiled	[CE]  ')'  expected	40	None	replace
300	[BUG]  [BUGGY]  Object  myComment  =(obj  ==  null)?  null  :  getName();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =(obj  ==  null)?  null  :  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =(obj  ==  null)?  null  :  getName();	  String    myComment    =(obj    ==    null)?    null    :    getName();    	non-compiled	[CE]  ')'  expected	40	None	replace
301	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  noComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  noComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  Object  noComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	28	None	replace
302	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  noComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  noComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  boolean  noComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	28	None	replace
303	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	28	None	replace
304	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase();  String  noComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase();  String  noComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase();  String  noComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	28	None	replace
305	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase();  if(noComment!=  null)  {  noComment  =  getComment().toLowerCase();  }  [CE]  ')'  expected  [FE]                        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase();  if(noComment!=  null)  {  noComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase();  if(noComment!=  null)  {  noComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	28	None	replace
306	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getClass();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getClass();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  getName()  :  obj.getClass();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	113	None	replace
307	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getEntry();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getEntry();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  getName()  :  obj.getEntry();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	113	None	replace
308	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getName();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  getName()  :  obj.getName();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	113	None	replace
309	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getSimpleName();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getSimpleName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  getName()  :  obj.getSimpleName();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	113	None	replace
310	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getQualifiedName();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getQualifiedName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  getName()  :  obj.getQualifiedName();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	113	None	replace
311	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getKey();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getKey();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  getName()  :  obj.getKey();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	113	None	replace
312	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  other.getComment();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  getName()  :  other.getComment();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	113	None	replace
313	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(otherName,  obj);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(otherName,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(otherName,  obj);	  String    myComment    =    getInternalAttributes(otherName);    	non-compiled	[CE]  ')'  expected	9	None	replace
314	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(obj,  otherName);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(obj,  otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(obj,  otherName);	  String    myComment    =    getInternalAttributes(otherName);    	non-compiled	[CE]  ')'  expected	9	None	replace
315	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(otherName,  null);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(otherName,  null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(otherName,  null);	  String    myComment    =    getInternalAttributes(otherName);    	non-compiled	[CE]  ')'  expected	9	None	replace
316	[BUG]  [BUGGY]  char  myComment  =  getInternalAttributes(otherName);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getInternalAttributes(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getInternalAttributes(otherName);	  String    myComment    =    getInternalAttributes(otherName);    	non-compiled	[CE]  ')'  expected	9	None	replace
317	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    null;    	non-compiled	[CE]  ')'  expected	35	None	replace
318	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    null;    	non-compiled	[CE]  ')'  expected	35	None	replace
319	[BUG]  [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    null;    	non-compiled	[CE]  ')'  expected	35	None	replace
320	[BUG]  [BUGGY]  String  myComment  =  other.getComment()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getComment()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getComment()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    null;    	non-compiled	[CE]  ')'  expected	35	None	replace
321	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getComment()    :    null;    	non-compiled	[CE]  ')'  expected	34	None	replace
322	[BUG]  [BUGGY]  String  myComment  =  other.getComment()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getComment()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getComment()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getComment()    :    null;    	non-compiled	[CE]  ')'  expected	34	None	replace
323	[BUG]  [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getComment()    :    null;    	non-compiled	[CE]  ')'  expected	34	None	replace
324	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName)?  getComment()  :  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName)?  getComment()  :  null;	  String    myComment    =    getComment().equals(otherName)?    getComment()    :    null;    	non-compiled	[CE]  ')'  expected	77	None	replace
325	[BUG]  [BUGGY]  String  myComment  =  getCommentName().equals(otherName)?  getComment()  :  null;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().equals(otherName)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().equals(otherName)?  getComment()  :  null;	  String    myComment    =    getComment().equals(otherName)?    getComment()    :    null;    	non-compiled	[CE]  ')'  expected	77	None	replace
326	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  getCommentType()  :  null;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  getCommentType()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  getCommentType()  :  null;	  String    myComment    =    getComment().equals(otherName)?    getComment()    :    null;    	non-compiled	[CE]  ')'  expected	77	None	replace
327	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  getComment()  +  1  :  null;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  getComment()  +  1  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  getComment()  +  1  :  null;	  String    myComment    =    getComment().equals(otherName)?    getComment()    :    null;    	non-compiled	[CE]  ')'  expected	77	None	replace
328	[BUG]  [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(obj);    	non-compiled	[CE]  ')'  expected	68	None	replace
329	[BUG]  [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(other.getName());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(other.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(other.getName());	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(obj);    	non-compiled	[CE]  ')'  expected	68	None	replace
330	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(other.getName());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(other.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(other.getName());	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(obj);    	non-compiled	[CE]  ')'  expected	68	None	replace
331	[BUG]  [BUGGY]  String  myComment  =  other  ==  null?  null  :  other.getComment();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other  ==  null?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other  ==  null?  null  :  other.getComment();	  String    myComment    =    obj    ==    null?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	101	None	replace
332	[BUG]  [BUGGY]  String  myComment  =  other!=  null?  null  :  other.getComment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other!=  null?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other!=  null?  null  :  other.getComment();	  String    myComment    =    obj    ==    null?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
333	[BUG]  [BUGGY]  String  myComment  =  getComment().toString()  + "/ ";  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toString()  + "/ ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toString()  + "/ ";	  String    myComment    =    getComment().toString()    +   "n   ";    	non-compiled	[CE]  ')'  expected	43	None	replace
334	[BUG]  [BUGGY]  String  myComment  =  getComment().toString()  + "   ";  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toString()  + "   ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toString()  + "   ";	  String    myComment    =    getComment().toString()    +   "n   ";    	non-compiled	[CE]  ')'  expected	43	None	replace
335	[BUG]  [BUGGY]  String  myComment  =  getComment().toString()  + "_ ";  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toString()  + "_ ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toString()  + "_ ";	  String    myComment    =    getComment().toString()    +   "n   ";    	non-compiled	[CE]  ')'  expected	43	None	replace
336	[BUG]  [BUGGY]  String  myComment  =  getComment().toString()  + ": ";  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toString()  + ": ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toString()  + ": ";	  String    myComment    =    getComment().toString()    +   "n   ";    	non-compiled	[CE]  ')'  expected	43	None	replace
337	[BUG]  [BUGGY]  String  myComment  =  getComment().toString()  + "/. ";  [CE]  ']'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toString()  + "/. ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toString()  + "/. ";	  String    myComment    =    getComment().toString()    +   "n   ";    	non-compiled	[CE]  ']'  expected	43	None	replace
338	[BUG]  [BUGGY]  String  myComment  =  getComment().toString()  + "  - ";  [CE]  ']'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toString()  + "  - ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toString()  + "  - ";	  String    myComment    =    getComment().toString()    +   "n   ";    	non-compiled	[CE]  ']'  expected	43	None	replace
339	[BUG]  [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();  [CE]  ']'  expected  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	null  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    comment    =    getComment().toLowerCase();    	non-compiled	[CE]  ']'  expected	26	None	replace
340	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  comment  =  getComment().toLowerCase();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  comment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  boolean  comment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    comment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
341	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    comment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
342	[BUG]  [BUGGY]  String  comment  =  getComment().toLowerCase();  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  comment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  comment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    comment    =    getComment().toLowerCase();    	non-compiled	[CE]  ';'  expected	26	None	replace
343	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  comment  =  getComment().toLowerCase();  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  comment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  Object  comment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    comment    =    getComment().toLowerCase();    	non-compiled	[CE]  ';'  expected	26	None	replace
344	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase();  if(comment!=  null)  {  comment  =  getComment().toLowerCase();  }  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase();  if(comment!=  null)  {  comment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase();  if(comment!=  null)  {  comment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    comment    =    getComment().toLowerCase();    	non-compiled	[CE]  ';'  expected	26	None	replace
345	[BUG]  [BUGGY]  final  String  myComment  =  getComment().toLowerCase();  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  final  String  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	final  String  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ';'  expected	128	None	replace
346	[BUG]  [BUGGY]  Integer  myComment  =  getComment().toLowerCase();  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Integer  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Integer  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ';'  expected	128	None	replace
347	[BUG]  [BUGGY]  Node  myComment  =  getComment().toLowerCase();  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Node  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Node  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ';'  expected	128	None	replace
348	[BUG]  [BUGGY]  String  myComment  =  getCommentName().toLowerCase();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().toLowerCase();	  String    myComment    =    getCommentName().trim();    	non-compiled	[CE]  ';'  expected	93	None	replace
349	[BUG]  [BUGGY]  String  myComment  =  getCommentName().substring(0,  obj.length()  -  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().substring(0,  obj.length()  -  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().substring(0,  obj.length()  -  1);	  String    myComment    =    getCommentName().trim();    	non-compiled	[CE]  ';'  expected	93	None	replace
350	[BUG]  [BUGGY]  String  myComment  =  getCommentName().trim()  +  1;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().trim()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().trim()  +  1;	  String    myComment    =    getCommentName().trim();    	non-compiled	[CE]  ';'  expected	93	None	replace
351	[BUG]  [BUGGY]  String  myComment  =  getCommentName().substring(0,  obj.length()  -  2);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().substring(0,  obj.length()  -  2);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().substring(0,  obj.length()  -  2);	  String    myComment    =    getCommentName().trim();    	non-compiled	[CE]  ';'  expected	93	None	replace
352	[BUG]  [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	null  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	25	None	replace
353	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	25	None	replace
354	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	25	None	replace
355	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  yourComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  yourComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  boolean  yourComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	25	None	replace
356	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	25	None	replace
357	[BUG]  [BUGGY]  String  yourComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  yourComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  yourComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	25	None	replace
358	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "/ ";  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "/ ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "/ ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  ')'  expected	52	None	replace
359	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ": ";  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ": ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ": ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  ')'  expected	52	None	replace
360	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "_ ";  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "_ ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "_ ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  ')'  expected	52	None	replace
361	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "   ";  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "   ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "   ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  ')'  expected	52	None	replace
362	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "# ";  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "# ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "# ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  ')'  expected	52	None	replace
363	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "/ ".equals(otherName);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "/ ".equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "/ ".equals(otherName);	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  ';'  expected	52	None	replace
364	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(other.getName());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(other.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(other.getName());	  String    myComment    =    super.equalsIgnoreCase(obj);    	non-compiled	[CE]  ';'  expected	81	None	replace
365	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj)&&!myName.equals(otherName);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(obj)&&!myName.equals(otherName);	  String    myComment    =    super.equalsIgnoreCase(obj);    	non-compiled	[CE]  ';'  expected	81	None	replace
366	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj)&&!myName.equalsIgnoreCase(otherName);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj)&&!myName.equalsIgnoreCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(obj)&&!myName.equalsIgnoreCase(otherName);	  String    myComment    =    super.equalsIgnoreCase(obj);    	non-compiled	[CE]  not  a  statement	81	None	replace
367	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(other);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(other);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(other);	  String    myComment    =    super.equalsIgnoreCase(obj);    	non-compiled	[CE]  not  a  statement	81	None	replace
368	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  obj.length());	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  ')'  expected	44	None	replace
369	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  otherName.length()  -  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  otherName.length()  -  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  otherName.length()  -  1);	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  not  a  statement	44	None	replace
370	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length()));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length()));  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  obj.length()));	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  not  a  statement	44	None	replace
371	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length()  +  1);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length()  +  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  obj.length()  +  1);	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  not  a  statement	44	None	replace
372	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length()  *  1);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length()  *  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  obj.length()  *  1);	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  not  a  statement	44	None	replace
373	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length())+  1;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  obj.length())+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  obj.length())+  1;	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  ')'  expected	44	None	replace
374	[BUG]  [BUGGY]  String  myComment  =  name!=  null?  other.getComment()  :  obj;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  name!=  null?  other.getComment()  :  obj;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  name!=  null?  other.getComment()  :  obj;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  ')'  expected	114	None	replace
375	[BUG]  [BUGGY]  String  myComment  =  other!=  null?  obj.getComment()  :  name;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other!=  null?  obj.getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other!=  null?  obj.getComment()  :  name;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  ')'  expected	114	None	replace
376	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  other.getComment()  :  myName;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  other.getComment()  :  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  other.getComment()  :  myName;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  ')'  expected	114	None	replace
377	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  other.getComment()  :  myName;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  other.getComment()  :  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  other.getComment()  :  myName;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  ')'  expected	114	None	replace
378	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  other.getComment()  :  name;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  other.getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  other.getComment()  :  name;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  ')'  expected	114	None	replace
379	[BUG]  [BUGGY]  String  myComment  =  name  ==  null?  other.getComment()  :  obj;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  name  ==  null?  other.getComment()  :  obj;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  name  ==  null?  other.getComment()  :  obj;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  ')'  expected	114	None	replace
380	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(otherName);  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(otherName);	  String    myComment    =    getComment().toLowerCase(label);    	non-compiled	[CE]  ')'  expected	89	None	replace
381	[BUG]  [BUGGY]  String  label  =  getComment().toLowerCase(label);  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  label  =  getComment().toLowerCase(label);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  label  =  getComment().toLowerCase(label);	  String    myComment    =    getComment().toLowerCase(label);    	non-compiled	[CE]  ')'  expected	89	None	replace
382	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(label).trim();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(label).trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(label).trim();	  String    myComment    =    getComment().toLowerCase(label);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
383	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(label,  obj);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(label,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(label,  obj);	  String    myComment    =    getComment().toLowerCase(label);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
384	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  null  :  other.getComment();	  String    myComment    =(myName    ==    null)?    null    :    getComment();    	non-compiled	[CE]  ')'  expected	39	None	replace
385	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  getComment().toString();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  getComment().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  null  :  getComment().toString();	  String    myComment    =(myName    ==    null)?    null    :    getComment();    	non-compiled	[CE]  ')'  expected	39	None	replace
386	[BUG]  [BUGGY]  String  myComment  =(myName!=  null)?  null  :  getComment();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName!=  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName!=  null)?  null  :  getComment();	  String    myComment    =(myName    ==    null)?    null    :    getComment();    	non-compiled	[CE]  ')'  expected	39	None	replace
387	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  otherName.getComment();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  otherName.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  null  :  otherName.getComment();	  String    myComment    =(myName    ==    null)?    null    :    getComment();    	non-compiled	[CE]  ')'  expected	39	None	replace
388	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName)?  null  :  other.getComment().toString();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName)?  null  :  other.getComment().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName)?  null  :  other.getComment().toString();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment().toString();    	non-compiled	[CE]  ')'  expected	76	None	replace
389	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName)?  null  :  other.getComment().toString();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName)?  null  :  other.getComment().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName)?  null  :  other.getComment().toString();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment().toString();    	non-compiled	[CE]  ')'  expected	76	None	replace
390	[BUG]  [BUGGY]  String  myComment  =  getCommentName().equals(otherName)?  null  :  other.getComment().toString();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().equals(otherName)?  null  :  other.getComment().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().equals(otherName)?  null  :  other.getComment().toString();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment().toString();    	non-compiled	[CE]  ')'  expected	76	None	replace
391	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().substring(1);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().substring(1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().substring(1);	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment().toString();    	non-compiled	[CE]  ')'  expected	76	None	replace
392	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().trim();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().trim();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment().toString();    	non-compiled	[CE]  ';'  expected	76	None	replace
393	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().computeName(myName);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().computeName(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().computeName(myName);	  String    myComment    =    getImmediateParent().computeName(otherName);    	non-compiled	[CE]  ';'  expected	122	None	replace
394	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().computeName(otherName,  obj);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().computeName(otherName,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().computeName(otherName,  obj);	  String    myComment    =    getImmediateParent().computeName(otherName);    	non-compiled	[CE]  ';'  expected	122	None	replace
395	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().computeSimpleName(otherName);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().computeSimpleName(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().computeSimpleName(otherName);	  String    myComment    =    getImmediateParent().computeName(otherName);    	non-compiled	[CE]  ')'  expected	122	None	replace
396	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().computeValue(otherName);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().computeValue(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().computeValue(otherName);	  String    myComment    =    getImmediateParent().computeName(otherName);    	non-compiled	[CE]  ')'  expected	122	None	replace
397	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().computeName(obj);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().computeName(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().computeName(obj);	  String    myComment    =    getImmediateParent().computeName(otherName);    	non-compiled	[CE]  ')'  expected	122	None	replace
398	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().computeName(null);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().computeName(null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().computeName(null);	  String    myComment    =    getImmediateParent().computeName(otherName);    	non-compiled	[CE]  ')'  expected	122	None	replace
399	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    null;    	non-compiled	[CE]  ')'  expected	70	None	replace
400	[BUG]  [BUGGY]  String  myComment  =  other.getName()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getName()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getName()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    null;    	non-compiled	[CE]  ')'  expected	70	None	replace
401	[BUG]  [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    null;    	non-compiled	[CE]  ')'  expected	70	None	replace
402	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getCommentName()  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getCommentName()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getCommentName()  +  1;	  String    myComment    =    getImmediateParent().getCommentName();    	non-compiled	[CE]  ')'  expected	121	None	replace
403	[BUG]  [BUGGY]  String  myComment  =  other.getImmediateParent().getCommentName();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getImmediateParent().getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getImmediateParent().getCommentName();	  String    myComment    =    getImmediateParent().getCommentName();    	non-compiled	[CE]  ')'  expected	121	None	replace
404	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getCommentName(otherName);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getCommentName(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getCommentName(otherName);	  String    myComment    =    getImmediateParent().getCommentName();    	non-compiled	[CE]  ')'  expected	121	None	replace
405	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getCommentName(myName);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getCommentName(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getCommentName(myName);	  String    myComment    =    getImmediateParent().getCommentName();    	non-compiled	[CE]  ')'  expected	121	None	replace
406	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
407	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
408	[BUG]  [BUGGY]  Object  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
409	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	1	None	replace
410	[BUG]  [BUGGY]  String  myComment  =  other.getName();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getName();	  String    myComment    =    other.getComment();    	non-compiled	[CE]  ')'  expected	31	None	replace
411	[BUG]  [BUGGY]  String  myComment  =  this.other.getComment();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.other.getComment();	  String    myComment    =    other.getComment();    	non-compiled	[CE]  ')'  expected	31	None	replace
412	[BUG]  [BUGGY]  char  myComment  =  other.getComment();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  other.getComment();	  String    myComment    =    other.getComment();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
413	[BUG]  [BUGGY]  String  myComment  =  this.getComment();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.getComment();	  String    myComment    =    other.getComment();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
414	[BUG]  [BUGGY]  String  myComment  =  other.getComment()  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getComment()  :  null;	  String    myComment    =    other.getComment();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
415	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName.getName());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName.getName());	  String    myComment    =    getComment(other.getName());    	non-compiled	[CE]  ')'  expected	58	None	replace
416	[BUG]  [BUGGY]  String  myComment  =  getComment(obj.getName());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj.getName());	  String    myComment    =    getComment(other.getName());    	non-compiled	[CE]  ')'  expected	58	None	replace
417	[BUG]  [BUGGY]  String  myComment  =  getComment(other.getName(),  myName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other.getName(),  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other.getName(),  myName);	  String    myComment    =    getComment(other.getName());    	non-compiled	[CE]  ')'  expected	58	None	replace
418	[BUG]  [BUGGY]  String  myComment  =  getComment(other.getName(),  obj);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other.getName(),  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other.getName(),  obj);	  String    myComment    =    getComment(other.getName());    	non-compiled	[CE]  ')'  expected	58	None	replace
419	[BUG]  [BUGGY]  String  myComment  =  getComment(other.getName(),  null);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other.getName(),  null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other.getName(),  null);	  String    myComment    =    getComment(other.getName());    	non-compiled	[CE]  ')'  expected	58	None	replace
420	[BUG]  [BUGGY]  String  myComment  =  getComment(other.getName(),  false);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other.getName(),  false);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other.getName(),  false);	  String    myComment    =    getComment(other.getName());    	non-compiled	[CE]  ')'  expected	58	None	replace
421	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  thisComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  thisComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  boolean  thisComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	30	None	replace
422	[BUG]  [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	null  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	30	None	replace
423	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }  [CE]  ')'  expected  [FE]                        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	30	None	replace
424	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  [CE]  ')'  expected  [FE]                          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	30	None	replace
425	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  thisComment  =  getComment().toLowerCase();  }  [CE]  ')'  expected  [FE]                            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  thisComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  if(myComment!=  null)  {  String  thisComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  ')'  expected	30	None	replace
426	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
427	[BUG]  [BUGGY]  String  myComment  =  getImmediateName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName().toLowerCase();	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
428	[BUG]  [BUGGY]  String  myComment  =  getImmediateName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName()  + "n ";	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
429	[BUG]  [BUGGY]  String  myComment  =  getImmediateName().trim();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName().trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName().trim();	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
430	[BUG]  [BUGGY]  String  myComment  =  getImmediateName()  + "/ ";  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName()  + "/ ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName()  + "/ ";	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
431	[BUG]  [BUGGY]  String  myComment  =  getImmediateName()  + ": ";  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName()  + ": ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName()  + ": ";	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
432	[BUG]  [BUGGY]  String  myComment  =  getQualifiedName();  String  noComment  =  getName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getQualifiedName();  String  noComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getQualifiedName();  String  noComment  =  getName();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
433	[BUG]  [BUGGY]  String  myComment  =  getSimpleName();  String  noComment  =  getName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName();  String  noComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName();  String  noComment  =  getName();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
434	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent();  String  noComment  =  getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent();  String  noComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent();  String  noComment  =  getName();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
435	[BUG]  [BUGGY]  String  myComment  =  getImmediateName();  String  noComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName();  String  noComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName();  String  noComment  =  getName();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
436	[BUG]  [BUGGY]  String  myComment  =  getImmediateParentName();  String  noComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParentName();  String  noComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParentName();  String  noComment  =  getName();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
437	[BUG]  [BUGGY]  String  myComment  =  getImmediateNode();  String  noComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateNode();  String  noComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateNode();  String  noComment  =  getName();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
438	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getName().equals(otherName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getName().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getName().equals(otherName);	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
439	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(myName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(myName);	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
440	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)&&!myComment.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)&&!myComment.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName)&&!myComment.equals(otherName);	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
441	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().toString().equals(otherName);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().toString().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().toString().equals(otherName);	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
442	[BUG]  [BUGGY]  String  myComment  =  getImmediateName().equals(otherName);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName().equals(otherName);	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
443	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName.getName());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName.getName());	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
444	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(myName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(myName);	  String    myComment    =    super.equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
445	[BUG]  [BUGGY]  String  myComment  =  obj.equals(super.getName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj.equals(super.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj.equals(super.getName());	  String    myComment    =    super.equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
446	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "n ";  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "n ";	  String    myComment    =(obj    ==    null)?    null    :    getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
447	[BUG]  [BUGGY]  String  myComment  =(obj!=  null)?  null  :  getComment().toString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj!=  null)?  null  :  getComment().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj!=  null)?  null  :  getComment().toString();	  String    myComment    =(obj    ==    null)?    null    :    getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
448	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().getName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().getName();	  String    myComment    =(obj    ==    null)?    null    :    getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
449	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "/ ";  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "/ ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "/ ";	  String    myComment    =(obj    ==    null)?    null    :    getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
450	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
451	[BUG]  [BUGGY]  if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
452	[BUG]  [BUGGY]  else  if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
453	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
454	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
455	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().toString()  + "n ";  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().toString()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().toString()  + "n ";	  String    myComment    =    getInternalAttributes().toString();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
456	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().toString()  + "/ ";  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().toString()  + "/ ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().toString()  + "/ ";	  String    myComment    =    getInternalAttributes().toString();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
457	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().toString()  + "_ "+myName;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().toString()  + "_ "+myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().toString()  + "_ "+myName;	  String    myComment    =    getInternalAttributes().toString();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
458	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
459	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
460	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  myName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
461	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
462	[BUG]  [BUGGY]  String  myComment  =  getName().equals(myName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(myName);	  String    myComment    =    getComment().equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
463	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(entryName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(entryName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(entryName);	  String    myComment    =    getComment().equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
464	[BUG]  [BUGGY]  String  myComment  =  getComment().getName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().getName()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().getName()  + "n ";	  String    myComment    =    getComment().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
465	[BUG]  [BUGGY]  String  myComment  =  other.getComment().getName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getComment().getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getComment().getName();	  String    myComment    =    getComment().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
466	[BUG]  [BUGGY]  String  myComment  =  getComment().getSimpleName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().getSimpleName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().getSimpleName();	  String    myComment    =    getComment().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
467	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getName()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
468	[BUG]  [BUGGY]  if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!(obj  instanceof  ZipArchiveEntry))  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getName()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
469	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getName()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
470	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getName()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
471	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getName()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
472	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  myCOMment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  myCOMment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  myCOMment  =  getName();  }	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
473	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  myCOMment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  myCOMment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  myCOMment  =  getName();  }	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
474	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  }  else  if(!myName.equals(otherName))  {  return  false;  }	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
475	[BUG]  [BUGGY]  boolean  myComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
476	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
477	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
478	[BUG]  [BUGGY]  ||  obj  instanceof  ZipArchiveEntry  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  ||  obj  instanceof  ZipArchiveEntry  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	||  obj  instanceof  ZipArchiveEntry  {  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
479	[BUG]  [BUGGY]  ||  obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  ||  obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	||  obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
480	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
481	[BUG]  [BUGGY]  else  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
482	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  this  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  this  :  obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  this  :  obj.getComment();	  String    myComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
483	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  this  :  obj.getName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  this  :  obj.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  this  :  obj.getName();	  String    myComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
484	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  this  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  this  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  this  :  other.getComment();	  String    myComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
485	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)||!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)||!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)||!myName.equals(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
486	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName)&&!myName.equals(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
487	[BUG]  [BUGGY]  String  myComment  =  getCommentName().equals(otherName)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().equals(otherName)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().equals(otherName)&&!myName.equals(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
488	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName)&&!myName.equals(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
489	[BUG]  [BUGGY]  String  myComment  =  getName().equals(myName)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(myName)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(myName)?  getComment()  :  null;	  String    myComment    =    getComment().equals(myName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
490	[BUG]  [BUGGY]  String  myComment  =  getCommentName().equals(myName)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().equals(myName)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().equals(myName)?  getComment()  :  null;	  String    myComment    =    getComment().equals(myName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
491	[BUG]  [BUGGY]  String  myComment  =  getCommentType().equals(myName)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentType().equals(myName)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentType().equals(myName)?  getComment()  :  null;	  String    myComment    =    getComment().equals(myName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
492	[BUG]  [BUGGY]  String  myComment  =  obj.getInternalAttributes();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj.getInternalAttributes();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj.getInternalAttributes();	  String    myComment    =    other.getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
493	[BUG]  [BUGGY]  String  myComment  =  other.getImmediateParent();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getImmediateParent();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getImmediateParent();	  String    myComment    =    other.getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
494	[BUG]  [BUGGY]  String  myComment  =  other.getInternalAttributes()  +  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getInternalAttributes()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getInternalAttributes()  +  1;	  String    myComment    =    other.getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
495	[BUG]  [BUGGY]  String  myComment  =  other.getReturnAttributes();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getReturnAttributes();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getReturnAttributes();	  String    myComment    =    other.getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
496	[BUG]  [BUGGY]  String  myComment  =  getImmediateParentName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParentName();	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
497	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  other.getComment();	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
498	[BUG]  [BUGGY]  String  myComment  =(other  ==  null)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(other  ==  null)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(other  ==  null)?  getComment()  :  null;	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
499	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getCommentName()  :  null;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getCommentName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getCommentName()  :  null;	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
500	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  getComment()  :  null;	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
501	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getName()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getName()  :  null;	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
502	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  new  ZipArchiveEntry(myName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  new  ZipArchiveEntry(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  new  ZipArchiveEntry(myName);	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
503	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.getClass();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.getClass();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  null  :  obj.getClass();	  String    myComment    =    obj    ==    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
504	[BUG]  [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
505	[BUG]  [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(other.getName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(other.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(other.getName());	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
506	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(other.getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(other.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(other.getName());	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
507	[BUG]  [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(myName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(myName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
508	[BUG]  [BUGGY]  String  myComment  =  obj.getInternalName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj.getInternalName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj.getInternalName();	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
509	[BUG]  [BUGGY]  String  myComment  =  getInternalName().trim();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalName().trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalName().trim();	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
510	[BUG]  [BUGGY]  String  myComment  =  getInternalName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalName()  + "n ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalName()  + "n ";	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
511	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getQualifiedName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getQualifiedName();	  String    myComment    =    getImmediateParent().getShortName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
512	[BUG]  [BUGGY]  String  myComment  =(other!=  null)?  null  :  getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(other!=  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(other!=  null)?  null  :  getComment();	  String    myComment    =(other    ==    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
513	[BUG]  [BUGGY]  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
514	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment  ==  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment  ==  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
515	[BUG]  [BUGGY]  Integer  myComment  =(Integer)obj.getValue();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Integer  myComment  =(Integer)obj.getValue();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Integer  myComment  =(Integer)obj.getValue();  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
516	[BUG]  [BUGGY]  Integer  myComment  =(Integer)obj.getClass().getName();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Integer  myComment  =(Integer)obj.getClass().getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Integer  myComment  =(Integer)obj.getClass().getName();  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
517	[BUG]  [BUGGY]  String  myComment  =  getName().toCharArray()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().toCharArray()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().toCharArray()  +  1;	  String    myComment    =    getName().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
518	[BUG]  [BUGGY]  String  myComment  =  getName().substring(0,  obj.length()  -  2);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().substring(0,  obj.length()  -  2);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().substring(0,  obj.length()  -  2);	  String    myComment    =    getName().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
519	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getComment(otherName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getComment(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getComment(otherName);	  String    myComment    =    getImmediateParent().getComment();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
520	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().comment(myName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().comment(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().comment(myName);	  String    myComment    =    getImmediateParent().getComment();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
521	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().comment(otherName);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().comment(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().comment(otherName);	  String    myComment    =    getImmediateParent().getComment();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
522	[BUG]  [BUGGY]  String  myComment  =  other.getCommentName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getCommentName();	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
523	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  null  :  obj.getCommentName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  null  :  obj.getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  null  :  obj.getCommentName();	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
524	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.getCommentName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  null  :  obj.getCommentName();	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
525	[BUG]  [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getCommentName()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getCommentName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getCommentName()  :  null;	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
526	[BUG]  [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj)&&!myName.equals(otherName);	  String    myComment    =    super.equals(obj)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
527	[BUG]  [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName)&&!myName.equals(otherName);	  String    myComment    =    super.equals(obj)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
528	[BUG]  [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry  &&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry  &&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  instanceof  ZipArchiveEntry  &&!myName.equals(otherName);	  String    myComment    =    super.equals(obj)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
529	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName.getComment());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName.getComment());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName.getComment());	  String    myComment    =    getComment().equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
530	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName.getSimpleName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName.getSimpleName());	  String    myComment    =    getComment().equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
531	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName.getName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName.getName());	  String    myComment    =    getComment().equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
532	[BUG]  [BUGGY]  String  myComment  =(name  ==  null)?  getComment()  :  name;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(name  ==  null)?  getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(name  ==  null)?  getComment()  :  name;	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
533	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  other.getName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  other.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  other.getName();	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
534	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  myName;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  myName;	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
535	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  getComment()  :  name;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  getComment()  :  name;	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
536	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  otherName;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  otherName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  otherName;	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
537	[BUG]  [BUGGY]  String  myComment  =  getComment(obj.getClass(),  myName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj.getClass(),  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj.getClass(),  myName);	  String    myComment    =    getComment(obj.getClass());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
538	[BUG]  [BUGGY]  String  myComment  =  getComment(other.getClass());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(other.getClass());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(other.getClass());	  String    myComment    =    getComment(obj.getClass());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
539	[BUG]  [BUGGY]  String  myComment  =  getComment(obj!=  null?  null  :  obj.getClass());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj!=  null?  null  :  obj.getClass());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj!=  null?  null  :  obj.getClass());	  String    myComment    =    getComment(obj.getClass());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
540	[BUG]  [BUGGY]  String  myComment  =  getComment(obj  ==  null?  null  :  obj.getClass());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj  ==  null?  null  :  obj.getClass());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj  ==  null?  null  :  obj.getClass());	  String    myComment    =    getComment(obj.getClass());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
541	[BUG]  [BUGGY]  String  myComment  =  getComment(otherName.getClass());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(otherName.getClass());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(otherName.getClass());	  String    myComment    =    getComment(obj.getClass());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
542	[BUG]  [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
543	[BUG]  [BUGGY]  String  myComment  =  other.getName()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getName()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getName()  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
544	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
545	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(otherName)&&!myName.equals(otherName);	  String    myComment    =    getInternalAttributes().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
546	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(otherName)+  1;	  String    myComment    =    getInternalAttributes().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
547	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(propertyName)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(propertyName)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(propertyName)?  getComment()  :  null;	  String    myComment    =    getComment().equals(myName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
548	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(name)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(name)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(name)?  getComment()  :  null;	  String    myComment    =    getComment().equals(myName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
549	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(entryName)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(entryName)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(entryName)?  getComment()  :  null;	  String    myComment    =    getComment().equals(myName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
550	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(null)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(null)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(null)?  getComment()  :  null;	  String    myComment    =    getComment().equals(myName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
551	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  otherComment  =(ZipArchiveEntry)obj;  if(!myName.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  otherComment  =(ZipArchiveEntry)obj;  if(!myName.equals(otherComment))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  otherComment  =(ZipArchiveEntry)obj;  if(!myName.equals(otherComment))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
552	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  otherComment  =(ZipArchiveEntry)obj.getName();  if(!myName.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  otherComment  =(ZipArchiveEntry)obj.getName();  if(!myName.equals(otherComment))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  otherComment  =(ZipArchiveEntry)obj.getName();  if(!myName.equals(otherComment))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
553	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  String  myComment  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherComment))  {  return  false  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  String  myComment  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherComment))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  String  myComment  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherComment))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
554	[BUG]  [BUGGY]  String  gpbComment  =  getComment(obj,  gpb);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  gpbComment  =  getComment(obj,  gpb);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  gpbComment  =  getComment(obj,  gpb);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
555	[BUG]  [BUGGY]  int  myComment  =  getComment().toLowerCase();  int  noComment  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  int  myComment  =  getComment().toLowerCase();  int  noComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	int  myComment  =  getComment().toLowerCase();  int  noComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
556	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  Object  noComment  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  Object  noComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  Object  noComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
557	[BUG]  [BUGGY]  Object  myComment  =  getName();  Object  comment  =  getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getName();  Object  comment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getName();  Object  comment  =  getName();	  String    myComment    =    getName();    String    comment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
558	[BUG]  [BUGGY]  char  myComment  =  getName();  char  comment  =  getName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getName();  char  comment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getName();  char  comment  =  getName();	  String    myComment    =    getName();    String    comment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
559	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
560	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  gotName();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
561	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getCommentName(null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getCommentName(null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getCommentName(null);	  String    myComment    =    getImmediateParent().getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
562	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getComment(myName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getComment(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getComment(myName);	  String    myComment    =    getImmediateParent().getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
563	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ".: "  +  obj;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ".: "  +  obj;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ".: "  +  obj;	  String    myComment    =    getCommentName()    +   ":   "    +    obj;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
564	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ".: "  +  myName;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ".: "  +  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ".: "  +  myName;	  String    myComment    =    getCommentName()    +   ":   "    +    obj;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
565	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
566	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false  [CE]  ']'  expected  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ']'  expected	2	None	replace
567	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().equals(myName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().equals(myName);	  String    myComment    =(obj    ==    null)?    null    :    getComment().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
568	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().equalsIgnoreCase(otherName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().equalsIgnoreCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().equalsIgnoreCase(otherName);	  String    myComment    =(obj    ==    null)?    null    :    getComment().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
569	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase(null);  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase(null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase(null);	  String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
570	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase(this);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase(this);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase(this);	  String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
571	[BUG]  [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
572	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName().toLowerCase();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName().toLowerCase();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName().toLowerCase();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
573	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
574	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
575	[BUG]  [BUGGY]  String  myComment  =  getSimpleName().toCharArray();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName().toCharArray();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName().toCharArray();	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
576	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  +  name;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  +  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  +  name;	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
577	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  +  1;	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
578	[BUG]  [BUGGY]  String  myComment  =  getComment(obj  ==  null? "null "  :  obj.getClass());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj  ==  null? "null "  :  obj.getClass());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj  ==  null? "null "  :  obj.getClass());	  String    myComment    =    getComment(obj.getClass());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
579	[BUG]  [BUGGY]  String  myComment  =  getComment(obj  ==  null? " "  :  obj.getClass());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj  ==  null? " "  :  obj.getClass());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj  ==  null? " "  :  obj.getClass());	  String    myComment    =    getComment(obj.getClass());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
580	[BUG]  [BUGGY]  Object  myComment  =  getComment().toUpperCase();  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toUpperCase();	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
581	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myName.equalsIgnoreCase(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myName.equalsIgnoreCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)&&!myName.equalsIgnoreCase(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
582	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName.toString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName.toString());	  String    myComment    =    getComment().equals(otherName)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
583	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName.toLowerCase());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)&&!myName.equals(otherName.toLowerCase());	  String    myComment    =    getComment().equals(otherName)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
584	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toUpperCase();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().toUpperCase();	  String    myComment    =(obj    ==    null)?    null    :    getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
585	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "_ ";  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "_ ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  + "_ ";	  String    myComment    =(obj    ==    null)?    null    :    getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
586	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().toString()  +  1;	  String    myComment    =(obj    ==    null)?    null    :    getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
587	[BUG]  [BUGGY]  Object  myComment  =  other.getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  other.getComment();	  String    myComment    =    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
588	[BUG]  [BUGGY]  final  Object  obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  final  Object  obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	final  Object  obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
589	[BUG]  [BUGGY]  final  Object  obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  final  Object  obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	final  Object  obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
590	[BUG]  [BUGGY]  String  myComment  =  getComment(obj).toURI();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj).toURI();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj).toURI();	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
591	[BUG]  [BUGGY]  String  myComment  =  getComment(obj).toPath();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj).toPath();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj).toPath();	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
592	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
593	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
594	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
595	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
596	[BUG]  [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  null  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	null  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
597	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  obj.getName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  obj.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  obj.getName();	  String    myComment    =    obj.getName();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
598	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  null  :  other.getName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  null  :  other.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  null  :  other.getName();	  String    myComment    =    obj.getName();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
599	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
600	[BUG]  [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
601	[BUG]  [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  instanceof  ZipArchiveEntry  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
602	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes()  [0];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes()  [0];  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes()  [0];	  String    myComment    =    getInternalAttributes()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
603	[BUG]  [BUGGY]  String  myComment  =  getComment(obj  ==  null?  null  :  obj.getKey());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj  ==  null?  null  :  obj.getKey());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj  ==  null?  null  :  obj.getKey());	  String    myComment    =    getComment(obj.getKey());    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
604	[BUG]  [BUGGY]  String  myComment  =  getComment(obj!=  null?  null  :  obj.getKey());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj!=  null?  null  :  obj.getKey());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj!=  null?  null  :  obj.getKey());	  String    myComment    =    getComment(obj.getKey());    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
605	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
606	[BUG]  [BUGGY]  boolean  myComment  =  getName();  boolean  yourComment  =  getName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  boolean  yourComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  boolean  yourComment  =  getName();	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
607	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
608	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  yourComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  yourComment  =  getName();  }	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
609	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)+  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)+  0;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)+  0;	  String    myComment    =    getComment().equals(otherName)+    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
610	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName)+  1;	  String    myComment    =    getComment().equals(otherName)+    1;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
611	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getName().toCharArray();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getName().toCharArray();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getName().toCharArray();	  String    myComment    =(obj    ==    null)?    null    :    getName();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
612	[BUG]  [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
613	[BUG]  [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
614	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
615	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
616	[BUG]  [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
617	[BUG]  [BUGGY]  Object  myComment  =  getComment(obj,  myName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(obj,  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(obj,  myName);	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
618	[BUG]  [BUGGY]  Object  myComment  =  getComment(obj.getKey());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(obj.getKey());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(obj.getKey());	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
619	[BUG]  [BUGGY]  Object  myComment  =  getComment(obj)+  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(obj)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(obj)+  1;	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
620	[BUG]  [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
621	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
622	[BUG]  [BUGGY]  AssertionFailedError  <  ZipArchiveEntry>  other  =(AssertionFailedError  <  ZipArchiveEntry>)obj;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  <  ZipArchiveEntry>  other  =(AssertionFailedError  <  ZipArchiveEntry>)obj;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  <  ZipArchiveEntry>  other  =(AssertionFailedError  <  ZipArchiveEntry>)obj;	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
623	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj,  myName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj,  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj,  myName);	  String    myComment    =    super.equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
624	[BUG]  [BUGGY]  String  myComment  =  super.equals(myName,  obj);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(myName,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(myName,  obj);	  String    myComment    =    super.equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
625	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj,  null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(obj,  null);	  String    myComment    =    super.equalsIgnoreCase(obj);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
626	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj,  false);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(obj,  false);	  String    myComment    =    super.equalsIgnoreCase(obj);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
627	[BUG]  [BUGGY]  String  myComment  =  obj  >=  null?  null  :  obj.getCommentName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  >=  null?  null  :  obj.getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  >=  null?  null  :  obj.getCommentName();	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
628	[BUG]  [BUGGY]  Object  myComment  =  getInternalAttributes(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getInternalAttributes(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getInternalAttributes(otherName);	  String    myComment    =    getInternalAttributes(otherName);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
629	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(compiler);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(compiler);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(compiler);	  String    myComment    =    getInternalAttributes(otherName);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
630	[BUG]  [BUGGY]  String  myComment  =  other.getCommentAttributes();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getCommentAttributes();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getCommentAttributes();	  String    myComment    =    other.getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
631	[BUG]  [BUGGY]  String  myComment  =  this.getInternalAttributes();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.getInternalAttributes();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.getInternalAttributes();	  String    myComment    =    other.getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
632	[BUG]  [BUGGY]  String  myComment  =  other.getComments();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getComments();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getComments();	  String    myComment    =    other.getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
633	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + ".null ";  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + ".null ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + ".null ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
634	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "/none ";  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "/none ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "/none ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
635	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "/.* ";  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "/.* ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "/.* ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
636	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "/null ";  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "/null ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "/null ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
637	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(locale.getDefault());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(locale.getDefault());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(locale.getDefault());	  String    myComment    =    getComment().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
638	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes(obj);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalAttributes(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalAttributes(obj);	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
639	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalAttributes()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalAttributes()  +  1;	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
640	[BUG]  [BUGGY]  String  otherComment  =  getInternalName();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalName();	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  ')'  expected	91	None	replace
641	[BUG]  [BUGGY]  String  myComment  =  getExternalAttributes()  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalAttributes()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalAttributes()  +  1;	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	92	None	replace
642	[BUG]  [BUGGY]  String  myComment  =  getExternalAttributes(null);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalAttributes(null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalAttributes(null);	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	92	None	replace
643	[BUG]  [BUGGY]  Object  myComment  =(obj  ==  null)?  null  :  getComment();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =(obj  ==  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =(obj  ==  null)?  null  :  getComment();	  String    myComment    =(obj!=    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
644	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(obj);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(obj);	  String    myComment    =    getComment().equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
645	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(comment);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(comment);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(comment);	  String    myComment    =    getComment().equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
646	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(propertyName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(propertyName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(propertyName);	  String    myComment    =    getComment().equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
647	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  getName()  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  getName()  :  obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  getName()  :  obj.getComment();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
648	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  getName()  :  obj.getParent();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  getName()  :  obj.getParent();	  String    myComment    =    obj    ==    null?    getName()    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
649	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase()  -  1;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase()  -  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase()  -  1;	  String    myComment    =    getComment().toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
650	[BUG]  [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(name!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(name!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
651	[BUG]  [BUGGY]  Object  otherComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  otherComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  otherComment  =  obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(name!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
652	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(myName!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(myName!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(myName!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(name!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
653	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
654	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
655	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toUpperCase();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toUpperCase();	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
656	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj)&&!myName.equalsIgnoreCase(obj);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj)&&!myName.equalsIgnoreCase(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj)&&!myName.equalsIgnoreCase(obj);	  String    myComment    =    super.equals(obj)&&!myName.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
657	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getName();  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
658	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getName();  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
659	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
660	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName,  obj);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)&&!myComment.equals(otherName,  obj);	  String    myComment    =    getComment().equals(otherName)&&!myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
661	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equal(otherName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equal(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equal(otherName);	  String    myComment    =    getInternalAttributes().remove(otherName);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
662	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().indexOf(otherName);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().indexOf(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().indexOf(otherName);	  String    myComment    =    getInternalAttributes().remove(otherName);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
663	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
664	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
665	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName)||!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
666	[BUG]  [BUGGY]  String  myComment  =  getInternalName().toCharArray();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalName().toCharArray();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalName().toCharArray();	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
667	[BUG]  [BUGGY]  String  myComment  =  getInternalName().toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalName().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalName().toString();	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
668	[BUG]  [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
669	[BUG]  [BUGGY]  String  myComment  =  other.getComment()!=  null?  other.getComment()  :  name;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getComment()!=  null?  other.getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getComment()!=  null?  other.getComment()  :  name;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
670	[BUG]  [BUGGY]  String  myComment  =  other!=  null?  other.getComment()  :  name;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other!=  null?  other.getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other!=  null?  other.getComment()  :  name;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
671	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  noComment  =  getName();  }	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
672	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  noComment  =  getName();  }	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
673	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  noComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  noComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  noComment  =  getName();  }	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
674	[BUG]  [BUGGY]  String  myComment  =  getComment();  String  noComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment();  String  noComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment();  String  noComment  =  getName();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
675	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
676	[BUG]  [BUGGY]  String  myComment  =  getName();  String  noComment  =  getNoComment();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName();  String  noComment  =  getNoComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName();  String  noComment  =  getNoComment();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
677	[BUG]  [BUGGY]  if(comment!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(comment!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(comment!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  comment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    comment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
678	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  myName,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  myName,  false);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  myName,  false);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
679	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  myName,  b);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  myName,  b);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  myName,  b);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
680	[BUG]  [BUGGY]  String  myComment  =  getComment(obj,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj,  null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj,  null);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
681	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(myName);  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(myName);	  String    myComment    =    getComment().toLowerCase(label);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
682	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(label,  true);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(label,  true);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(label,  true);	  String    myComment    =    getComment().toLowerCase(label);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
683	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase(label);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase(label);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase(label);	  String    myComment    =    getComment().toLowerCase(label);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
684	[BUG]  [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(obj);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equalsIgnoreCase(obj);	  String    myComment    =    getComment().equalsIgnoreCase(otherName);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
685	[BUG]  [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(propertyName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(propertyName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equalsIgnoreCase(propertyName);	  String    myComment    =    getComment().equalsIgnoreCase(otherName);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
686	[BUG]  [BUGGY]  String  myComment  =  getComment().trim();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().trim();	  String    myComment    =    getCommentName().trim();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
687	[BUG]  [BUGGY]  String  myComment  =(this  ==  null)?  null  :  getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(this  ==  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(this  ==  null)?  null  :  getComment();	  String    myComment    =(other    ==    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
688	[BUG]  [BUGGY]  String  myComment  =(obj!=  null)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj!=  null)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj!=  null)?  getComment()  :  null;	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
689	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  noName;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  noName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  noName;	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
690	[BUG]  [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
691	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getName()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
692	[BUG]  [BUGGY]  Object  myComment  =  getComment().equals(myName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().equals(myName);	  Object    myComment    =    getComment().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
693	[BUG]  [BUGGY]  Object  myComment  =  getComment().equals(entryName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().equals(entryName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().equals(entryName);	  Object    myComment    =    getComment().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
694	[BUG]  [BUGGY]  String  myComment  =(comment  ==  null)?  null  :  getCommentName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(comment  ==  null)?  null  :  getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(comment  ==  null)?  null  :  getCommentName();	  String    myComment    =(comment    ==    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
695	[BUG]  [BUGGY]  String  myComment  =  getCommentName(obj)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(obj)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(obj)+  1;	  String    myComment    =    getCommentName(obj);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
696	[BUG]  [BUGGY]  String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  null;	  String    myComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
697	[BUG]  [BUGGY]  String  myComment  =  getImmediateName()  +  name;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName()  +  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName()  +  name;	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
698	[BUG]  [BUGGY]  String  myComment  =  getImmediateName()  +  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName()  +  1;	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
699	[BUG]  [BUGGY]  String  myComment  =  getComment(obj)+  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj)+  0;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj)+  0;	  String    myComment    =    getComment(obj)+    1;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
700	[BUG]  [BUGGY]  String  myComment  =  other.getComment()!=  null?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other.getComment()!=  null?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other.getComment()!=  null?  null  :  other.getComment();	  String    myComment    =    obj!=    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
701	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(obj).toString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(obj).toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(obj).toString();	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
702	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(obj)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(obj)+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(obj)+  1;	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
703	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes(obj,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes(obj,  null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes(obj,  null);	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
704	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)?  null  :  other.getInternalAttributes().toString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)?  null  :  other.getInternalAttributes().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(otherName)?  null  :  other.getInternalAttributes().toString();	  String    myComment    =    getInternalAttributes().toString();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
705	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)?  null  :  other.toString();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(otherName)?  null  :  other.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(otherName)?  null  :  other.toString();	  String    myComment    =    getInternalAttributes().toString();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
706	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  obj.getName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  obj.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  obj.getName();	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
707	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  obj.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  obj.toString();	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
708	[BUG]  [BUGGY]  String  myComment  =(name!=  null)?  getComment()  :  name;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(name!=  null)?  getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(name!=  null)?  getComment()  :  name;	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
709	[BUG]  [BUGGY]  String  myComment  =  getName().toLowerCase(label);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().toLowerCase(label);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().toLowerCase(label);	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
710	[BUG]  [BUGGY]  String  myComment  =  getName().toLowerCase(locale);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().toLowerCase(locale);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().toLowerCase(locale);	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
711	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
712	[BUG]  [BUGGY]  if(obj  ==  null  ||!obj.equals(otherName))  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null  ||!obj.equals(otherName))  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null  ||!obj.equals(otherName))  {  String  myComment  =  getName();  Character  myComment  =  getName();  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
713	[BUG]  [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
714	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  other.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  other.length()  -  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  other.length()  -  1);	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
715	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  this.obj.length());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  this.obj.length());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  this.obj.length());	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
716	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  this.obj.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  this.obj.length()  -  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  this.obj.length()  -  1);	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
717	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getname();  }	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
718	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
719	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  myComment  =  getname();  }	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
720	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
721	[BUG]  [BUGGY]  if(obj!=  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj!=  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj!=  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
722	[BUG]  [BUGGY]  if(obj  ==  null  ||!obj.equals(otherName))  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null  ||!obj.equals(otherName))  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null  ||!obj.equals(otherName))  {  String  myComment  =  getName();  String  myComment  =  getname();  }	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
723	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getCommentName()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getCommentName()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getCommentName()  +  1;	  String    myComment    =(obj    ==    null)?    null    :    getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
724	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getCommentName().toCharArray();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getCommentName().toCharArray();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getCommentName().toCharArray();	  String    myComment    =(obj    ==    null)?    null    :    getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
725	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  other.getCommentName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  other.getCommentName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  other.getCommentName();	  String    myComment    =(obj    ==    null)?    null    :    getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
726	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
727	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  String  yourComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
728	[BUG]  [BUGGY]  String  myComment  =(this  ==  null)?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(this  ==  null)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(this  ==  null)?  null  :  other.getComment();	  String    myComment    =(obj    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
729	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj,  otherName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj,  otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj,  otherName);	  String    myComment    =    super.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
730	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.getShortName();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.getShortName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.getShortName();	  String    myComment    =    getImmediateParent().getShortName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
731	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().escapeShortName(myName);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().escapeShortName(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().escapeShortName(myName);	  String    myComment    =    getImmediateParent().getShortName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
732	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  super  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  super  :  obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  super  :  obj.getComment();	  String    myComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
733	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  false  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  false  :  obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  false  :  obj.getComment();	  String    myComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
734	[BUG]  [BUGGY]  boolean  myComment  =  getName();  if(myComment!=  null)  {  String  myComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  if(myComment!=  null)  {  String  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  if(myComment!=  null)  {  String  myComment  =  getName();  }	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
735	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getName());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getName());  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getName());  }	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
736	[BUG]  [BUGGY]  boolean  myComment  =  getName();  if(myComment  ==  null)  {  String  myComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  if(myComment  ==  null)  {  String  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  if(myComment  ==  null)  {  String  myComment  =  getName();  }	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
737	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName).toURI();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName).toURI();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName).toURI();	  String    myComment    =    getComment().equals(otherName).toString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
738	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName).commentToString();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName).commentToString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName).commentToString();	  String    myComment    =    getComment().equals(otherName).toString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
739	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  getComment()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  getComment()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  null  :  getComment()  +  1;	  String    myComment    =(myName    ==    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
740	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH).trim();  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH).trim();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH).trim();	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
741	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
742	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  true);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.ENGLISH,  true);	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
743	[BUG]  [BUGGY]  String  myComment  =  getImmediateName().getName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateName().getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateName().getName();	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
744	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().commentTo(myName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().commentTo(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().commentTo(myName);	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
745	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName.toString());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName.toString());	  String    myComment    =    getComment().equals(otherName.toString());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
746	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName.toString()?  null  :  otherName.toString());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName.toString()?  null  :  otherName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName.toString()?  null  :  otherName.toString());	  String    myComment    =    getComment().equals(otherName.toString());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
747	[BUG]  [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(otherName.toString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equalsIgnoreCase(otherName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equalsIgnoreCase(otherName.toString());	  String    myComment    =    getComment().equals(otherName.toString());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
748	[BUG]  [BUGGY]  AssertionFailedError  <  ZipArchiveEntry>  other  =(AssertionFailedError  <  ZipArchiveEntry>)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  <  ZipArchiveEntry>  other  =(AssertionFailedError  <  ZipArchiveEntry>)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  <  ZipArchiveEntry>  other  =(AssertionFailedError  <  ZipArchiveEntry>)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
749	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
750	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
751	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
752	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
753	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName)&&!myName.equals(otherName);	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
754	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().computeName(myName,  obj);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().computeName(myName,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().computeName(myName,  obj);	  String    myComment    =    getImmediateParent().computeName(otherName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
755	[BUG]  [BUGGY]  String  otherComment  =  getComment().equals(otherName)?  null  :  other.getComment().toString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getComment().equals(otherName)?  null  :  other.getComment().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getComment().equals(otherName)?  null  :  other.getComment().toString();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
756	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().equals(otherName)?  null  :  getComment();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().equals(otherName)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().equals(otherName)?  null  :  getComment();	  String    myComment    =(obj    ==    null)?    null    :    getComment()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
757	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  null  :  obj.toString();	  String    myComment    =    obj    ==    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
758	[BUG]  [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
759	[BUG]  [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
760	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(name))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
761	[BUG]  [BUGGY]  String  myComment  =  getName().trim(myName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().trim(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().trim(myName);	  String    myComment    =    getName().trim();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
762	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj.toString());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj.toString());	  String    myComment    =    super.equals(getName());    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
763	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
764	[BUG]  [BUGGY]  boolean  myComment  =  getName();  boolean  myCOMment  =  getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  boolean  myCOMment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  boolean  myCOMment  =  getName();	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
765	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
766	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  myCOMment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
767	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName)?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName)?  null  :  other.getComment();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
768	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(propertyName)?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(propertyName)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(propertyName)?  null  :  other.getComment();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
769	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  0  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  0  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  0  :  other.getComment();	  String    myComment    =    getComment().equals(otherName)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
770	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().length;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().length;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().length;	  String    myComment    =    getImmediateParent()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
771	[BUG]  [BUGGY]  String  myComment  =  getName().substring(0,  obj.getValue());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().substring(0,  obj.getValue());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().substring(0,  obj.getValue());	  String    myComment    =    getName().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
772	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName.toCharArray());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName.toCharArray());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName.toCharArray());	  String    myComment    =    getName().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
773	[BUG]  [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
774	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(myName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
775	[BUG]  [BUGGY]  Object  otherComment  =  super.equals(obj)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  otherComment  =  super.equals(obj)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  otherComment  =  super.equals(obj)&&!myName.equals(otherName);	  String    myComment    =    super.equals(obj)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
776	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj)||!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj)||!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj)||!myName.equals(otherName);	  String    myComment    =    super.equals(obj)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
777	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName.getComment());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName.getComment());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName.getComment());	  String    myComment    =    getComment().equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
778	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().getName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(otherName)?  null  :  other.getComment().getName();	  String    myComment    =    getComment().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
779	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName)?  null  :  getComment().getName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName)?  null  :  getComment().getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName)?  null  :  getComment().getName();	  String    myComment    =    getComment().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
780	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(obj)?  null  :  getComment().getName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(obj)?  null  :  getComment().getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(obj)?  null  :  getComment().getName();	  String    myComment    =    getComment().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
781	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  mement  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  mement  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  Object  mement  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
782	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
783	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  mement  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
784	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
785	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  String  thisComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
786	[BUG]  [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  thisComment  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().toLowerCase();  Object  thisComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().toLowerCase();  Object  thisComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
787	[BUG]  [BUGGY]  String  myComment  =  super.equals(obj)||  super.equalsIgnoreCase(obj);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(obj)||  super.equalsIgnoreCase(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(obj)||  super.equalsIgnoreCase(obj);	  String    myComment    =    super.equals(obj)||    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
788	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().escape(myName);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().escape(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().escape(myName);	  String    myComment    =    getImmediateParent().toString();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
789	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().toString()  + "/.* ";  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().toString()  + "/.* ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().toString()  + "/.* ";	  String    myComment    =    getImmediateParent().toString();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
790	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =  getName();  String  meComment  =  getName();  }	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
791	[BUG]  [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(!myName.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
792	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
793	[BUG]  [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
794	[BUG]  [BUGGY]  if(myComment!=  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment!=  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment!=  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
795	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getComment()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getComment()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getComment()  +  1;	  String    myComment    =    getImmediateParent().getComment();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
796	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
797	[BUG]  [BUGGY]  String  myComment  =  this.obj  ==  null?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  ==  null?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  ==  null?  null  :  other.getComment();	  String    myComment    =    obj    ==    null?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
798	[BUG]  [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  else  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	else  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
799	[BUG]  [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	AssertionFailedError  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
800	[BUG]  [BUGGY]  ((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  ((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
801	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
802	[BUG]  [BUGGY]  String  myComment  =  getCommentName().equals(otherName)&&!myComment.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().equals(otherName)&&!myComment.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().equals(otherName)&&!myComment.equals(otherName);	  String    myComment    =    getComment().equals(otherName)&&!myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
803	[BUG]  [BUGGY]  Object  myComment  =  getInternalName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getInternalName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getInternalName();	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
804	[BUG]  [BUGGY]  String  myComment  =  getInternalName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalName().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalName().toLowerCase();	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
805	[BUG]  [BUGGY]  char  myComment  =  getInternalName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getInternalName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getInternalName();	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
806	[BUG]  [BUGGY]  String  myComment  =  getInternalName()  + "_ "  +  obj.getClass();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalName()  + "_ "  +  obj.getClass();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalName()  + "_ "  +  obj.getClass();	  String    myComment    =    getInternalName();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
807	[BUG]  [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
808	[BUG]  [BUGGY]  char  myComment  =(myName  ==  null)?  null  :  getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =(myName  ==  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =(myName  ==  null)?  null  :  getComment();	  String    myComment    =(myName    ==    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
809	[BUG]  [BUGGY]  Object  myComment  =(myName  ==  null)?  null  :  getComment();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =(myName  ==  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =(myName  ==  null)?  null  :  getComment();	  String    myComment    =(myName    ==    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
810	[BUG]  [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  otherName.toString();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(myName  ==  null)?  null  :  otherName.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(myName  ==  null)?  null  :  otherName.toString();	  String    myComment    =(myName    ==    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
811	[BUG]  [BUGGY]  String  myComment  =  getCommentName()  + "/. ";  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName()  + "/. ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName()  + "/. ";	  String    myComment    =    getCommentName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
812	[BUG]  [BUGGY]  Object  myComment  =  getComment(obj).toString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(obj).toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(obj).toString();	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
813	[BUG]  [BUGGY]  String  myComment  =  getComment(obj).equals(myName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj).equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj).equals(myName);	  String    myComment    =    getComment(obj).toString();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
814	[BUG]  [BUGGY]  String  myComment  =  getName().substring(0,  getName().lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().substring(0,  getName().lastIndexOf('.'));  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().substring(0,  getName().lastIndexOf('.'));	  String    myComment    =    getName().trim();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
815	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName.toString());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName.toString());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName.toString());	  String    myComment    =    getName().trim();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
816	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
817	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
818	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
819	[BUG]  [BUGGY]  final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	final  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    final    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
820	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  + ": "  +  obj;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  + ": "  +  obj;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  + ": "  +  obj;	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
821	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  + "_ "  +  obj.toString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  + "_ "  +  obj.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  + "_ "  +  obj.toString();	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
822	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  + ": "  +  obj.toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  + ": "  +  obj.toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  + ": "  +  obj.toString();	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
823	[BUG]  [BUGGY]  String  myComment  =  getSimpleName()  + "_ "  +  obj.getClass();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getSimpleName()  + "_ "  +  obj.getClass();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getSimpleName()  + "_ "  +  obj.getClass();	  String    myComment    =    getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
824	[BUG]  [BUGGY]  char  myComment  =(other  ==  null)?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =(other  ==  null)?  null  :  other.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =(other  ==  null)?  null  :  other.getComment();	  String    myComment    =(obj    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
825	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  name.toLowerCase();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getComment()  :  name.toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getComment()  :  name.toLowerCase();	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
826	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  getCommentName()  :  name;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  getCommentName()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  getCommentName()  :  name;	  String    myComment    =(obj    ==    null)?    getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
827	[BUG]  [BUGGY]  byte  myComment  =  getName();  String  comment  =  getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  byte  myComment  =  getName();  String  comment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	byte  myComment  =  getName();  String  comment  =  getName();	  String    myComment    =    getName();    String    comment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
828	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
829	[BUG]  [BUGGY]  ExternalAttributes  <  ZipArchiveEntry>  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  ExternalAttributes  <  ZipArchiveEntry>  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	ExternalAttributes  <  ZipArchiveEntry>  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherComment))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
830	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherComment))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  otherComment  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherComment))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
831	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  myComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
832	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
833	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  myComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
834	[BUG]  [BUGGY]  String  myComment  =  getName().equals(otherName).toString();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getName().equals(otherName).toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getName().equals(otherName).toString();	  String    myComment    =    getComment().equals(otherName).toString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
835	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!name.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
836	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName().toLowerCase();  if(!name.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName().toLowerCase();  if(!name.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName().toLowerCase();  if(!name.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
837	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!name.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!name.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!name.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
838	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)other).getName();  if(!name.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)other).getName();  if(!name.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)other).getName();  if(!name.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!name.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
839	[BUG]  [BUGGY]  Object  myComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getName();	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
840	[BUG]  [BUGGY]  boolean  myComment  =  getName();  Object  myComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  Object  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  Object  myComment  =  getName();	  String    myComment    =    getName();    String    myComment    =    getName());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
841	[BUG]  [BUGGY]  String  myComment  =  getComment().substring(0,  JsonSequence.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().substring(0,  JsonSequence.length()  -  1);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().substring(0,  JsonSequence.length()  -  1);	  String    myComment    =    getComment().substring(0,    obj.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
842	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
843	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  return  false;  }	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
844	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
845	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
846	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
847	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  return  true;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  Object  myComment  =  getComment().toLowerCase();  }  else  {  return  true;  }	  String    myComment    =    getComment().toLowerCase();    Object    myComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
848	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  obj);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.getDefault(),  obj);	  String    myComment    =    getComment().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
849	[BUG]  [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault())+  1;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toLowerCase(Locale.getDefault())+  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toLowerCase(Locale.getDefault())+  1;	  String    myComment    =    getComment().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
850	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getImmediateParent()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getImmediateParent()  +  1;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getImmediateParent()  +  1;	  String    myComment    =    getImmediateParent()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
851	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().computeValue(obj);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().computeValue(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().computeValue(obj);	  String    myComment    =    getImmediateParent()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
852	[BUG]  [BUGGY]  Object  myComment  =(other  ==  null)?  null  :  getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =(other  ==  null)?  null  :  getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =(other  ==  null)?  null  :  getComment();	  String    myComment    =(other    ==    null)?    null    :    getComment();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
853	[BUG]  [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
854	[BUG]  [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getComment()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
855	[BUG]  [BUGGY]  Object  myComment  =  obj  ==  null?  null  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  obj  ==  null?  null  :  obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  obj  ==  null?  null  :  obj.getComment();	  String    myComment    =    obj!=    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
856	[BUG]  [BUGGY]  String  myComment  =  this.obj  ==  null?  null  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  ==  null?  null  :  obj.getComment();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  ==  null?  null  :  obj.getComment();	  String    myComment    =    obj!=    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
857	[BUG]  [BUGGY]  Object  myComment  =  getComment().equals(otherName.getName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment().equals(otherName.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment().equals(otherName.getName());	  String    myComment    =    getComment().equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
858	[BUG]  [BUGGY]  Object  myComment  =  super.equals(obj)&&!myName.equals(otherName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  super.equals(obj)&&!myName.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  super.equals(obj)&&!myName.equals(otherName);	  String    myComment    =    super.equals(obj)&&!myName.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
859	[BUG]  [BUGGY]  char  myComment  =  getComment(other.getName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getComment(other.getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getComment(other.getName());	  String    myComment    =    getComment(other.getName());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
860	[BUG]  [BUGGY]  boolean  myComment  =  getInternalAttributes(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getInternalAttributes(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getInternalAttributes(otherName);	  String    myComment    =    getInternalAttributes(otherName);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
861	[BUG]  [BUGGY]  String  myComment  =  getCommentName().equals(myName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().equals(myName);	  String    myComment    =    getCommentName().trim();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
862	[BUG]  [BUGGY]  String  myComment  =  getCommentName().substring(0,  obj.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().substring(0,  obj.getValue());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().substring(0,  obj.getValue());	  String    myComment    =    getCommentName().trim();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
863	[BUG]  [BUGGY]  String  myComment  =  getCommentName().toUpperCase();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().toUpperCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().toUpperCase();	  String    myComment    =    getCommentName()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
864	[BUG]  [BUGGY]  String  myComment  =  getCommentName().computeValue(obj);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName().computeValue(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName().computeValue(obj);	  String    myComment    =    getCommentName()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
865	[BUG]  [BUGGY]  Object  myComment  =  super.equals(obj)&&  super.equals(obj);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  super.equals(obj)&&  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  super.equals(obj)&&  super.equals(obj);	  String    myComment    =    super.equals(obj)||    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
866	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(getName());	  String    myComment    =    getComment().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
867	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(null);	  String    myComment    =    getComment().getName();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
868	[BUG]  [BUGGY]  if(myComment  ==  null  ||!myComment.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment  ==  null  ||!myComment.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment  ==  null  ||!myComment.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
869	[BUG]  [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment  ==  null)  {  String  myComment  =  getName();  String  meComment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
870	[BUG]  [BUGGY]  if(myComment  ==  null  ||  myComment.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment  ==  null  ||  myComment.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment  ==  null  ||  myComment.equals(otherName))  {  String  myComment  =  getName();  String  meComment  =  getName();  }	  String    myComment    =    getName();    String    meComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
871	[BUG]  [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(otherName);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
872	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
873	[BUG]  [BUGGY]  if(myComment!=  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment!=  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment!=  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
874	[BUG]  [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment  ==  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
875	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getComment().toLowerCase();  yourComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    yourComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
876	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <?>)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <?>)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  <?>)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
877	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  ==  false)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  ==  false)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  ==  false)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
878	[BUG]  [BUGGY]  try  {  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  try  {  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	try  {  if(obj  instanceof  ZipArchiveEntry)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
879	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  >=  false)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  >=  false)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  >=  false)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
880	[BUG]  [BUGGY]  Object  myComment  =  super.equals(obj)&&!myName.equals(obj);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  super.equals(obj)&&!myName.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  super.equals(obj)&&!myName.equals(obj);	  String    myComment    =    super.equals(obj)&&!myName.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
881	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(propertyName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(propertyName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(propertyName);	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
882	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(getName());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(getName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(getName());	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
883	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(obj);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(obj);	  String    myComment    =    getImmediateParent().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
884	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  mement  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  mement  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  mement  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    mement    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
885	[BUG]  [BUGGY]  String  myComment  =  getInternalNameAttributes(obj);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalNameAttributes(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalNameAttributes(obj);	  String    myComment    =    getInternalAttributes(obj);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
886	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  obj.getCommentName()  : " ";  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  obj.getCommentName()  : " ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  obj.getCommentName()  : " ";	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
887	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  obj.getCommentName()  :  name;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  obj.getCommentName()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  obj.getCommentName()  :  name;	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
888	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  obj.getCommentName()  : "  <  unknown> ";  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  obj.getCommentName()  : "  <  unknown> ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  obj.getCommentName()  : "  <  unknown> ";	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
889	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  obj.getCommentName()  : "null ";  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  obj.getCommentName()  : "null ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  obj.getCommentName()  : "null ";	  String    myComment    =    obj.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
890	[BUG]  [BUGGY]  Object  myComment  =(obj  ==  null)?  null  :  getComment().toString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =(obj  ==  null)?  null  :  getComment().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =(obj  ==  null)?  null  :  getComment().toString();	  String    myComment    =(obj    ==    null)?    null    :    getComment().toString();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
891	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent().getShortName()  :  null;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent().getShortName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent().getShortName()  :  null;	  String    myComment    =    getImmediateParent().getShortName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
892	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent()  :  other.getShortName();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent()  :  other.getShortName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent()  :  other.getShortName();	  String    myComment    =    getImmediateParent().getShortName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
893	[BUG]  [BUGGY]  String  myComment  =  getExternalAttributes().equals(otherName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalAttributes().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalAttributes().equals(otherName);	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
894	[BUG]  [BUGGY]  String  myComment  =  getExternalAttributes().remove(myName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getExternalAttributes().remove(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getExternalAttributes().remove(myName);	  String    myComment    =    getExternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
895	[BUG]  [BUGGY]  Object  otherComment  =  getComment().equals(otherName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  otherComment  =  getComment().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  otherComment  =  getComment().equals(otherName);	  Object    myComment    =    getComment().equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
896	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().commentToString(myName);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().commentToString(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().commentToString(myName);	  String    myComment    =    getImmediateParent().toString();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
897	[BUG]  [BUGGY]  Object  myComment  =  getInternalAttributes().remove(otherName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getInternalAttributes().remove(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getInternalAttributes().remove(otherName);	  String    myComment    =    getInternalAttributes().remove(otherName);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
898	[BUG]  [BUGGY]  Object  myComment  =  getComment(myName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getComment(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getComment(myName);	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
899	[BUG]  [BUGGY]  Object  otherComment  =  getComment(otherName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  otherComment  =  getComment(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  otherComment  =  getComment(otherName);	  Object    myComment    =    getComment(obj);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
900	[BUG]  [BUGGY]  String  myComment  =  getComment().toString()  + "/ ".equals(myName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toString()  + "/ ".equals(myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toString()  + "/ ".equals(myName);	  String    myComment    =    getComment().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
901	[BUG]  [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment  ==  null)  {  String  myComment  =  getName();  Character  myComment  =  getName();  }	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
902	[BUG]  [BUGGY]  Character  myComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Character  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Character  myComment  =  getName();	  String    myComment    =    getName();    Character    myComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
903	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  super.getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  super.getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  super.getComment()  :  null;	  String    myComment    =(obj    ==    null)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
904	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes().equals(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalAttributes().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalAttributes().equals(otherName);	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
905	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes().iterator().next();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getInternalAttributes().iterator().next();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getInternalAttributes().iterator().next();	  String    otherComment    =    getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
906	[BUG]  [BUGGY]  String  gpbComment  =  getComment(obj,  obj);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  gpbComment  =  getComment(obj,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  gpbComment  =  getComment(obj,  obj);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
907	[BUG]  [BUGGY]  String  otherComment  =  getComment(gpb,  obj);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  otherComment  =  getComment(gpb,  obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  otherComment  =  getComment(gpb,  obj);	  String    myComment    =    getComment(obj,    gpb);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
908	[BUG]  [BUGGY]  char  myComment  =  getComment(obj,  myName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getComment(obj,  myName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getComment(obj,  myName);	  String    myComment    =    getComment(obj,    myName);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
909	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
910	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  String  noComment  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    noComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
911	[BUG]  [BUGGY]  byte  myComment  =  getComment(other);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  byte  myComment  =  getComment(other);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	byte  myComment  =  getComment(other);	  String    myComment    =    getComment(other);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
912	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().getComment(),  myName;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().getComment(),  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().getComment(),  myName;	  String    myComment    =    getImmediateParent().getComment();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
913	[BUG]  [BUGGY]  boolean  myComment  =  getName();  String  yourComment  =  getName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  String  yourComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  String  yourComment  =  getName();	  String    myComment    =    getName();    String    yourComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
914	[BUG]  [BUGGY]  String  myComment  =  getCommentType().equals(otherName)?  getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentType().equals(otherName)?  getComment()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentType().equals(otherName)?  getComment()  :  null;	  String    myComment    =    getComment().equals(otherName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
915	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <?>)  {  String  myComment  =((  ZipArchiveEntry  <?>)obj).getName();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <?>)  {  String  myComment  =((  ZipArchiveEntry  <?>)obj).getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  <?>)  {  String  myComment  =((  ZipArchiveEntry  <?>)obj).getName();  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
916	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  final  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  final  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  final  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
917	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName()  +  1;  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName()  +  1;  if(myComment!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName()  +  1;  if(myComment!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
918	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getCommentName().equals(otherName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getCommentName().equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getCommentName().equals(otherName);	  String    myComment    =(obj    ==    null)?    null    :    getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
919	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
920	[BUG]  [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  super.equals(obj);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
921	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getName()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
922	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(other.getName()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getName()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
923	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  thisComment  =  getComment().toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  thisComment  =  getComment().toLowerCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  thisComment  =  getComment().toLowerCase();  }	  String    myComment    =    getComment().toLowerCase();    String    thisComment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
924	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().size();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().size();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().size();	  String    myComment    =    getInternalAttributes()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
925	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  noComment  =  getName();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
926	[BUG]  [BUGGY]  String  myComment  =  getCurrentName();  String  noComment  =  getName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCurrentName();  String  noComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCurrentName();  String  noComment  =  getName();	  String    myComment    =    getName();    String    noComment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
927	[BUG]  [BUGGY]  char  myComment  =  getComment().equalsIgnoreCase(otherName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getComment().equalsIgnoreCase(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getComment().equalsIgnoreCase(otherName);	  String    myComment    =    getComment().equalsIgnoreCase(otherName);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
928	[BUG]  [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
929	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  else  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  else  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  ==  null)  {  String  myComment  =  getName();  String  myComment  =  getname();  }  else  {  return  false;  }	  String    myComment    =    getName();    String    myComment    =    getname();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
930	[BUG]  [BUGGY]  byte  myComment  =  getComment(other.getComment());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  byte  myComment  =  getComment(other.getComment());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	byte  myComment  =  getComment(other.getComment());	  String    myComment    =    getComment(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
931	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  String  name  =((  ZipArchiveEntry  <  K,  V>)obj).getName();  if(!myName.equals(name))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  String  name  =((  ZipArchiveEntry  <  K,  V>)obj).getName();  if(!myName.equals(name))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  String  name  =((  ZipArchiveEntry  <  K,  V>)obj).getName();  if(!myName.equals(name))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
932	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(name))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(name))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName()  +  1;  if(!myName.equals(name))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
933	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =  getName();  if(!myName.equals(name))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =  getName();  if(!myName.equals(name))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =  getName();  if(!myName.equals(name))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(name))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
934	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  myComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
935	[BUG]  [BUGGY]  ExternalAttributes  <  ZipArchiveEntry>  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  ExternalAttributes  <  ZipArchiveEntry>  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	ExternalAttributes  <  ZipArchiveEntry>  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
936	[BUG]  [BUGGY]  Object  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  otherComment  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    myComment    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
937	[BUG]  [BUGGY]  String  myComment  =  getComment().equals(myName)?  getComment()  +  1  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().equals(myName)?  getComment()  +  1  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().equals(myName)?  getComment()  +  1  :  null;	  String    myComment    =    getComment().equals(myName)?    getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
938	[BUG]  [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  comments  =  getComment().toLowerCase();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getComment().toLowerCase();  boolean  comments  =  getComment().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getComment().toLowerCase();  boolean  comments  =  getComment().toLowerCase();	  String    myComment    =    getComment().toLowerCase();    String    comment    =    getComment().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
939	[BUG]  [BUGGY]  Object  myComment  =  getName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  Object  myComment  =  getName().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	Object  myComment  =  getName().toLowerCase();	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
940	[BUG]  [BUGGY]  char  myComment  =  getName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  getName().toLowerCase();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  getName().toLowerCase();	  String    myComment    =    getName().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
941	[BUG]  [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj)?  super.equalsIgnoreCase(obj):  null;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equalsIgnoreCase(obj)?  super.equalsIgnoreCase(obj):  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equalsIgnoreCase(obj)?  super.equalsIgnoreCase(obj):  null;	  String    myComment    =    super.equalsIgnoreCase(obj);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
942	[BUG]  [BUGGY]  }  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  }  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	}  else  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
943	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  >=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  >=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(otherName  >=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
944	[BUG]  [BUGGY]  char  myComment  =  super.equals(otherName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  char  myComment  =  super.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	char  myComment  =  super.equals(otherName);	  String    myComment    =    super.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
945	[BUG]  [BUGGY]  String  myComment  =  super.equals(null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(null);	  String    myComment    =    super.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
946	[BUG]  [BUGGY]  String  myComment  =  getImmediateSimpleName();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateSimpleName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateSimpleName();	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
947	[BUG]  [BUGGY]  String  myComment  =  getImmediateShortName();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateShortName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateShortName();	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
948	[BUG]  [BUGGY]  String  myComment  =  getImmediatePath();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediatePath();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediatePath();	  String    myComment    =    getImmediateName();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
949	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
950	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  <  K,  V>)  {  ZipArchiveEntry  <  K,  V>  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
951	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
952	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <?>)  {  ZipArchiveEntry  <?>  other  =(ZipArchiveEntry  <?>)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry  <?>)  {  ZipArchiveEntry  <?>  other  =(ZipArchiveEntry  <?>)obj;  if(!myName.equals(other.getName()))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry  <?>)  {  ZipArchiveEntry  <?>  other  =(ZipArchiveEntry  <?>)obj;  if(!myName.equals(other.getName()))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(!myName.equals(other.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
953	[BUG]  [BUGGY]  boolean  myComment  =  getName();  String  myComment  =  gotName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  boolean  myComment  =  getName();  String  myComment  =  gotName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	boolean  myComment  =  getName();  String  myComment  =  gotName();	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
954	[BUG]  [BUGGY]  byte  myComment  =  getName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  byte  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	byte  myComment  =  getName();	  String    myComment    =    getName();    String    myComment    =    gotName();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
955	[BUG]  [BUGGY]  String  myComment  =  getComment().toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment().toUpperCase(Locale.ENGLISH);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment().toUpperCase(Locale.ENGLISH);	  String    myComment    =    getComment().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
956	[BUG]  [BUGGY]  String  myComment  =  this.obj.getName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj.getName();	  String    myComment    =    obj.getName();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
957	[BUG]  [BUGGY]  String  myComment  =  obj!=  null?  obj.getName()  : "  <  unknown> ";  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj!=  null?  obj.getName()  : "  <  unknown> ";  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj!=  null?  obj.getName()  : "  <  unknown> ";	  String    myComment    =    obj.getName();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
958	[BUG]  [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().compareTo(otherName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  ==  null)?  null  :  getComment().compareTo(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  ==  null)?  null  :  getComment().compareTo(otherName);	  String    myComment    =(obj    ==    null)?    null    :    getComment()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
959	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
960	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName().trim();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName().trim();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)obj).getName().trim();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
961	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  name  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    name    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
962	[BUG]  [BUGGY]  String  myComment  =  getComment(obj.getClass()).toString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getComment(obj.getClass()).toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getComment(obj.getClass()).toString();	  String    myComment    =    getComment(obj.getClass());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
963	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  other  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
964	[BUG]  [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(obj  instanceof  ZipArchiveEntry)  {  ZipArchiveEntry  entry  =(ZipArchiveEntry)obj;  if(other.getParent()!=  null)  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    ZipArchiveEntry    other    =(ZipArchiveEntry)obj;    if(other.getParent()!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
965	[BUG]  [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  myCOMment  =  getName();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(myComment  ==  null)  {  String  myComment  =  getName();  myCOMment  =  getName();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(myComment  ==  null)  {  String  myComment  =  getName();  myCOMment  =  getName();  }	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
966	[BUG]  [BUGGY]  ArrayList  myComment  =  getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  ArrayList  myComment  =  getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	ArrayList  myComment  =  getName();	  String    myComment    =    getName();    String    myCOMment    =    getName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
967	[BUG]  [BUGGY]  String  myComment  =  this.externalAttributes.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.externalAttributes.equals(otherName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.externalAttributes.equals(otherName);	  String    myComment    =    other.getInternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
968	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent()  :  other.getName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent()  :  other.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName)?  getImmediateParent()  :  other.getName();	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
969	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.getName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.getName();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(otherName)?  null  :  other.getName();	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
970	[BUG]  [BUGGY]  String  myComment  =  getImmediateParent().equals(myName)?  getImmediateParent()  :  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getImmediateParent().equals(myName)?  getImmediateParent()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getImmediateParent().equals(myName)?  getImmediateParent()  :  null;	  String    myComment    =    getImmediateParent().getName();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
971	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null  ||  obj.getComment()!=  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null  ||  obj.getComment()!=  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null  ||  obj.getComment()!=  null;	  String    myComment    =    obj    ==    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
972	[BUG]  [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.getEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  obj  ==  null?  null  :  obj.getEntry();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  obj  ==  null?  null  :  obj.getEntry();	  String    myComment    =    obj    ==    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
973	[BUG]  [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).getName()  :  null;	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).getName()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
974	[BUG]  [BUGGY]  String  myComment  =  name!=  null?  other.getComment()  :  myName;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  name!=  null?  other.getComment()  :  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  name!=  null?  other.getComment()  :  myName;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
975	[BUG]  [BUGGY]  String  myComment  =  name!=  null?  other.getComment()  :  name;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  name!=  null?  other.getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  name!=  null?  other.getComment()  :  name;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
976	[BUG]  [BUGGY]  String  myComment  =  other!=  null?  other.getComment()  :  myName;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  other!=  null?  other.getComment()  :  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  other!=  null?  other.getComment()  :  myName;	  String    myComment    =    obj!=    null?    other.getComment()    :    name;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
977	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)obj).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
978	[BUG]  [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(other  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(other  instanceof  ZipArchiveEntry)  {  String  otherName  =((  ZipArchiveEntry)other).getName();  if(!myName.equals(otherName))  {  return  false;  }	  if(obj    instanceof    ZipArchiveEntry)    {    String    otherName    =((    ZipArchiveEntry)obj).getName();    if(!myName.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
979	[BUG]  [BUGGY]  String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  myName;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  myName;	  String    myComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
980	[BUG]  [BUGGY]  String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  name;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  name;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj!=  null?  this.obj.getComment()  :  name;	  String    myComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
981	[BUG]  [BUGGY]  String  myComment  =  this.obj  ==  null?  this.obj.getComment()  :  myName;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this.obj  ==  null?  this.obj.getComment()  :  myName;  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this.obj  ==  null?  this.obj.getComment()  :  myName;	  String    myComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
982	[BUG]  [BUGGY]  String  myComment  =  getCommentName(null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getCommentName(null);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getCommentName(null);	  String    myComment    =    getCommentName(obj);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
983	[BUG]  [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =(obj  instanceof  ZipArchiveEntry)?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
984	[BUG]  [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  this  instanceof  ZipArchiveEntry?((  ZipArchiveEntry)obj).toString()  :  super.equals(obj);	  String    myComment    =    obj    instanceof    ZipArchiveEntry?((    ZipArchiveEntry)obj).toString()    :    super.equals(obj);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
985	[BUG]  [BUGGY]  String  myComment  =  super.equals(entryName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(entryName);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(entryName);	  String    myComment    =    super.equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
986	[BUG]  [BUGGY]  String  myComment  =  super.equals(comment);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(comment);  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(comment);	  String    myComment    =    super.equals(myName);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
987	[BUG]  [BUGGY]  String  myComment  =  getInternalAttributes().equals(myName)?  null  :  getInternalAttributes().toString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  getInternalAttributes().equals(myName)?  null  :  getInternalAttributes().toString();  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  getInternalAttributes().equals(myName)?  null  :  getInternalAttributes().toString();	  String    myComment    =    getInternalAttributes().toString();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
988	[BUG]  [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	if(getComment()!=  null)  {  String  myComment  =  getComment().toLowerCase();  String  myComment  =  getComment().toUpperCase();  }	  String    myComment    =    getComment().toLowerCase();    String    myComment    =    getComment().toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
989	[BUG]  [BUGGY]  String  myComment  =  super.equals(getEntryName());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(getEntryName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(getEntryName());	  String    myComment    =    super.equals(getName());    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
990	[BUG]  [BUGGY]  String  myComment  =  super.equals(getCommentName());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ZipArchiveEntry  other  =  (ZipArchiveEntry)  obj;  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }      [BUGGY]  String  myComment  =  super.equals(getCommentName());  [BUGGY]      String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	666	666	1	replace	String  myComment  =  super.equals(getCommentName());	  String    myComment    =    super.equals(getName());    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
