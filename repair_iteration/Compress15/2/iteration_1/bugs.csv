bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  otherComment  =  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  myComment.getComment();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.getComment();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  String  otherComment  =  obj.getComment();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  obj.getComment();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.getComment();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  String  otherComment  =  myName.getComment();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  myName.getComment();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.getComment();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  String  otherComment  =  myComment;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  myComment;  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment;	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  String  otherComment  =  myName.toLowerCase();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  myName.toLowerCase();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toLowerCase();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  String  otherComment  =  getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  getComment();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(other.getComment());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  myName.equals(other.getComment());  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(other.getComment());	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]    [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	  	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getComment();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.getComment();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  other.getComment();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  other.getComment();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getComment();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getComment();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  :  obj.toString();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.toString()  :  obj.toString();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.toString()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.toString()  :  obj.toString();  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.toString()  :  obj.toString();	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  [BUGGY]  String  otherComment  =  obj!=  null?  obj.getComment()  :  null;  [BUGGY]  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.getComment()  :  null;	String  otherComment  =  other.getComment();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
