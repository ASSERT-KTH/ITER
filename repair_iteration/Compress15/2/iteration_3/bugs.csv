bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  otherComment  =  obj.equals(otherName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
2	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)&&!myComment.equals(otherName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)&&!myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)&&!myComment.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
3	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)||!myComment.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)||!myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)||!myComment.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
4	[BUG]  [BUGGY]  String  otherComment  =!myComment.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myComment.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
5	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName.toString());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName.toString());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName.toString());	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
6	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName.toLowerCase());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName.toLowerCase());	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
7	[BUG]  [BUGGY]  String  otherComment  =  myComment.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.toUpperCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.toUpperCase();	  String    otherComment    =    myName.toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
8	[BUG]  [BUGGY]  String  otherComment  =  obj.toUpperCase();  [CE]  diamond  operator  is  not  supported  in  -source  1.5  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.toUpperCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.toUpperCase();	  String    otherComment    =    myName.toUpperCase();    	non-compiled	[CE]  diamond  operator  is  not  supported  in  -source  1.5	36	None	replace
9	[BUG]  [BUGGY]  String  otherComment  =  myName.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toUpperCase(Locale.ENGLISH);	  String    otherComment    =    myName.toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
10	[BUG]  [BUGGY]  String  otherComment  =  name.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  name.toUpperCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  name.toUpperCase();	  String    otherComment    =    myName.toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
11	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getClass();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getClass();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.getClass();	  String    otherComment    =    obj    >=    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
12	[BUG]  [BUGGY]  String  otherComment  =  myName!=  null?  obj.toString()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName!=  null?  obj.toString()  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName!=  null?  obj.toString()  :  obj.toString();	  String    otherComment    =    myComment!=    null?    obj.toString()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
13	[BUG]  [BUGGY]  String  otherComment  =  mem.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  mem.toUpperCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  mem.toUpperCase();	  String    otherComment    =    otherName.toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
14	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment.toString()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment.toString()  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  myComment.toString()  :  obj.toString();	  String    otherComment    =    obj    ==    null?    myComment.toString()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  else  if(myComment!=  null)  {  if(otherName!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment!=  null)  {  if(otherName!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment!=  null)  {  if(otherName!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
16	[BUG]  [BUGGY]  else  if(myComment  ==  null)  {  if(otherName!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment  ==  null)  {  if(otherName!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment  ==  null)  {  if(otherName!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
17	[BUG]  [BUGGY]  String  otherComment  =  getName().equals(otherName.getComment());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equals(otherName.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equals(otherName.getComment());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
18	[BUG]  [BUGGY]  String  otherComment  =  getName().equals(other.getName());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equals(other.getName());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
19	[BUG]  [BUGGY]  String  otherComment  =  getName().equalsIgnoreCase(other.getComment());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equalsIgnoreCase(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equalsIgnoreCase(other.getComment());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
20	[BUG]  [BUGGY]  String  otherComment  =  getName().equals(otherName.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equals(otherName.getQualifiedName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equals(otherName.getQualifiedName());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
21	[BUG]  [BUGGY]  String  myComment  =  getName().equals(other.getName());  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  myComment  =  getName().equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  myComment  =  getName().equals(other.getName());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
22	[BUG]  [BUGGY]  String  otherComment  =  getSimpleName().equals(other.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getSimpleName().equals(other.getSimpleName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getSimpleName().equals(other.getSimpleName());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
23	[BUG]  [BUGGY]  String  otherComment  =  getName().equals(otherName.getName());  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equals(otherName.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equals(otherName.getName());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
24	[BUG]  [BUGGY]  if(myComment  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
25	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
26	[BUG]  [BUGGY]  else  if(myComment!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
27	[BUG]  [BUGGY]  if(myComment!=  null)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment!=  null)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment!=  null)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
28	[BUG]  [BUGGY]  ||!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  ||!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	||!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
29	[BUG]  [BUGGY]  if(myComment!=  null  ||!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment!=  null  ||!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment!=  null  ||!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
30	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.toString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  null  :  myComment.toString();	  String    otherComment    =(myComment!=    null)?    null    :    myComment.toString();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
31	[BUG]  [BUGGY]  String  otherComment  =(myComment  >=  null)?  null  :  myComment.toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  >=  null)?  null  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  >=  null)?  null  :  myComment.toString();	  String    otherComment    =(myComment!=    null)?    null    :    myComment.toString();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
32	[BUG]  [BUGGY]  String  otherComment  =  getEntry().getKey();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEntry().getKey();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEntry().getKey();	  String    otherComment    =    getEntry();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
33	[BUG]  [BUGGY]  String  otherComment  =  getEntry().getName();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEntry().getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEntry().getName();	  String    otherComment    =    getEntry();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
34	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes(otherName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes(otherName);	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
35	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes(myName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes(myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes(myName);	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
36	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes().toString();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes().toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes().toString();	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
37	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes(),  myName);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes(),  myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes(),  myName);	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
38	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getInternalAttributes();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getInternalAttributes();	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
39	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes().substring(0,  2);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes().substring(0,  2);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes().substring(0,  2);	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
40	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(otherName)?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.equals(otherName)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(otherName)?  null  :  myComment.getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
41	[BUG]  [BUGGY]  String  otherComment  =!myName.equals(otherName)?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myName.equals(otherName)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myName.equals(otherName)?  null  :  myComment.getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
42	[BUG]  [BUGGY]  String  otherComment  =  obj.equals(otherName)?  null  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.equals(otherName)?  null  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.equals(otherName)?  null  :  obj.getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
43	[BUG]  [BUGGY]  String  otherComment  =!myComment.equals(otherName)?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myComment.equals(otherName)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myComment.equals(otherName)?  null  :  myComment.getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
44	[BUG]  [BUGGY]  String  otherComment  =  obj.equals(otherName)?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.equals(otherName)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.equals(otherName)?  null  :  myComment.getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
45	[BUG]  [BUGGY]  String  myComment  =  myComment.equals(otherName)?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  myComment  =  myComment.equals(otherName)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  myComment  =  myComment.equals(otherName)?  null  :  myComment.getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
46	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getName()  :  otherName;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getName()  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.getName()  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment.getComment()    :    otherName;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
47	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getComment()  :  name;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getComment()  :  name;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.getComment()  :  name;	  String    otherComment    =    myComment!=    null?    myComment.getComment()    :    otherName;    	non-compiled	[CE]  ';'  expected	87	None	replace
48	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment.getComment()  :  otherName;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment.getComment()  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  myComment.getComment()  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment.getComment()    :    otherName;    	non-compiled	[CE]  ';'  expected	87	None	replace
49	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getComment()  :  myName;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getComment()  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.getComment()  :  myName;	  String    otherComment    =    myComment!=    null?    myComment.getComment()    :    otherName;    	non-compiled	[CE]  ';'  expected	87	None	replace
50	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.toString()  :  otherName;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.toString()  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.toString()  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment.getComment()    :    otherName;    	non-compiled	[CE]  ';'  expected	87	None	replace
51	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment.getName()  :  otherName;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment.getName()  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  myComment.getName()  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment.getComment()    :    otherName;    	non-compiled	[CE]  ';'  expected	87	None	replace
52	[BUG]  [BUGGY]  String  otherComment  =  getSimpleName();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getSimpleName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getSimpleName();	  String    otherComment    =    getName();    	non-compiled	[CE]  ';'  expected	9	None	replace
53	[BUG]  [BUGGY]  String  otherComment  =  getEscapedName();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedName();	  String    otherComment    =    getName();    	non-compiled	[CE]  ';'  expected	9	None	replace
54	[BUG]  [BUGGY]  String  otherComment  =!myName.equals(other.getName());  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myName.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myName.equals(other.getName());	  String    otherComment    =    myName.equals(other.getName());    	non-compiled	[CE]  ';'  expected	45	None	replace
55	[BUG]  [BUGGY]  String  otherComment  =  name.equals(other.getName());  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  name.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  name.equals(other.getName());	  String    otherComment    =    myName.equals(other.getName());    	non-compiled	[CE]  ';'  expected	45	None	replace
56	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(other.getName())&&!myComment.equals(other.getName());  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.equals(other.getName())&&!myComment.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(other.getName())&&!myComment.equals(other.getName());	  String    otherComment    =    myName.equals(other.getName());    	non-compiled	[CE]  ';'  expected	45	None	replace
57	[BUG]  [BUGGY]  String  otherComment  =  myName  ==  null?  obj.toString()  :  obj.toString();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName  ==  null?  obj.toString()  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName  ==  null?  obj.toString()  :  obj.toString();	  String    otherComment    =    myComment    ==    null?    obj.toString()    :    obj.toString();    	non-compiled	[CE]  ';'  expected	5	None	replace
58	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.getName();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  null  :  obj.getName();	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  ';'  expected	21	None	replace
59	[BUG]  [BUGGY]  String  otherComment  =  obj.getKey();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.getKey();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.getKey();	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  ';'  expected	21	None	replace
60	[BUG]  [BUGGY]  String  otherComment  =  myName.getName();  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.getName();	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  ';'  expected	21	None	replace
61	[BUG]  [BUGGY]  if(myComment  ==  null)  {  if(otherComment!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment  ==  null)  {  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment  ==  null)  {  if(otherComment!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
62	[BUG]  [BUGGY]  else  if(myComment!=  null)  {  if(otherComment!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment!=  null)  {  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment!=  null)  {  if(otherComment!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
63	[BUG]  [BUGGY]  if(myComment!=  null)  {  if(otherComment  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment!=  null)  {  if(otherComment  ==  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment!=  null)  {  if(otherComment  ==  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
64	[BUG]  [BUGGY]  if(otherComment!=  null)  {  if(myComment!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherComment!=  null)  {  if(myComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherComment!=  null)  {  if(myComment!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
65	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParent().getName();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParent().getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParent().getName();	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  ';'  expected	11	None	replace
66	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParent().toString();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParent().toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParent().toString();	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  String  otherComment  =  getImmediateName();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateName();	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParent().getComment();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParent().getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParent().getComment();	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParent().name;  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParent().name;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParent().name;	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
70	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  myComment.getComment();	  String    otherComment    =(other    ==    null)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
71	[BUG]  [BUGGY]  String  myComment  =(myComment  ==  null)?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  myComment  =(myComment  ==  null)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  myComment  =(myComment  ==  null)?  null  :  myComment.getComment();	  String    otherComment    =(other    ==    null)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
72	[BUG]  [BUGGY]  if(myComment!=  null)  {  if(otherName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment!=  null)  {  if(otherName.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment!=  null)  {  if(otherName.equals(otherName))  {  return  false;  }	  if(otherName!=    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
73	[BUG]  [BUGGY]  else  if(myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment.equals(otherName))  {  return  false;  }	  if(otherName!=    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
74	[BUG]  [BUGGY]  String  otherComment  =  this.name.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.name.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.name.toLowerCase();	  String    otherComment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
75	[BUG]  [BUGGY]  String  otherComment  =  mem.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  mem.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  mem.toLowerCase();	  String    otherComment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
76	[BUG]  [BUGGY]  String  otherComment  =  obj.trim();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.trim();	  String    otherComment    =    myComment.trim();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
77	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.trim();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  null  :  myComment.trim();	  String    otherComment    =    myComment.trim();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  String  otherComment  =  myName.trim();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.trim();	  String    otherComment    =    myComment.trim();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
79	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.trim();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  myComment.trim();	  String    otherComment    =    myComment.trim();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  else  if(myComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
81	[BUG]  [BUGGY]  if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
82	[BUG]  [BUGGY]  else  if(myComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
83	[BUG]  [BUGGY]  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	||!myComment.equals(otherComment))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
84	[BUG]  [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment!=  null)?  null  :  myComment.getName();	  String    otherComment    =(myComment!=    null)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
85	[BUG]  [BUGGY]  String  otherComment  =  name.equals(otherName.getComment());  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  name.equals(otherName.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  name.equals(otherName.getComment());	  String    otherComment    =    name.equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
86	[BUG]  [BUGGY]  String  otherComment  =(other!=  null)?  null  :  other.getName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other!=  null)?  null  :  other.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other!=  null)?  null  :  other.getName();	  String    otherComment    =(other    >=    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
87	[BUG]  [BUGGY]  String  otherComment  =(other  ==  null)?  null  :  other.getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other  ==  null)?  null  :  other.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other  ==  null)?  null  :  other.getName();	  String    otherComment    =(other    >=    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
88	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  getComment()  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  getComment()  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  getComment()  :  obj.getComment();	  String    otherComment    =    obj    ==    null?    getComment()    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
89	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  getComment()  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  getComment()  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  getComment()  :  myComment.getComment();	  String    otherComment    =    obj    ==    null?    getComment()    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
90	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  getComment()  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  getComment()  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  getComment()  :  obj.getComment();	  String    otherComment    =    obj    ==    null?    getComment()    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
91	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  getComment()  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  getComment()  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  getComment()  :  myComment.getComment();	  String    otherComment    =    obj    ==    null?    getComment()    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
92	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  getCommentName()  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  getCommentName()  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  getCommentName()  :  obj.getComment();	  String    otherComment    =    obj    ==    null?    getComment()    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
93	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  null  :  obj.getComment();	  String    otherComment    =    obj!=    null?    null    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getName()  :  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getName()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.getName()  :  null;	  String    otherComment    =    obj    ==    null?    obj.getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
95	[BUG]  [BUGGY]  String  otherComment  =  getComment(myName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment(myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment(myName);	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
96	[BUG]  [BUGGY]  String  otherComment  =  getComment(obj);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment(obj);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment(obj);	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
97	[BUG]  [BUGGY]  String  otherComment  =  getComment(otherName,  obj);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment(otherName,  obj);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment(otherName,  obj);	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
98	[BUG]  [BUGGY]  String  otherComment  =  getCommentName(otherName);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getCommentName(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getCommentName(otherName);	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
99	[BUG]  [BUGGY]  String  otherComment  =  getComment(otherName.toString());  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment(otherName.toString());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment(otherName.toString());	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
100	[BUG]  [BUGGY]  String  otherComment  =  getObj().toString();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getObj().toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getObj().toString();	  String    otherComment    =    getObj();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
101	[BUG]  [BUGGY]  String  otherComment  =  getExtra();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExtra();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExtra();	  String    otherComment    =    getObj();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
102	[BUG]  [BUGGY]  String  otherComment  =  getObj().trim();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getObj().trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getObj().trim();	  String    otherComment    =    getObj();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
103	[BUG]  [BUGGY]  String  otherComment  =  getObj().getName();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getObj().getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getObj().getName();	  String    otherComment    =    getObj();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
104	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  myComment  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  myComment  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  myComment  :  obj.toString();	  String    otherComment    =    obj    ==    null?    obj    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
105	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  obj  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  obj  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  obj  :  obj.toString();	  String    otherComment    =    obj    ==    null?    obj    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
106	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  myComment  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  myComment  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  myComment  :  obj.toString();	  String    otherComment    =    obj    ==    null?    obj    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
107	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  otherName  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  otherName  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  otherName  :  obj.toString();	  String    otherComment    =    obj    ==    null?    obj    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
108	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  null  :  obj.toString();	  String    otherComment    =    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
109	[BUG]  [BUGGY]  String  otherComment  =  obj.getClass().getName();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.getClass().getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.getClass().getName();	  String    otherComment    =    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
110	[BUG]  [BUGGY]  String  otherComment  =  obj.getClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.getClass().getSimpleName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.getClass().getSimpleName();	  String    otherComment    =    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
111	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  myComment.getComment()  :  obj;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  myComment.getComment()  :  obj;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  myComment.getComment()  :  obj;	  String    otherComment    =    obj!=    null?    obj.getComment()    :    myComment;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
112	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  obj.getComment()  :  myComment;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  obj.getComment()  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  obj.getComment()  :  myComment;	  String    otherComment    =    obj!=    null?    obj.getComment()    :    myComment;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
113	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  myComment.getComment()  :  obj;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  myComment.getComment()  :  obj;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  myComment.getComment()  :  obj;	  String    otherComment    =    obj!=    null?    obj.getComment()    :    myComment;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
114	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  obj.getComment()  :  obj;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  obj.getComment()  :  obj;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  obj.getComment()  :  obj;	  String    otherComment    =    obj!=    null?    obj.getComment()    :    myComment;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
115	[BUG]  [BUGGY]  String  otherComment  =  myComment.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.toLowerCase(Locale.ENGLISH);	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
116	[BUG]  [BUGGY]  String  otherComment  =  obj.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.toLowerCase(Locale.ENGLISH);	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
117	[BUG]  [BUGGY]  String  otherComment  =  locale.toLowerCase(myName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  locale.toLowerCase(myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  locale.toLowerCase(myName);	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
118	[BUG]  [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  Locale.US);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  Locale.US);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  Locale.US);	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
119	[BUG]  [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  true);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  true);	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
120	[BUG]  [BUGGY]  String  otherComment  =  locale.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  locale.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  locale.toLowerCase(Locale.ENGLISH);	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
121	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  null  :  obj.toLowerCase();	  String    otherComment    =    obj.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
122	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.toLowerCase();	  String    otherComment    =    obj.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
123	[BUG]  [BUGGY]  String  otherComment  =  this.obj.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj.toLowerCase();	  String    otherComment    =    obj.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
124	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  null  :  myComment.getName();	  String    otherComment    =    myComment!=    null?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
125	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.getName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  myComment.getName();	  String    otherComment    =    myComment!=    null?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
126	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.getCommentName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.getCommentName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  null  :  myComment.getCommentName();	  String    otherComment    =    myComment!=    null?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
127	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.equals(other.getComment());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  null  :  obj.equals(other.getComment());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
128	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.equals(other.getComment());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.equals(other.getComment());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
129	[BUG]  [BUGGY]  String  otherComment  =  obj.equals(myComment.getComment());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.equals(myComment.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.equals(myComment.getComment());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
130	[BUG]  [BUGGY]  String  otherComment  =  obj.equals(otherName.getComment());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.equals(otherName.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.equals(otherName.getComment());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
131	[BUG]  [BUGGY]  String  otherComment  =  getComment().equals(other.getComment());  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment().equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment().equals(other.getComment());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
132	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName.getName());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName.getName());	  String    otherComment    =    myComment.equals(other.getName());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
133	[BUG]  [BUGGY]  String  otherComment  =!myComment.equals(other.getName());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myComment.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myComment.equals(other.getName());	  String    otherComment    =    myComment.equals(other.getName());    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
134	[BUG]  [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getCommentName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getCommentName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment!=  null)?  null  :  myComment.getCommentName();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
135	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getSimpleName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getSimpleName();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getCommentName();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
136	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(otherName.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.equals(otherName.getQualifiedName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(otherName.getQualifiedName());	  String    otherComment    =    myName.equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
137	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(otherName.getKey());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.equals(otherName.getKey());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(otherName.getKey());	  String    otherComment    =    myName.equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
138	[BUG]  [BUGGY]  String  otherComment  =  obj.equals(otherName.getName());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.equals(otherName.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.equals(otherName.getName());	  String    otherComment    =    myName.equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
139	[BUG]  [BUGGY]  String  otherComment  =!myName.equals(otherName.getName());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myName.equals(otherName.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myName.equals(otherName.getName());	  String    otherComment    =    myName.equals(otherName.getName());    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
140	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.'));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.'));	  String    otherComment    =    myComment.toString();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
141	[BUG]  [BUGGY]  else  if(myComment!=  null)  {  if(otherName  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment!=  null)  {  if(otherName  ==  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment!=  null)  {  if(otherName  ==  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
142	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getContent();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getContent();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getContent();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getParent();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
143	[BUG]  [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getParent();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getParent();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment!=  null)?  null  :  myComment.getParent();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getParent();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
144	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getRawParent();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getRawParent();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getRawParent();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getParent();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
145	[BUG]  [BUGGY]  String  otherComment  =  obj.equals(otherName.toString());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.equals(otherName.toString());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.equals(otherName.toString());	  String    otherComment    =    myName.equals(otherName.toString());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
146	[BUG]  [BUGGY]  String  otherComment  =!myName.equals(otherName.toString());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myName.equals(otherName.toString());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myName.equals(otherName.toString());	  String    otherComment    =    myName.equals(otherName.toString());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
147	[BUG]  [BUGGY]  String  otherComment  =  name.equals(otherName.toString());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  name.equals(otherName.toString());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  name.equals(otherName.toString());	  String    otherComment    =    myName.equals(otherName.toString());    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
148	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  1);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  1);	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
149	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  2);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  2);	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
150	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  1));  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  1));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.')+  1));	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
151	[BUG]  [BUGGY]  String  otherComment  =  obj.substring(0,  myComment.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.substring(0,  myComment.lastIndexOf('.'));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.substring(0,  myComment.lastIndexOf('.'));	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
152	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  obj.getComment()  :  myName;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  obj.getComment()  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  obj.getComment()  :  myName;	  String    otherComment    =    obj!=    null?    obj.getComment()    :    myName;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
153	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  :  myName;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.getComment()  :  myName;	  String    otherComment    =    obj!=    null?    obj.getComment()    :    myName;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
154	[BUG]  [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment!=  null)?  null  :  myComment.equals(otherName);	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
155	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.equalsIgnoreCase(otherName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.equalsIgnoreCase(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.equalsIgnoreCase(otherName);	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
156	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.equals(otherName,  myComment);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.equals(otherName,  myComment);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.equals(otherName,  myComment);	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
157	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.toString().equals(otherName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.toString().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.toString().equals(otherName);	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
158	[BUG]  [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  myComment.equals(otherName);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName  ==  null)?  null  :  myComment.equals(otherName);	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
159	[BUG]  [BUGGY]  String  otherComment  =!myName.equals(otherName.getComment());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myName.equals(otherName.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myName.equals(otherName.getComment());	  String    otherComment    =    myName.equals(otherName.getComment());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
160	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(otherName.getRawComment());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.equals(otherName.getRawComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(otherName.getRawComment());	  String    otherComment    =    myName.equals(otherName.getComment());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
161	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment.getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment.getComment()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  myComment.getComment()  :  null;	  String    otherComment    =    obj    ==    null?    myComment.getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
162	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  this.myComment.getComment()  :  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  this.myComment.getComment()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  this.myComment.getComment()  :  null;	  String    otherComment    =    obj    ==    null?    myComment.getComment()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
163	[BUG]  [BUGGY]  String  otherComment  =(otherName!=  null)?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName!=  null)?  null  :  other.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName!=  null)?  null  :  other.getComment();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
164	[BUG]  [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName  ==  null)?  null  :  myComment.getComment();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
165	[BUG]  [BUGGY]  String  otherComment  =(myName  ==  null)?  null  :  other.getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myName  ==  null)?  null  :  other.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myName  ==  null)?  null  :  other.getComment();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
166	[BUG]  [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  other.getEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  other.getEntry();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName  ==  null)?  null  :  other.getEntry();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
167	[BUG]  [BUGGY]  String  otherComment  =  getEntryName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEntryName().toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEntryName().toLowerCase();	  String    otherComment    =    getEntryName();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
168	[BUG]  [BUGGY]  String  otherComment  =  getEntryName().trim();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEntryName().trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEntryName().trim();	  String    otherComment    =    getEntryName();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
169	[BUG]  [BUGGY]  String  otherComment  =  getEntryName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEntryName()  + "n ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEntryName()  + "n ";	  String    otherComment    =    getEntryName();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
170	[BUG]  [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getEntry();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment!=  null)?  null  :  myComment.getEntry();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
171	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getEntryName();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getEntryName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getEntryName();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
172	[BUG]  [BUGGY]  String  otherComment  =  getRawComment().getName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawComment().getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawComment().getName();	  String    otherComment    =    getRawComment();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
173	[BUG]  [BUGGY]  String  otherComment  =  getRawComment(otherName);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawComment(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawComment(otherName);	  String    otherComment    =    getRawComment();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
174	[BUG]  [BUGGY]  String  otherComment  =  getRawComment().toString();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawComment().toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawComment().toString();	  String    otherComment    =    getRawComment();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
175	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.length());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.length());	  String    otherComment    =    myName.substring(0,    myComment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
176	[BUG]  [BUGGY]  String  otherComment  =  myName.substring(0,  myComment.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.substring(0,  myComment.length());	  String    otherComment    =    myName.substring(0,    myComment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myName.length());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myName.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myName.length());	  String    otherComment    =    myName.substring(0,    myComment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
178	[BUG]  [BUGGY]  String  otherComment  =  new  String(myComment.substring(0,  myComment.length()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  new  String(myComment.substring(0,  myComment.length()));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  new  String(myComment.substring(0,  myComment.length()));	  String    otherComment    =    myName.substring(0,    myComment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
179	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getKey();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getKey();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.getKey();	  String    otherComment    =    obj    ==    null?    null    :    obj.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
180	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  obj.getEntry();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  obj.getEntry();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  obj.getEntry();	  String    otherComment    =    obj    ==    null?    null    :    obj.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
181	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment  :  otherName;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  myComment  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
182	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  myName;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment  :  myName;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
183	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  name;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  name;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment  :  name;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
184	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  myComment;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment  :  myComment;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
185	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment  :  myName;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  myComment  :  myName;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
186	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment  :  name;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment  :  name;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  myComment  :  name;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
187	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.toString()  :  myComment.toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.toString()  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  obj.toString()  :  myComment.toString();	  String    otherComment    =    obj    ==    null?    obj.toString()    :    myComment.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
188	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  this  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  this  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  this  :  obj.getComment();	  String    otherComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
189	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  myComment  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  myComment  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  myComment  :  obj.getComment();	  String    otherComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
190	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  this  :  obj.getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  this  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  this  :  obj.getComment();	  String    otherComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
191	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  this  :  myComment.getComment();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  this  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  this  :  myComment.getComment();	  String    otherComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
192	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  obj.getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  obj.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  obj.getName();	  String    otherComment    =    obj    ==    null?    null    :    obj.getName();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
193	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.getComment()  :  myComment;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.getComment()  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  obj.getComment()  :  myComment;	  String    otherComment    =    obj    ==    null?    obj.getComment()    :    myComment;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
194	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.getComment()  :  obj;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.getComment()  :  obj;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  obj.getComment()  :  obj;	  String    otherComment    =    obj    ==    null?    obj.getComment()    :    myComment;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
195	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  obj.getComment()  : "   ";  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  obj.getComment()  : "   ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  obj.getComment()  : "   ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
196	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  myComment.getComment()  : "   ";  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  myComment.getComment()  : "   ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  myComment.getComment()  : "   ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
197	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "   ";  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "   ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.getComment()  : "   ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
198	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  myComment.getComment()  : "   ";  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  myComment.getComment()  : "   ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  myComment.getComment()  : "   ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
199	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.getComment()  : "[null] ";  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.getComment()  : "[null] ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.getComment()  : "[null] ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
200	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.getComment()  : "   ";  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.getComment()  : "   ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  obj.getComment()  : "   ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
201	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  myComment.getComment();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  myComment.getComment();	  String    otherComment    =    myComment    ==    null?    null    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	3	None	replace
202	[BUG]  [BUGGY]  String  otherComment  =  myName  ==  null?  null  :  obj.getComment();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName  ==  null?  null  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName  ==  null?  null  :  obj.getComment();	  String    otherComment    =    myComment    ==    null?    null    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	3	None	replace
203	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.equals(other.getComment());  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  null  :  myComment.equals(other.getComment());	  String    otherComment    =    null.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	50	None	replace
204	[BUG]  [BUGGY]  String  otherComment  =  null.equals(otherName.getComment());  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  null.equals(otherName.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  null.equals(otherName.getComment());	  String    otherComment    =    null.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	50	None	replace
205	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  obj.toString()  :  null;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  obj.toString()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  obj.toString()  :  null;	  String    otherComment    =    obj!=    null?    obj.toString()    :    null;    	non-compiled	[CE]  ')'  expected	86	None	replace
206	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.toString()  :  null;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.toString()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.toString()  :  null;	  String    otherComment    =    obj!=    null?    obj.toString()    :    null;    	non-compiled	[CE]  ')'  expected	86	None	replace
207	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  myComment.toString()  :  null;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  myComment.toString()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  myComment.toString()  :  null;	  String    otherComment    =    obj!=    null?    obj.toString()    :    null;    	non-compiled	[CE]  ')'  expected	86	None	replace
208	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  myComment.toString()  :  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  myComment.toString()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  myComment.toString()  :  null;	  String    otherComment    =    obj!=    null?    obj.toString()    :    null;    	non-compiled	[CE]  ')'  expected	86	None	replace
209	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.toString()  :  null;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.toString()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  obj.toString()  :  null;	  String    otherComment    =    obj!=    null?    obj.toString()    :    null;    	non-compiled	[CE]  ')'  expected	86	None	replace
210	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  :  myComment;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.toString()  :  myComment;	  String    otherComment    =    obj!=    null?    obj.toString()    :    null;    	non-compiled	[CE]  ')'  expected	86	None	replace
211	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  obj.toString();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  obj.toString();	  String    otherComment    =    obj    ==    null?    null    :    obj.toString();    	non-compiled	[CE]  ')'  expected	71	None	replace
212	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.toString();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  myComment.toString();	  String    otherComment    =    obj    ==    null?    null    :    obj.toString();    	non-compiled	[CE]  ')'  expected	71	None	replace
213	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.toLowerCase();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  null  :  myComment.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  null  :  myComment.toLowerCase();	  String    otherComment    =    myComment.toLowerCase();    	non-compiled	[CE]  ')'  expected	17	None	replace
214	[BUG]  [BUGGY]  String  otherComment  =  getEscapedComment().getName();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedComment().getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedComment().getName();	  String    otherComment    =    getEscapedComment();    	non-compiled	[CE]  ')'  expected	12	None	replace
215	[BUG]  [BUGGY]  String  otherComment  =  getEscapedComment().toString();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedComment().toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedComment().toString();	  String    otherComment    =    getEscapedComment();    	non-compiled	[CE]  ')'  expected	12	None	replace
216	[BUG]  [BUGGY]  String  otherComment  =  getEscapedComment(otherName);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedComment(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedComment(otherName);	  String    otherComment    =    getEscapedComment();    	non-compiled	[CE]  ')'  expected	12	None	replace
217	[BUG]  [BUGGY]  String  otherComment  =  getEscapedComment()  + "n ";  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedComment()  + "n ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedComment()  + "n ";	  String    otherComment    =    getEscapedComment();    	non-compiled	[CE]  ')'  expected	12	None	replace
218	[BUG]  [BUGGY]  String  otherComment  =  yourComment.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  yourComment.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  yourComment.substring(0,  myComment.length());	  String    otherComment    =    myComment.substring(0,    myComment.length()    -    2);    	non-compiled	[CE]  ')'  expected	18	None	replace
219	[BUG]  [BUGGY]  String  otherComment  =  mement.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  mement.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  mement.substring(0,  myComment.length());	  String    otherComment    =    myComment.substring(0,    myComment.length()    -    2);    	non-compiled	[CE]  ')'  expected	18	None	replace
220	[BUG]  [BUGGY]  String  otherComment  =  myComment.getKey();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.getKey();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.getKey();	  String    otherComment    =    myComment.getName();    	non-compiled	[CE]  ')'  expected	27	None	replace
221	[BUG]  [BUGGY]  String  otherComment  =  mySeparator.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  mySeparator.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  mySeparator.substring(0,  myComment.length());	  String    otherComment    =    myName.substring(0,    myComment.length()    -    2);    	non-compiled	[CE]  ')'  expected	31	None	replace
222	[BUG]  [BUGGY]  String  otherComment  =  myObj.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myObj.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myObj.substring(0,  myComment.length());	  String    otherComment    =    myName.substring(0,    myComment.length()    -    2);    	non-compiled	[CE]  ')'  expected	31	None	replace
223	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParentName()  + "/ ";  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParentName()  + "/ ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParentName()  + "/ ";	  String    otherComment    =    getImmediateParentName();    	non-compiled	[CE]  ')'  expected	14	None	replace
224	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParentName()  + "n ";  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParentName()  + "n ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParentName()  + "n ";	  String    otherComment    =    getImmediateParentName();    	non-compiled	[CE]  ')'  expected	14	None	replace
225	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParentName()  +  1;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParentName()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParentName()  +  1;	  String    otherComment    =    getImmediateParentName();    	non-compiled	[CE]  ')'  expected	14	None	replace
226	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.equals(other.getName());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.equals(other.getName());	  String    otherComment    =    obj.equals(other.getName());    	non-compiled	[CE]  ')'  expected	73	None	replace
227	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.equals(other.getName());  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  null  :  obj.equals(other.getName());	  String    otherComment    =    obj.equals(other.getName());    	non-compiled	[CE]  ')'  expected	73	None	replace
228	[BUG]  [BUGGY]  String  otherComment  =  obj.equals(myComment.getName());  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.equals(myComment.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.equals(myComment.getName());	  String    otherComment    =    obj.equals(other.getName());    	non-compiled	[CE]  ')'  expected	73	None	replace
229	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName.getComment());  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName.getComment());	  String    otherComment    =    myComment.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	48	None	replace
230	[BUG]  [BUGGY]  String  otherComment  =!myName.equals(otherName.getQualifiedName());  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myName.equals(otherName.getQualifiedName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myName.equals(otherName.getQualifiedName());	  String    otherComment    =!myName.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	49	None	replace
231	[BUG]  [BUGGY]  String  otherComment  =!myName.equals(otherName.getKey());  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myName.equals(otherName.getKey());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myName.equals(otherName.getKey());	  String    otherComment    =!myName.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	49	None	replace
232	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null  &&  obj.getComment()!=  null;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null  &&  obj.getComment()!=  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null  &&  obj.getComment()!=  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
233	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null  ||  obj.getComment()!=  null;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null  ||  obj.getComment()!=  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null  ||  obj.getComment()!=  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
234	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null  ||  myComment.getComment()!=  null;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null  ||  myComment.getComment()!=  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null  ||  myComment.getComment()!=  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
235	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null  &&  obj.getComment()!=  null;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null  &&  obj.getComment()!=  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null  &&  obj.getComment()!=  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
236	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getComment()!=  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getComment()!=  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.getComment()!=  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
237	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null  ||  obj.getName()!=  null;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null  ||  obj.getName()!=  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null  ||  obj.getName()!=  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
238	[BUG]  [BUGGY]  String  myComment  =  otherName.getComment();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  myComment  =  otherName.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  myComment  =  otherName.getComment();	  String    otherComment    =    otherName.getComment();    	non-compiled	[CE]  ')'  expected	32	None	replace
239	[BUG]  [BUGGY]  String  otherComment  =  name.getComment();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  name.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  name.getComment();	  String    otherComment    =    otherName.getComment();    	non-compiled	[CE]  ')'  expected	32	None	replace
240	[BUG]  [BUGGY]  String  otherComment  =  this.myComment.getComment();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.myComment.getComment();	  String    otherComment    =    otherName.getComment();    	non-compiled	[CE]  ')'  expected	32	None	replace
241	[BUG]  [BUGGY]  String  otherComment  =(other!=  null)?  null  :  myComment.getComment();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other!=  null)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other!=  null)?  null  :  myComment.getComment();	  String    otherComment    =(other!=    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	23	None	replace
242	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  obj.toString()  :  myComment.toString();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  obj.toString()  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  obj.toString()  :  myComment.toString();	  String    otherComment    =    obj!=    null?    obj.toString()    :    myComment.toString();    	non-compiled	[CE]  ')'  expected	8	None	replace
243	[BUG]  [BUGGY]  String  otherComment  =  getEmptyComment()  +  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEmptyComment()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEmptyComment()  +  1;	  String    otherComment    =    getEmptyComment();    	non-compiled	[CE]  ')'  expected	90	None	replace
244	[BUG]  [BUGGY]  String  otherComment  =  getEmptyComment().toString();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEmptyComment().toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEmptyComment().toString();	  String    otherComment    =    getEmptyComment();    	non-compiled	[CE]  ')'  expected	90	None	replace
245	[BUG]  [BUGGY]  String  otherComment  =  getEmptyComment().toLowerCase();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEmptyComment().toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEmptyComment().toLowerCase();	  String    otherComment    =    getEmptyComment();    	non-compiled	[CE]  ')'  expected	90	None	replace
246	[BUG]  [BUGGY]  String  otherComment  =  getEmptyComment(otherName);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEmptyComment(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEmptyComment(otherName);	  String    otherComment    =    getEmptyComment();    	non-compiled	[CE]  ')'  expected	90	None	replace
247	[BUG]  [BUGGY]  if(myComment  ==  null)  {  if(otherName  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment  ==  null)  {  if(otherName  ==  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment  ==  null)  {  if(otherName  ==  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	80	None	replace
248	[BUG]  [BUGGY]  String  otherComment  =  name.toString();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  name.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  name.toString();	  String    otherComment    =    myName.toString();    	non-compiled	[CE]  ')'  expected	30	None	replace
249	[BUG]  [BUGGY]  String  otherComment  =  myName.substring(0,  myComment.length()  -  3);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.substring(0,  myComment.length()  -  3);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.substring(0,  myComment.length()  -  3);	  String    otherComment    =    myName.toString();    	non-compiled	[CE]  ')'  expected	30	None	replace
250	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn()  +  1;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn()  +  1;	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
251	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn().toString();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn().toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn().toString();	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
252	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn(otherName);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn(otherName);	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
253	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn(myName);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn(myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn(myName);	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
254	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn(),  myName);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn(),  myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn(),  myName);	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
255	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn().getName();  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn().getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn().getName();	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
256	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getComment()  :  null;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getComment()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.getComment()  :  null;	  String    otherComment    =    obj!=    null?    myComment.getComment()    :    null;    	non-compiled	[CE]  ')'  expected	41	None	replace
257	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  this.myComment.getComment()  :  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  this.myComment.getComment()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  this.myComment.getComment()  :  null;	  String    otherComment    =    obj!=    null?    myComment.getComment()    :    null;    	non-compiled	[CE]  ')'  expected	41	None	replace
258	[BUG]  [BUGGY]  String  otherComment  =  my.obj.getComment();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  my.obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  my.obj.getComment();	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  ')'  expected	38	None	replace
259	[BUG]  [BUGGY]  String  otherComment  =  this.obj.getName();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj.getName();	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  ')'  expected	38	None	replace
260	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getQualifiedName();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getQualifiedName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getQualifiedName();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getName();    	non-compiled	[CE]  ')'  expected	53	None	replace
261	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.toString()  + "n ";  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.toString()  + "n ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.toString()  + "n ";	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.toString();    	non-compiled	[CE]  ')'  expected	54	None	replace
262	[BUG]  [BUGGY]  String  otherComment  =  getAssignedComment().toString();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getAssignedComment().toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getAssignedComment().toString();	  String    otherComment    =    getAssignedComment();    	non-compiled	[CE]  ')'  expected	13	None	replace
263	[BUG]  [BUGGY]  String  otherComment  =  getAssignedComment().getName();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getAssignedComment().getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getAssignedComment().getName();	  String    otherComment    =    getAssignedComment();    	non-compiled	[CE]  ')'  expected	13	None	replace
264	[BUG]  [BUGGY]  String  otherComment  =  getSelectedComment();  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getSelectedComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getSelectedComment();	  String    otherComment    =    getAssignedComment();    	non-compiled	[CE]  ')'  expected	13	None	replace
265	[BUG]  [BUGGY]  String  otherComment  =  getAssignedComment(otherName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getAssignedComment(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getAssignedComment(otherName);	  String    otherComment    =    getAssignedComment();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
266	[BUG]  [BUGGY]  String  otherComment  =(other  ==  null)?  null  :  other.getCommentName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other  ==  null)?  null  :  other.getCommentName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other  ==  null)?  null  :  other.getCommentName();	  String    otherComment    =(other    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
267	[BUG]  [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getKey();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment!=  null)?  null  :  myComment.getKey();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment!=  null)?  null  :  myComment.getKey();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getKey();    	non-compiled	[CE]  ')'  expected	56	None	replace
268	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getValue();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getValue();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getValue();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getKey();    	non-compiled	[CE]  ')'  expected	56	None	replace
269	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getText();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getText();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getText();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getKey();    	non-compiled	[CE]  ')'  expected	56	None	replace
270	[BUG]  [BUGGY]  else  if(myComment!=  null)  {  if(otherName.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  else  if(myComment!=  null)  {  if(otherName.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	else  if(myComment!=  null)  {  if(otherName.equals(otherName))  {  return  false;  }	  if(otherName    ==    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	61	None	replace
271	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.toString()  :  obj.toString();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.toString()  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.toString()  :  obj.toString();	  String    otherComment    =    obj!=    null?    myComment.toString()    :    obj.toString();    	non-compiled	[CE]  ')'  expected	7	None	replace
272	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.length()  +  1);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.length()  +  1);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.length()  +  1);	  String    otherComment    =    myComment.substring(0,    myComment.length()    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
273	[BUG]  [BUGGY]  String  otherComment  =  obj.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj.substring(0,  myComment.length());	  String    otherComment    =    myComment.substring(0,    myComment.length()    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
274	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.toLowerCase();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  myComment.toLowerCase();	  String    otherComment    =    myComment.toLowerCase();    	non-compiled	[CE]  ')'  expected	17	None	replace
275	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(otherName.toString())&&!myComment.equals(otherName.toString());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.equals(otherName.toString())&&!myComment.equals(otherName.toString());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(otherName.toString())&&!myComment.equals(otherName.toString());	  String    otherComment    =    myName.equals(otherName.toString());    	non-compiled	[CE]  ')'  expected	89	None	replace
276	[BUG]  [BUGGY]  String  otherComment  =  getName().equals(otherName.toString());  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equals(otherName.toString());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equals(otherName.toString());	  String    otherComment    =    myName.equals(otherName.toString());    	non-compiled	[CE]  ')'  expected	89	None	replace
277	[BUG]  [BUGGY]  String  otherComment  =!myName.equals(otherName.getParent());  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myName.equals(otherName.getParent());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myName.equals(otherName.getParent());	  String    otherComment    =!myName.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	49	None	replace
278	[BUG]  [BUGGY]  String  otherComment  =  getObj(otherName);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getObj(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getObj(otherName);	  String    otherComment    =    getObj();    	non-compiled	[CE]  ')'  expected	66	None	replace
279	[BUG]  [BUGGY]  String  otherComment  =  other.getComment().equals(obj);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  other.getComment().equals(obj);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  other.getComment().equals(obj);	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	46	None	replace
280	[BUG]  [BUGGY]  String  otherComment  =  this.getComment().equals(other.getComment());  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.getComment().equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.getComment().equals(other.getComment());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	46	None	replace
281	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "[null] ";  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "[null] ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.getComment()  : "[null] ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  ')'  expected	99	None	replace
282	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "null ";  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "null ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.getComment()  : "null ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  ')'  expected	99	None	replace
283	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "n ";  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "n ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.getComment()  : "n ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  ')'  expected	99	None	replace
284	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.getComment()  : "  <  unknown> ";  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.getComment()  : "  <  unknown> ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.getComment()  : "  <  unknown> ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  ')'  expected	99	None	replace
285	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "/ ";  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  : "/ ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.getComment()  : "/ ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  ')'  expected	99	None	replace
286	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(myComment!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(obj  ==  null)  {  if(myComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(obj  ==  null)  {  if(myComment!=  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	81	None	replace
287	[BUG]  [BUGGY]  ExternalAttributes  <  String>  externalAttributes  =  getExternalAttributes();  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  ExternalAttributes  <  String>  externalAttributes  =  getExternalAttributes();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	ExternalAttributes  <  String>  externalAttributes  =  getExternalAttributes();	  if(otherName!=    null)    {    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	81	None	replace
288	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(myComment.equals(otherName)||  myComment.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(myComment.equals(otherName)||  myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(myComment.equals(otherName)||  myComment.equals(otherName))  {  return  false;  }	  if(otherName!=    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	60	None	replace
289	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(!myName.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(!myName.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(!myName.equals(otherName))  {  return  false;  }	  if(otherName!=    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	60	None	replace
290	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(myComment.equals(otherName)||!myName.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(myComment.equals(otherName)||!myName.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(myComment.equals(otherName)||!myName.equals(otherName))  {  return  false;  }	  if(otherName!=    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	60	None	replace
291	[BUG]  [BUGGY]  String  otherComment  =  this.obj  ==  null?  null  :  obj.getComment();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj  ==  null?  null  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj  ==  null?  null  :  obj.getComment();	  String    otherComment    =    obj!=    null?    null    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	1	None	replace
292	[BUG]  [BUGGY]  String  otherComment  =(other  [Delete]  null)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other  [Delete]  null)?  null  :  other.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other  [Delete]  null)?  null  :  other.getComment();	  String    otherComment    =(other    >=    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	77	None	replace
293	[BUG]  [BUGGY]  String  otherComment  =(other  >>  null)?  null  :  other.getComment();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other  >>  null)?  null  :  other.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other  >>  null)?  null  :  other.getComment();	  String    otherComment    =(other    >=    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	77	None	replace
294	[BUG]  [BUGGY]  if(otherName  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
295	[BUG]  [BUGGY]  if(otherComment!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherComment!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherComment!=  null)  {  if(!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
296	[BUG]  [BUGGY]  String  otherComment  =  this.name.equals(other.getName());  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.name.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.name.equals(other.getName());	  String    otherComment    =    name.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	51	None	replace
297	[BUG]  [BUGGY]  String  otherComment  =  getComment(myComment);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment(myComment);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment(myComment);	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  ')'  expected	67	None	replace
298	[BUG]  [BUGGY]  String  otherComment  =  getComment(otherName,  myComment);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment(otherName,  myComment);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment(otherName,  myComment);	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  ')'  expected	67	None	replace
299	[BUG]  [BUGGY]  String  otherComment  =  meName.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  meName.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  meName.substring(0,  myComment.length());	  String    otherComment    =    myName.substring(0,    myComment.length()    -    1);    	non-compiled	[CE]  ')'  expected	29	None	replace
300	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null  ||  obj.getComment()  ==  null;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null  ||  obj.getComment()  ==  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null  ||  obj.getComment()  ==  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
301	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null  ||  obj.getComment()  ==  null;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null  ||  obj.getComment()  ==  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null  ||  obj.getComment()  ==  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
302	[BUG]  [BUGGY]  String  otherComment  =  name.equals(otherName.getName());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  name.equals(otherName.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  name.equals(otherName.getName());	  String    otherComment    =    myName.equals(otherName.getName());    	non-compiled	[CE]  ')'  expected	88	None	replace
303	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.equals(otherName);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  myComment.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  ')'  expected	69	None	replace
304	[BUG]  [BUGGY]  String  otherComment  =  getComment().equals(otherName);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment().equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  ')'  expected	69	None	replace
305	[BUG]  [BUGGY]  String  otherComment  =  this.myComment.equals(otherName);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.myComment.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  ')'  expected	69	None	replace
306	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImplicitPrototype();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImplicitPrototype();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImplicitPrototype();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getName();    	non-compiled	[CE]  ')'  expected	53	None	replace
307	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImplicitReturn();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImplicitReturn();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImplicitReturn();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getName();    	non-compiled	[CE]  ')'  expected	53	None	replace
308	[BUG]  [BUGGY]  String  otherComment  =(obj  ==  null)?  null  :  obj.getName();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(obj  ==  null)?  null  :  obj.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(obj  ==  null)?  null  :  obj.getName();	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  ')'  expected	21	None	replace
309	[BUG]  [BUGGY]  String  otherComment  =  obj  >=  null?  null  :  obj.getName();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  >=  null?  null  :  obj.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  >=  null?  null  :  obj.getName();	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  ')'  expected	21	None	replace
310	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  otherName.getComment()  :  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  otherName.getComment()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  otherName.getComment()  :  null;	  String    otherComment    =    myComment    ==    null?    obj.getComment()    :    null;    	non-compiled	[CE]  ')'  expected	42	None	replace
311	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn()  +  myComment;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn()  +  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn()  +  myComment;	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
312	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn(),  myComment;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn(),  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn(),  myComment;	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
313	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn()  +  obj;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn()  +  obj;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn()  +  obj;	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
314	[BUG]  [BUGGY]  String  otherComment  =  otherName.trim();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  otherName.trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  otherName.trim();	  String    otherComment    =    myComment.trim();    	non-compiled	[CE]  ')'  expected	20	None	replace
315	[BUG]  [BUGGY]  String  otherComment  =  this.obj  ==  null?  null  :  obj.toString();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj  ==  null?  null  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj  ==  null?  null  :  obj.toString();	  String    otherComment    =    obj    ==    null?    null    :    obj.toString();    	non-compiled	[CE]  ')'  expected	71	None	replace
316	[BUG]  [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  otherName.getComment();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  otherName.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName  ==  null)?  null  :  otherName.getComment();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	76	None	replace
317	[BUG]  [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  otherName.toString();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  otherName.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName  ==  null)?  null  :  otherName.toString();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	76	None	replace
318	[BUG]  [BUGGY]  String  otherComment  =(otherName!=  null)?  null  :  otherName.getComment();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName!=  null)?  null  :  otherName.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName!=  null)?  null  :  otherName.getComment();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	76	None	replace
319	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  getComment()  :  obj.toString();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  getComment()  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  getComment()  :  obj.toString();	  String    otherComment    =    obj    ==    null?    getComment()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	98	None	replace
320	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  getComment()  :  obj.getName();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  getComment()  :  obj.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  getComment()  :  obj.getName();	  String    otherComment    =    obj    ==    null?    getComment()    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	98	None	replace
321	[BUG]  [BUGGY]  String  otherComment  =  this.obj!=  null?  myComment.getComment()  :  null;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj!=  null?  myComment.getComment()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj!=  null?  myComment.getComment()  :  null;	  String    otherComment    =    myComment!=    null?    obj.getComment()    :    null;    	non-compiled	[CE]  ')'  expected	39	None	replace
322	[BUG]  [BUGGY]  String  otherComment  =(other!=  null)?  null  :  other.getCommentName();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other!=  null)?  null  :  other.getCommentName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other!=  null)?  null  :  other.getCommentName();	  String    otherComment    =(other!=    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	23	None	replace
323	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  this.myComment.getComment();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  this.myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)?  null  :  this.myComment.getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  ')'  expected	70	None	replace
324	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.toString();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.toString();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  ')'  expected	70	None	replace
325	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  getComment();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)?  null  :  getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  ')'  expected	70	None	replace
326	[BUG]  [BUGGY]  String  otherComment  =  getComment().equals(other.getName());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment().equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment().equals(other.getName());	  String    otherComment    =    myComment.equals(other.getName());    	non-compiled	[CE]  ')'  expected	72	None	replace
327	[BUG]  [BUGGY]  String  otherComment  =  this.myComment.equals(other.getName());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.myComment.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.myComment.equals(other.getName());	  String    otherComment    =    myComment.equals(other.getName());    	non-compiled	[CE]  ')'  expected	72	None	replace
328	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  this.myComment.getComment();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  this.myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  this.myComment.getComment();	  String    otherComment    =(other    ==    null)?    null    :    myComment.getComment();    	non-compiled	[CE]  ')'  expected	25	None	replace
329	[BUG]  [BUGGY]  String  otherComment  =  meComment.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  meComment.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  meComment.substring(0,  myComment.length());	  String    otherComment    =    myComment.substring(0,    myComment.length()    -    2);    	non-compiled	[CE]  ')'  expected	18	None	replace
330	[BUG]  [BUGGY]  String  otherComment  =  getComment().substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment().substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment().substring(0,  myComment.length());	  String    otherComment    =    myComment.substring(0,    myComment.length()    -    2);    	non-compiled	[CE]  ')'  expected	18	None	replace
331	[BUG]  [BUGGY]  String  otherComment  =  this.myComment.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.myComment.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.myComment.substring(0,  myComment.length());	  String    otherComment    =    myComment.substring(0,    myComment.length()    -    2);    	non-compiled	[CE]  ')'  expected	18	None	replace
332	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParentName()  +  myComment;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParentName()  +  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParentName()  +  myComment;	  String    otherComment    =    getImmediateParentName();    	non-compiled	[CE]  ')'  expected	14	None	replace
333	[BUG]  [BUGGY]  String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :  myName;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :  myName;	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  ')'  expected	38	None	replace
334	[BUG]  [BUGGY]  String  otherComment  =  this.obj  ==  null?  null  :  this.obj.getComment();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj  ==  null?  null  :  this.obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj  ==  null?  null  :  this.obj.getComment();	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
335	[BUG]  [BUGGY]  String  otherComment  =(this.obj  ==  null)?  null  :  this.obj.getComment();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(this.obj  ==  null)?  null  :  this.obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(this.obj  ==  null)?  null  :  this.obj.getComment();	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
336	[BUG]  [BUGGY]  String  otherComment  =  this.obj  ==  null?  this.obj.getComment()  :  myName;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj  ==  null?  this.obj.getComment()  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj  ==  null?  this.obj.getComment()  :  myName;	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
337	[BUG]  [BUGGY]  String  otherComment  =  getName().equalsIgnoreCase(other.getName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equalsIgnoreCase(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equalsIgnoreCase(other.getName());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
338	[BUG]  [BUGGY]  String  otherComment  =  getInternalAttributes().equals(other.getInternalAttributes());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getInternalAttributes().equals(other.getInternalAttributes());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getInternalAttributes().equals(other.getInternalAttributes());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
339	[BUG]  [BUGGY]  String  otherComment  =  getName().equals(otherName.getRawComment());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equals(otherName.getRawComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equals(otherName.getRawComment());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
340	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.toUpperCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.toUpperCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.toUpperCase();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.toString();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
341	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.toExternalForm();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.toExternalForm();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.toExternalForm();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.toString();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
342	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  otherName.getCommentName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  otherName.getCommentName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  otherName.getCommentName();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getCommentName();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
343	[BUG]  [BUGGY]  String  otherComment  =  this.getComment();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.getComment();	  String    otherComment    =    otherName.getComment();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
344	[BUG]  [BUGGY]  String  otherComment  =  mem.getComment();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  mem.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  mem.getComment();	  String    otherComment    =    otherName.getComment();    	non-compiled	[CE]  ')'  expected	32	None	replace
345	[BUG]  [BUGGY]  String  otherComment  =  getRawEntry();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawEntry();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawEntry();	  String    otherComment    =    getEntry();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
346	[BUG]  [BUGGY]  String  otherComment  =(other  ==  null)?  null  :  otherName.getComment();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other  ==  null)?  null  :  otherName.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other  ==  null)?  null  :  otherName.getComment();	  String    otherComment    =(other    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
347	[BUG]  [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH).trim();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH).trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toLowerCase(Locale.ENGLISH).trim();	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
348	[BUG]  [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH)+  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toLowerCase(Locale.ENGLISH)+  1;	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
349	[BUG]  [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH  +  1);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toLowerCase(Locale.ENGLISH  +  1);	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
350	[BUG]  [BUGGY]  String  otherComment  =  otherName.getName();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  otherName.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  otherName.getName();	  String    otherComment    =    myComment.getName();    	non-compiled	[CE]  ';'  expected	27	None	replace
351	[BUG]  [BUGGY]  String  otherComment  =  other.getName();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  other.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  other.getName();	  String    otherComment    =    myComment.getName();    	non-compiled	[CE]  ';'  expected	27	None	replace
352	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getEntryName();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getEntryName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.getEntryName();	  String    otherComment    =    obj    ==    null?    null    :    obj.getEntry();    	non-compiled	[CE]  ';'  expected	95	None	replace
353	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.getEntry();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  null  :  obj.getEntry();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  null  :  obj.getEntry();	  String    otherComment    =    obj    ==    null?    null    :    obj.getEntry();    	non-compiled	[CE]  ';'  expected	95	None	replace
354	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.indexOf('.'));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.indexOf('.'));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.indexOf('.'));	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  ';'  expected	33	None	replace
355	[BUG]  [BUGGY]  String  otherComment  =  getEscapedComment(myName);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedComment(myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedComment(myName);	  String    otherComment    =    getEscapedComment();    	non-compiled	[CE]  ';'  expected	12	None	replace
356	[BUG]  [BUGGY]  String  otherComment  =  getEscapedComment()  +  1;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedComment()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedComment()  +  1;	  String    otherComment    =    getEscapedComment();    	non-compiled	[CE]  ';'  expected	12	None	replace
357	[BUG]  [BUGGY]  String  otherComment  =  getEscapedComment()  +  myComment;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedComment()  +  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedComment()  +  myComment;	  String    otherComment    =    getEscapedComment();    	non-compiled	[CE]  ';'  expected	12	None	replace
358	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  myComment  :  obj.getComment();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  myComment  :  obj.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  myComment  :  obj.getComment();	  String    otherComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  ';'  expected	97	None	replace
359	[BUG]  [BUGGY]  String  otherComment  =  getImmediateComment();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateComment();	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  ';'  expected	11	None	replace
360	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParent().comment;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParent().comment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParent().comment;	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  ';'  expected	11	None	replace
361	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParent()  +  1;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParent()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParent()  +  1;	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  ';'  expected	11	None	replace
362	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getImplicitPrototype();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.getImplicitPrototype();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.getImplicitPrototype();	  String    otherComment    =    obj    ==    null?    null    :    obj.getName();    	non-compiled	[CE]  ';'  expected	2	None	replace
363	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes()  +  1;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes()  +  1;	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  ';'  expected	65	None	replace
364	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes().toArray(new  String[]  {  }  );  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes().toArray(new  String[]  {  }  );  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes().toArray(new  String[]  {  }  );	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  ';'  expected	65	None	replace
365	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes(),  myComment;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes(),  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes(),  myComment;	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  ';'  expected	65	None	replace
366	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  :  myComment  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.getComment()  :  myComment  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.getComment()  :  myComment  +  1;	  String    otherComment    =    obj    ==    null?    obj.getComment()    :    myComment;    	non-compiled	[CE]  ')'  expected	85	None	replace
367	[BUG]  [BUGGY]  String  otherComment  =  this.obj.toString();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj.toString();	  String    otherComment    =    obj.toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
368	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  getName()  :  obj.toString();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  getName()  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  getName()  :  obj.toString();	  String    otherComment    =    obj.toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
369	[BUG]  [BUGGY]  String  otherComment  =  getEmptyComment(myName);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEmptyComment(myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEmptyComment(myName);	  String    otherComment    =    getEmptyComment();    	non-compiled	[CE]  ')'  expected	90	None	replace
370	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(obj  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(obj  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
371	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||!parent.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||!parent.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
372	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherName))  {  return  false;  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||!parent.equals(otherName))  {  return  false;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||!parent.equals(otherName))  {  return  false;	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
373	[BUG]  [BUGGY]  ExternalAttributes  <  String>  externalAttributes  =  obj.getExternalAttributes();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  ExternalAttributes  <  String>  externalAttributes  =  obj.getExternalAttributes();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	ExternalAttributes  <  String>  externalAttributes  =  obj.getExternalAttributes();	  if(otherName    ==    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	61	None	replace
374	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj  :  obj.toString();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj  :  obj.toString();	  String    otherComment    =    obj    ==    null?    obj    :    obj.toString();    	non-compiled	[CE]  ')'  expected	101	None	replace
375	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj  :  myComment.toString();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj  :  myComment.toString();	  String    otherComment    =    obj    ==    null?    obj    :    obj.toString();    	non-compiled	[CE]  ')'  expected	101	None	replace
376	[BUG]  [BUGGY]  String  otherComment  =  otherName.toString();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  otherName.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  otherName.toString();	  String    otherComment    =    myName.toString();    	non-compiled	[CE]  ')'  expected	30	None	replace
377	[BUG]  [BUGGY]  String  otherComment  =  this.myComment.equals(other.getComment());  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.myComment.equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.myComment.equals(other.getComment());	  String    otherComment    =    myComment.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	48	None	replace
378	[BUG]  [BUGGY]  String  otherComment  =  getRawComment(myName);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawComment(myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawComment(myName);	  String    otherComment    =    getRawComment();    	non-compiled	[CE]  ')'  expected	10	None	replace
379	[BUG]  [BUGGY]  String  otherComment  =  getRawComment()  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawComment()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawComment()  +  1;	  String    otherComment    =    getRawComment();    	non-compiled	[CE]  ')'  expected	10	None	replace
380	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(otherName!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(obj  ==  null)  {  if(otherName!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(obj  ==  null)  {  if(otherName!=  null)  {  return  false;  }	  if(myComment    ==    null)    {    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	64	None	replace
381	[BUG]  [BUGGY]  String  otherComment  =  getName().toUpperCase();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().toUpperCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().toUpperCase();	  String    otherComment    =    otherName.toUpperCase();    	non-compiled	[CE]  ')'  expected	103	None	replace
382	[BUG]  [BUGGY]  String  otherComment  =  toUpperCase(myComment);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  toUpperCase(myComment);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  toUpperCase(myComment);	  String    otherComment    =    otherName.toUpperCase();    	non-compiled	[CE]  ')'  expected	103	None	replace
383	[BUG]  [BUGGY]  String  otherComment  =  getAssignedComment(myName);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getAssignedComment(myName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getAssignedComment(myName);	  String    otherComment    =    getAssignedComment();    	non-compiled	[CE]  ')'  expected	13	None	replace
384	[BUG]  [BUGGY]  String  otherComment  =  getAssignedComment()  +  1;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getAssignedComment()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getAssignedComment()  +  1;	  String    otherComment    =    getAssignedComment();    	non-compiled	[CE]  ')'  expected	13	None	replace
385	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getComment()  :  myComment;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getComment()  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.getComment()  :  myComment;	  String    otherComment    =    myComment!=    null?    myComment.getComment()    :    otherName;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
386	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(otherComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(otherComment!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
387	[BUG]  [BUGGY]  if(otherName  ==  null)  {  if(otherComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName  ==  null)  {  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName  ==  null)  {  if(otherComment!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
388	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  obj.toString()  :  myComment;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  obj.toString()  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  obj.toString()  :  myComment;	  String    otherComment    =    obj!=    null?    obj.toString()    :    null;    	non-compiled	[CE]  ')'  expected	86	None	replace
389	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toLowerCase()  :  myComment;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.toLowerCase()  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.toLowerCase()  :  myComment;	  String    otherComment    =    obj.toLowerCase();    	non-compiled	[CE]  ')'  expected	34	None	replace
390	[BUG]  [BUGGY]  String  otherComment  =  other.getName().equals(obj);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  other.getName().equals(obj);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  other.getName().equals(obj);	  String    otherComment    =    obj.equals(other.getName());    	non-compiled	[CE]  ')'  expected	73	None	replace
391	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  otherName.getKey();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  otherName.getKey();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  otherName.getKey();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getKey();    	non-compiled	[CE]  ')'  expected	56	None	replace
392	[BUG]  [BUGGY]  parent  ==  null  ||  otherName!=  null)  {  if(otherName!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||  otherName!=  null)  {  if(otherName!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||  otherName!=  null)  {  if(otherName!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	78	None	replace
393	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(myComment  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(obj  ==  null)  {  if(myComment  ==  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(obj  ==  null)  {  if(myComment  ==  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	80	None	replace
394	[BUG]  [BUGGY]  if(otherName  ==  null)  {  if(myComment  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName  ==  null)  {  if(myComment  ==  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName  ==  null)  {  if(myComment  ==  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	80	None	replace
395	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment  :  myComment;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  myComment  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  myComment  :  myComment;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  ')'  expected	102	None	replace
396	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  myComment.toString();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment  :  myComment.toString();	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  ')'  expected	102	None	replace
397	[BUG]  [BUGGY]  String  otherComment  =  getRawEntryName();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawEntryName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawEntryName();	  String    otherComment    =    getEntryName();    	non-compiled	[CE]  ')'  expected	92	None	replace
398	[BUG]  [BUGGY]  String  otherComment  =  getOwnerComment();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getOwnerComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getOwnerComment();	  String    otherComment    =    getAssignedComment();    	non-compiled	[CE]  ')'  expected	13	None	replace
399	[BUG]  [BUGGY]  String  otherComment  =  getAssignedComment().trim();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getAssignedComment().trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getAssignedComment().trim();	  String    otherComment    =    getAssignedComment();    	non-compiled	[CE]  ')'  expected	13	None	replace
400	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '/'));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '/'));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '/'));	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	33	None	replace
401	[BUG]  [BUGGY]  String  otherComment  =  otherName.substring(0,  myComment.lastIndexOf('.'));  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  otherName.substring(0,  myComment.lastIndexOf('.'));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  otherName.substring(0,  myComment.lastIndexOf('.'));	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	33	None	replace
402	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '-'));  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '-'));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '-'));	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	33	None	replace
403	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  name.length()));  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  name.length()));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  name.length()));	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	33	None	replace
404	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '_'));  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '_'));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.lastIndexOf('.',  '_'));	  String    otherComment    =    myName.substring(0,    myComment.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	33	None	replace
405	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturn().equals(otherName);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturn().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturn().equals(otherName);	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
406	[BUG]  [BUGGY]  String  otherComment  =  getImplicitInternal();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitInternal();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitInternal();	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
407	[BUG]  [BUGGY]  String  otherComment  =  getImplicitReturnType();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImplicitReturnType();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImplicitReturnType();	  String    otherComment    =    getImplicitReturn();    	non-compiled	[CE]  ')'  expected	68	None	replace
408	[BUG]  [BUGGY]  String  otherComment  =  myName.toUpperCase()  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.toUpperCase()  +  1;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toUpperCase()  +  1;	  String    otherComment    =    myName.toUpperCase();    	non-compiled	[CE]  ')'  expected	36	None	replace
409	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  other.getComment();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  null  :  other.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  null  :  other.getComment();	  String    otherComment    =    myComment    ==    null?    null    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	3	None	replace
410	[BUG]  [BUGGY]  String  otherComment  =  myPath.substring(0,  myComment.length());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myPath.substring(0,  myComment.length());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myPath.substring(0,  myComment.length());	  String    otherComment    =    myName.substring(0,    myComment.length()    -    2);    	non-compiled	[CE]  ')'  expected	31	None	replace
411	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null  ||  obj.getComment()!=  null;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null  ||  obj.getComment()!=  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null  ||  obj.getComment()!=  null;	  String    otherComment    =    obj    ==    null    ||    obj.getComment()!=    null;    	non-compiled	[CE]  ')'  expected	96	None	replace
412	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes().equals(otherName);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes().equals(otherName);	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	65	None	replace
413	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes().trim();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes().trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes().trim();	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	65	None	replace
414	[BUG]  [BUGGY]  String  otherComment  =  getExternalAttributes(null);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getExternalAttributes(null);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getExternalAttributes(null);	  String    otherComment    =    getExternalAttributes();    	non-compiled	[CE]  ')'  expected	65	None	replace
415	[BUG]  [BUGGY]  String  otherComment  =  otherName  ==  null?  obj.getComment()  :  null;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  otherName  ==  null?  obj.getComment()  :  null;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  otherName  ==  null?  obj.getComment()  :  null;	  String    otherComment    =    myComment!=    null?    obj.getComment()    :    null;    	non-compiled	[CE]  ')'  expected	39	None	replace
416	[BUG]  [BUGGY]  String  otherComment  =  this.entryName.toLowerCase();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.entryName.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.entryName.toLowerCase();	  String    otherComment    =    otherName.toLowerCase();    	non-compiled	[CE]  ')'  expected	75	None	replace
417	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toLowerCase()  :  myName;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.toLowerCase()  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.toLowerCase()  :  myName;	  String    otherComment    =    obj.toLowerCase();    	non-compiled	[CE]  ')'  expected	34	None	replace
418	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  this  :  obj.toLowerCase();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  this  :  obj.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  this  :  obj.toLowerCase();	  String    otherComment    =    obj.toLowerCase();    	non-compiled	[CE]  ')'  expected	34	None	replace
419	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toLowerCase()  :   " ";  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.toLowerCase()  :   " ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.toLowerCase()  :   " ";	  String    otherComment    =    obj.toLowerCase();    	non-compiled	[CE]  ')'  expected	34	None	replace
420	[BUG]  [BUGGY]  String  otherComment  =!myComment.equals(other.getComment());  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =!myComment.equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =!myComment.equals(other.getComment());	  String    otherComment    =    null.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	50	None	replace
421	[BUG]  [BUGGY]  String  otherComment  =  getObj().equals(otherName);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getObj().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getObj().equals(otherName);	  String    otherComment    =    getObj();    	non-compiled	[CE]  ')'  expected	66	None	replace
422	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getCommentName()  :  otherName;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getCommentName()  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.getCommentName()  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment.getComment()    :    otherName;    	non-compiled	[CE]  ')'  expected	87	None	replace
423	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  : " ";  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  : " ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.toString()  : " ";	  String    otherComment    =    obj.toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
424	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  : "  <  unknown> ";  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  : "  <  unknown> ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.toString()  : "  <  unknown> ";	  String    otherComment    =    obj.toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
425	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  :  myName;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.toString()  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.toString()  :  myName;	  String    otherComment    =    obj.toString();    	non-compiled	[CE]  ')'  expected	19	None	replace
426	[BUG]  [BUGGY]  String  otherComment  =  otherName!=  null?  myComment  :  otherName;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  otherName!=  null?  myComment  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  otherName!=  null?  myComment  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  ')'  expected	102	None	replace
427	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  otherName.toLowerCase();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment  :  otherName.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment  :  otherName.toLowerCase();	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
428	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  myComment  :  otherName;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  myComment  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  myComment  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  ')'  expected	102	None	replace
429	[BUG]  [BUGGY]  String  otherComment  =  this.myComment!=  null?  myComment  :  otherName;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.myComment!=  null?  myComment  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.myComment!=  null?  myComment  :  otherName;	  String    otherComment    =    myComment!=    null?    myComment    :    otherName;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
430	[BUG]  [BUGGY]  if(otherName!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
431	[BUG]  [BUGGY]  if(otherName  ==  null)  {  if(otherName!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName  ==  null)  {  if(otherName!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName  ==  null)  {  if(otherName!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
432	[BUG]  [BUGGY]  parent  ==  null  ||  otherName!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||  otherName!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||  otherName!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
433	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.trim()  : " ";  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.trim()  : " ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.trim()  : " ";	  String    otherComment    =    myComment.trim();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
434	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(otherName.getEmail());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.equals(otherName.getEmail());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(otherName.getEmail());	  String    otherComment    =    myName.equals(otherName.getComment());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
435	[BUG]  [BUGGY]  if(otherComment!=  null)  {  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherComment!=  null)  {  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherComment!=  null)  {  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }	  if(myComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
436	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }	  if(myComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
437	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||!parent.equals(otherComment))  {  return  false;	  if(myComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
438	[BUG]  [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.length()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.substring(0,  myComment.length()));  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.substring(0,  myComment.length()));	  String    otherComment    =    myComment.substring(0,    myComment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
439	[BUG]  [BUGGY]  String  otherComment  =  this.myComment.equals(otherName)?  null  :  myComment.getComment();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.myComment.equals(otherName)?  null  :  myComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.myComment.equals(otherName)?  null  :  myComment.getComment();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
440	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.getEntry();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.getEntry();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.getEntry();	  String    otherComment    =    myComment.equals(otherName)?    null    :    myComment.getComment();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
441	[BUG]  [BUGGY]  String  otherComment  =(other  ==  null)?  myComment  :  other.getComment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(other  ==  null)?  myComment  :  other.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(other  ==  null)?  myComment  :  other.getComment();	  String    otherComment    =(other!=    null)?    null    :    other.getComment();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
442	[BUG]  [BUGGY]  String  otherComment  =  myName.equals(otherName.toString())&&!myComment.equals(otherName);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.equals(otherName.toString())&&!myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.equals(otherName.toString())&&!myComment.equals(otherName);	  String    otherComment    =    myName.equals(otherName.toString());    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
443	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.toString()  : "null ";  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.toString()  : "null ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.toString()  : "null ";	  String    otherComment    =    myComment.toString();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
444	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.getComment()  : "  {   ";  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.getComment()  : "  {   ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.getComment()  : "  {   ";	  String    otherComment    =    obj!=    null?    obj.getComment()    :   "   ";    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
445	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getAncestor(2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getAncestor(2);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getAncestor(2);	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getParent();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
446	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParentPointer();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParentPointer();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParentPointer();	  String    otherComment    =    getName();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
447	[BUG]  [BUGGY]  String  otherComment  =  getRawComment().equals(otherName);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawComment().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawComment().equals(otherName);	  String    otherComment    =    getRawComment();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
448	[BUG]  [BUGGY]  String  otherComment  =  getRawComment().trim();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getRawComment().trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getRawComment().trim();	  String    otherComment    =    getRawComment();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
449	[BUG]  [BUGGY]  String  otherComment  =  this.obj!=  null?  myComment.toString()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj!=  null?  myComment.toString()  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj!=  null?  myComment.toString()  :  obj.toString();	  String    otherComment    =    obj!=    null?    obj.toString()    :    myComment.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
450	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getName()  : "  <  unknown> ";  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.getName()  : "  <  unknown> ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.getName()  : "  <  unknown> ";	  String    otherComment    =    myComment.getName();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
451	[BUG]  [BUGGY]  String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :  my;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :  my;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :  my;	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
452	[BUG]  [BUGGY]  String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :   " ";  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :   " ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj!=  null?  this.obj.getComment()  :   " ";	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
453	[BUG]  [BUGGY]  String  otherComment  =  this.obj  ==  null?  this.obj.getComment()  :  my;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.obj  ==  null?  this.obj.getComment()  :  my;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.obj  ==  null?  this.obj.getComment()  :  my;	  String    otherComment    =    this.obj.getComment();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
454	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(myComment.equals(otherName)&&!myName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(myComment.equals(otherName)&&!myName.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(myComment.equals(otherName)&&!myName.equals(otherName))  {  return  false;  }	  if(otherName!=    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
455	[BUG]  [BUGGY]  ExternalAttributes  <  ZipArchiveEntry>  otherComment  =  obj.getExternalAttributes();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  ExternalAttributes  <  ZipArchiveEntry>  otherComment  =  obj.getExternalAttributes();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	ExternalAttributes  <  ZipArchiveEntry>  otherComment  =  obj.getExternalAttributes();	  if(otherName!=    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
456	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(myComment.equals(otherName)||  otherName.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(myComment.equals(otherName)||  otherName.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(myComment.equals(otherName)||  otherName.equals(otherName))  {  return  false;  }	  if(otherName!=    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
457	[BUG]  [BUGGY]  if(otherName  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName  ==  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName  ==  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherName    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
458	[BUG]  [BUGGY]  parent  ==  null  ||  otherName  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||  otherName  ==  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||  otherName  ==  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherName    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
459	[BUG]  [BUGGY]  ExternalAttributes  <  ZipArchiveEntry>  otherComment  =  getExternalAttributes();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  ExternalAttributes  <  ZipArchiveEntry>  otherComment  =  getExternalAttributes();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	ExternalAttributes  <  ZipArchiveEntry>  otherComment  =  getExternalAttributes();	  if(otherName    ==    null)    {    if(myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	61	None	replace
460	[BUG]  [BUGGY]  if(myComment!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment!=  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	81	None	replace
461	[BUG]  [BUGGY]  parent  ==  null  ||  parent!=  null)  {  if(myComment!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||  parent!=  null)  {  if(myComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||  parent!=  null)  {  if(myComment!=  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	81	None	replace
462	[BUG]  [BUGGY]  parent  ==  null)  {  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null)  {  if(myComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null)  {  if(myComment!=  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
463	[BUG]  [BUGGY]  String  otherComment  =  getComment(otherName.getName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment(otherName.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment(otherName.getName());	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
464	[BUG]  [BUGGY]  String  otherComment  =  getComment(otherName.toLowerCase());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getComment(otherName.toLowerCase());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getComment(otherName.toLowerCase());	  String    otherComment    =    getComment(otherName);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
465	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  this  :  obj.getName();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  this  :  obj.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  this  :  obj.getName();	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
466	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  getName()  :  obj.getName();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  getName()  :  obj.getName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  getName()  :  obj.getName();	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
467	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.getName()  :  myComment;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.getName()  :  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.getName()  :  myComment;	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
468	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  obj.getName()  : "  <  unknown> ";  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  obj.getName()  : "  <  unknown> ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  obj.getName()  : "  <  unknown> ";	  String    otherComment    =    obj.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
469	[BUG]  [BUGGY]  String  otherComment  =  this.entryName.toUpperCase();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.entryName.toUpperCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.entryName.toUpperCase();	  String    otherComment    =    otherName.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
470	[BUG]  [BUGGY]  String  otherComment  =  getEmptyComment().equals(otherName);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEmptyComment().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEmptyComment().equals(otherName);	  String    otherComment    =    getEmptyComment();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
471	[BUG]  [BUGGY]  String  otherComment  =  super.equals(otherName);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  super.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  super.equals(otherName);	  String    otherComment    =    getEmptyComment();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
472	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getAsString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getAsString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getAsString();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getKey();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
473	[BUG]  [BUGGY]  String  otherComment  =  getCommonEntryName();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getCommonEntryName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getCommonEntryName();	  String    otherComment    =    getEntryName();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
474	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.toExternalForm();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  null  :  obj.toExternalForm();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  null  :  obj.toExternalForm();	  String    otherComment    =    obj    ==    null?    null    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
475	[BUG]  [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.toLowerCase()  :  otherName;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment!=  null?  myComment.toLowerCase()  :  otherName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment!=  null?  myComment.toLowerCase()  :  otherName;	  String    otherComment    =    myComment.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
476	[BUG]  [BUGGY]  String  otherComment  =  other.toLowerCase();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  other.toLowerCase();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  other.toLowerCase();	  String    otherComment    =    myComment.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
477	[BUG]  [BUGGY]  String  otherComment  =  getEscapedComment().equals(otherName);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEscapedComment().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEscapedComment().equals(otherName);	  String    otherComment    =    getEscapedComment();    	non-compiled	[CE]  ')'  expected	12	None	replace
478	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  other.getComment()  :  myComment.equals(other.getComment());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  other.getComment()  :  myComment.equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  other.getComment()  :  myComment.equals(other.getComment());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	46	None	replace
479	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  other.getComment()  :  myName.equals(other.getComment());  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  other.getComment()  :  myName.equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  other.getComment()  :  myName.equals(other.getComment());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	46	None	replace
480	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  other.getComment()  :  obj.equals(other.getName());  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  other.getComment()  :  obj.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  other.getComment()  :  obj.equals(other.getName());	  String    otherComment    =    obj.equals(other.getComment());    	non-compiled	[CE]  ')'  expected	46	None	replace
481	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  other.getName()  :  myComment.equals(other.getName());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  other.getName()  :  myComment.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  other.getName()  :  myComment.equals(other.getName());	  String    otherComment    =    obj.equals(other.getName());    	non-compiled	[CE]  ')'  expected	73	None	replace
482	[BUG]  [BUGGY]  String  otherComment  =  obj!=  null?  other.getName()  :  obj.equals(other.getName());  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj!=  null?  other.getName()  :  obj.equals(other.getName());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj!=  null?  other.getName()  :  obj.equals(other.getName());	  String    otherComment    =    obj.equals(other.getName());    	non-compiled	[CE]  ')'  expected	73	None	replace
483	[BUG]  [BUGGY]  String  otherComment  =  getEntry().getValue();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getEntry().getValue();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getEntry().getValue();	  String    otherComment    =    getEntry();    	non-compiled	[CE]  ')'  expected	91	None	replace
484	[BUG]  [BUGGY]  String  otherComment  =  getCommonEntry();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getCommonEntry();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getCommonEntry();	  String    otherComment    =    getEntry();    	non-compiled	[CE]  ')'  expected	91	None	replace
485	[BUG]  [BUGGY]  if(myComment  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment  ==  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment  ==  null)  {  return  false;  }	  if(otherName!=    null)    {    if(myComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	80	None	replace
486	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(myComment  ==  null  ||  myComment.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(myComment  ==  null  ||  myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(myComment  ==  null  ||  myComment.equals(otherName))  {  return  false;  }	  if(otherName!=    null)    {    if(myComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	80	None	replace
487	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
488	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherComment  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherComment  ==  null)  {  if(!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
489	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParent().equals(otherName);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParent().equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParent().equals(otherName);	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  ')'  expected	11	None	replace
490	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParent().computeName(otherName);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParent().computeName(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParent().computeName(otherName);	  String    otherComment    =    getImmediateParent();    	non-compiled	[CE]  ')'  expected	11	None	replace
491	[BUG]  [BUGGY]  String  otherComment  =  this.entryName.equals(otherName.getEntry());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  this.entryName.equals(otherName.getEntry());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  this.entryName.equals(otherName.getEntry());	  String    otherComment    =    otherName.getComment();    	non-compiled	[CE]  ')'  expected	32	None	replace
492	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  this  :  obj.toString();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  this  :  obj.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  this  :  obj.toString();	  String    otherComment    =    obj    ==    null?    this    :    obj.getComment();    	non-compiled	[CE]  ')'  expected	97	None	replace
493	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImmediateParentPointer();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImmediateParentPointer();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  myComment.getImmediateParentPointer();	  String    otherComment    =(myComment    ==    null)?    null    :    myComment.getName();    	non-compiled	[CE]  ')'  expected	53	None	replace
494	[BUG]  [BUGGY]  parent  ==  null  ||  otherName!=  null)  {  return  false;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  parent  ==  null  ||  otherName!=  null)  {  return  false;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	parent  ==  null  ||  otherName!=  null)  {  return  false;	  if(myComment    ==    null)    {    if(otherName!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
495	[BUG]  [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  obj);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  obj);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myName.toLowerCase(Locale.ENGLISH,  obj);	  String    otherComment    =    myName.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  ')'  expected	35	None	replace
496	[BUG]  [BUGGY]  String  otherComment  =  obj  ==  null?  getComment()  :  obj.getEntry();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  obj  ==  null?  getComment()  :  obj.getEntry();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  obj  ==  null?  getComment()  :  obj.getEntry();	  String    otherComment    =    obj    ==    null?    getComment()    :    obj.getComment();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
497	[BUG]  [BUGGY]  String  otherComment  =  getSimpleName().equals(other.getComment());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getSimpleName().equals(other.getComment());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getSimpleName().equals(other.getComment());	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
498	[BUG]  [BUGGY]  String  otherComment  =  getName().equals(other.getName(),  myComment);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getName().equals(other.getName(),  myComment);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getName().equals(other.getName(),  myComment);	  String    otherComment    =    getName().equals(other.getComment());    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
499	[BUG]  [BUGGY]  if(otherComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherComment!=  null)  {  return  false;  }	  if(myComment!=    null)    {    if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
500	[BUG]  [BUGGY]  if(otherName  ==  null  ||  otherName!=  null)  {  if(myComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName  ==  null  ||  otherName!=  null)  {  if(myComment!=  null)  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName  ==  null  ||  otherName!=  null)  {  if(myComment!=  null)  {  return  false;  }	  if(otherName    ==    null)    {    if(myComment!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
501	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)&&  obj.equals(otherName);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)&&  obj.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)&&  obj.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
502	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.equals(otherName);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)?  null  :  myComment.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
503	[BUG]  [BUGGY]  String  otherComment  =  myComment.equals(otherName)&&  myComment.equals(otherName);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment.equals(otherName)&&  myComment.equals(otherName);  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment.equals(otherName)&&  myComment.equals(otherName);	  String    otherComment    =    myComment.equals(otherName);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
504	[BUG]  [BUGGY]  if(myComment!=  null)  {  if(!myComment.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(myComment!=  null)  {  if(!myComment.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(myComment!=  null)  {  if(!myComment.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
505	[BUG]  [BUGGY]  if(otherName!=  null)  {  if(!myComment.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  if(otherName!=  null)  {  if(!myComment.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	if(otherName!=  null)  {  if(!myComment.equals(otherName)||!myComment.equals(otherName))  {  return  false;  }	  if(myComment!=    null)    {    if(!myComment.equals(otherName))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
506	[BUG]  [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  myComment.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  myComment.toString();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName  ==  null)?  null  :  myComment.toString();	  String    otherComment    =(myComment!=    null)?    null    :    myComment.toString();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
507	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParentName()  + "/.* ";  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParentName()  + "/.* ";  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParentName()  + "/.* ";	  String    otherComment    =    getImmediateParentName();    	non-compiled	[CE]  ')'  expected	14	None	replace
508	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParentName().trim();  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParentName().trim();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParentName().trim();	  String    otherComment    =    getImmediateParentName();    	non-compiled	[CE]  ')'  expected	14	None	replace
509	[BUG]  [BUGGY]  String  otherComment  =  getImmediateParentName()  + "_ "  +  myComment;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  getImmediateParentName()  + "_ "  +  myComment;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  getImmediateParentName()  + "_ "  +  myComment;	  String    otherComment    =    getImmediateParentName();    	non-compiled	[CE]  ')'  expected	14	None	replace
510	[BUG]  [BUGGY]  String  otherComment  =(obj  ==  null?  myComment.toString()  :  obj.toString());  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(obj  ==  null?  myComment.toString()  :  obj.toString());  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(obj  ==  null?  myComment.toString()  :  obj.toString());	  String    otherComment    =    myComment!=    null?    obj.toString()    :    obj.toString();    	non-compiled	[CE]  ')'  expected	52	None	replace
511	[BUG]  [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  yourComment.getComment();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(myComment  ==  null)?  null  :  yourComment.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(myComment  ==  null)?  null  :  yourComment.getComment();	  String    otherComment    =(other    ==    null)?    null    :    myComment.getComment();    	non-compiled	[CE]  ')'  expected	25	None	replace
512	[BUG]  [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.getComment()  :  myName;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =  myComment  ==  null?  obj.getComment()  :  myName;  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =  myComment  ==  null?  obj.getComment()  :  myName;	  String    otherComment    =    obj!=    null?    obj.getComment()    :    myName;    	non-compiled	[CE]  ')'  expected	83	None	replace
513	[BUG]  [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  other.getEntryName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName  ==  null)?  null  :  other.getEntryName();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName  ==  null)?  null  :  other.getEntryName();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
514	[BUG]  [BUGGY]  String  otherComment  =(otherName  ==  null)?  myComment  :  other.getComment();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  myName  =  getName();  String  otherName  =  other.getName();  if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();      [BUGGY]  String  otherComment  =(otherName  ==  null)?  myComment  :  other.getComment();  [BUGGY]      if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	667	667	1	replace	String  otherComment  =(otherName  ==  null)?  myComment  :  other.getComment();	  String    otherComment    =(otherName    ==    null)?    null    :    other.getComment();    	non-compiled	[CE]  ')'  expected	76	None	replace
