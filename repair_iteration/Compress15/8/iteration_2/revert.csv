projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj==null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj!=null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringotherName=((ZipArchiveEntry)obj).getName();if(otherName!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringotherName=((ZipArchiveEntry)obj).getName();if(otherName==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryelse=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(CipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj==null?false:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryelse=(ZipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null||getClass()!=obj.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==this){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj==null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getName()!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()!=null||other.getName()!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()>=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),this,null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj.getClass(),this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),this,false);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),this,true);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),this+1);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656staticfinalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.getElement();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(this,obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj==null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj!=null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj.getClass(),getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.clonePath();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.clonePath();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.cloneTree(0);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(ZipArchiveEntry<?,?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)object.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(ZipArchiveEntry<?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getValue()+1;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Comparable<Object,ZipArchiveEntry>other=(Comparable<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(CipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryelse=(ZipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==this||getClass()!=obj.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj!=null||getClass()!=obj.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null||getClass()!=other.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null||getClass()>=obj.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Void>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.clonePath();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj==null?true:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj!=null?false:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj==null?false:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.clonePath();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){Stringname=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Stringname=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656StringmyName=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656this.name=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryelse=(ZipArchiveEntry)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryelse=(ZipArchiveEntry)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryelse=(ZipArchiveEntry)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(InternalAttributes<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(Iterable<ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(ZipArchiveEntry<?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(ExternalAttributes<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(ArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<K,V>){finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj!=null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj==null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj.getClass(),this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj==null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj!=null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(this,obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj.getClass(),null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656StringmyName=((ZipArchiveEntry)obj).getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){StringmyName=((ZipArchiveEntry)obj).getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Context.checkState(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(!myName.equals(otherName)){thrownewIllegalArgumentException("");}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656staticfinalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<T>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(otherName==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(otherName!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){StringotherName=((ZipArchiveEntry)obj).getName();if(otherName==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656StringmyName=((ZipArchiveEntry)obj).getName();if(otherName==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Stringname=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656StringmyName=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656this.name=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry}elseif(objinstanceofZipArchiveEntry){CipArchiveEntryelse=(ZipArchiveEntry)obj;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry}elseif(objinstanceofZipArchiveEntry){CipArchiveEntryelse=(ZipArchiveEntry)obj;}else{returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryelse=(ZipArchiveEntry)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>else=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)this.obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==this){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(other==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(CipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(CipArchiveEntry<?,?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.next();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(LocalArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(other!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj!=null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),getClass(),this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),getClass()+1);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),getClass(),null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj.getClass(),getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),getRawClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.clonePath();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){StringotherName=((ZipArchiveEntry)obj).getName();if(otherName!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656StringmyName=((ZipArchiveEntry)obj).getName();if(otherName!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.setObject(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<?>other=(ZipArchiveEntry<?,?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<?>other=(ZipArchiveEntry<?,?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){if(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()==entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(entry.getClass()!=other.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()>=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<K,V>other=(ZipArchiveEntry<K,V>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<K,V>other=(ZipArchiveEntry<K,V>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Stringname=((ZipArchiveEntry)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656this.name=((ZipArchiveEntry)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.getValue()+1;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Comparable<Object,ZipArchiveEntry>other=(Comparable<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj.getClass(),this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj==null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj!=null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(this,obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj.getClass(),getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj.getClass(),true);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj.getClass(),true);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj.getClass(),this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj.getClass(),false);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj.getClass(),null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.getValue()+1;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj==null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj.getClass(),this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj!=null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj.getClass(),true);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj.getClass(),null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.evaluate(this,this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.evaluate(this,getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.evaluate(this,true);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Stringname=((ZipArchiveEntry)obj).getName();if(name==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(name==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656this.name=((ZipArchiveEntry)obj).getName();if(name==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other>=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry{ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getClass();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.setKey(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)object.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<?>other=(ZipArchiveEntry<?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656InternalAttributes<?>other=(ZipArchiveEntry<?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<?>other=(ZipArchiveEntry<?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getValue()+1;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(CipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(CipArchiveEntry)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(CipArchiveEntry)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(CipArchiveEntry)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.elements();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.get();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.getElement();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),getParent());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){StringmyName=((ZipArchiveEntry)obj).getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName().toLowerCase();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(!myName.equals(otherName)){returnfalse
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.getPrimitive();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryelse=(ZipArchiveEntry)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.elementAt(obj.getValue());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.element();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(otherName==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){StringotherName=((ZipArchiveEntry)obj).getName();if(otherName==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringthisName=((ZipArchiveEntry)obj).getName();if(otherName==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Object,ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getKey();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){Stringname=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(!name.equalsIgnoreCase(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this.obj==null?false:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this==obj?false:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(CipArchiveEntry<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(CipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(CipArchiveEntry<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryelse=(CipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)this.obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry{ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry==false){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Comparable<Object,ZipArchiveEntry<Object>other=(Comparable<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry<Object>other=(ZipArchiveEntry<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object>)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.getTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.elementAt(obj.getObject());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<Object,?>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.elementAt(obj.getKey());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this==obj?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj==null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null||obj.getClass()!=obj.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null||!obj.equals(extra)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null||obj.getClass()!=getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.element();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.elements();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.element();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)object.equals(obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)object.equals(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?>)obj.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj==null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj==null?getClass():obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.evaluate(this,externalAttributes);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.evaluate(this,Object.class);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj==null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.cloneObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry}elseif(objinstanceofZipArchiveEntry){CipArchiveEntryelse=(ZipArchiveEntry)obj;}else{
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>else=(ZipArchiveEntry<Object>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){Stringname=((ZipArchiveEntry)obj).getName();if(name==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656AssertionFailedError.checkArgument(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name==null||name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj==null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj.getKey());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)this.object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)object.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj!=null||getClass()==obj.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryother=(ZipArchiveEntry)obj.getProperty();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj==null?"null":obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj==null?getClass():obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj==null?false:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj==obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.next();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){Stringname=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.getValue();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<Object,ZipArchiveEntry>other=(zipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(otherName!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){StringotherName=((ZipArchiveEntry)obj).getName();if(otherName!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){StringthisName=((ZipArchiveEntry)obj).getName();if(otherName!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryelse=(ZipArchiveEntry)obj.next();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry{ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other.getName()!=null){returnfalse
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(other==this){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this!=obj){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(externalAttributes<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656staticfinalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(this==obj){Stringname=((ZipArchiveEntry)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656AssertionFailedError.checkArgument(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name!=null||name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<K,V>){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getClass()!=entry.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){Stringname=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(otherNameinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){Stringname=((ZipArchiveEntry<?>)obj).getName();if(name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)this;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ExternalAttributes<Object,ZipArchiveEntry>other=(ExternalAttributes<Object,ZipArchiveEntry>)this.extraFields;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)this.obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null){finalZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.equals(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==this)returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryelse=newZipArchiveEntry(obj==null?null:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(LocalArchiveEntry<?,?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656LocalArchiveEntry<?>other=(ZipArchiveEntry<?,?">":obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.equals(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj.setValue(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.getObject();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.equals(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CypArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj==null?false:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj==null?false:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj==null?false:obj.toString());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<K,V>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=(ZipArchiveEntry)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryelse=(ZipArchiveEntry)obj.evaluate(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)this.obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)this;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(obj.getClass(),super);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Object,ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){finalZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Object,ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){Stringname=((ZipArchiveEntry<?>)obj).getName();if(name==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry||objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj.setObject(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Object,ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<?extendsObject>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656staticfinalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){finalZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj;}else{returnsuper.equals(obj);}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<?>other=(ZipArchiveEntry<?,?">":obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CypArchiveEntry<?>other=(ZipArchiveEntry<?,?>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?,?>)object.cloneTree();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)object;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,ZipArchiveEntry>other=(ZipArchiveEntry<Object,ZipArchiveEntry>)this;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;}else{returnsuper.equals(obj);}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){finalZipArchiveEntry<?>other=(ZipArchiveEntry<?>)obj;}else{returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656Entry<Object,ZipArchiveEntry>other=(ZipArchiveEntry>)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj!=null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>else=(ZipArchiveEntry<K,V>)obj.clone();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj==null?getClass():obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=newZipArchiveEntry(obj.getKey());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=(ZipArchiveEntry)obj.equals(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(otherNameinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){Stringname=((ZipArchiveEntry<?>)obj).getName();if(!name.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){Stringname=((ZipArchiveEntry<?>)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry||objinstanceofZipArchiveEntry){Stringname=((ZipArchiveEntry)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(!(objinstanceofZipArchiveEntry)){Stringname=((ZipArchiveEntry)obj).getName();if(name!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryelseif(objinstanceofZipArchiveEntry){CipArchiveEntryelse=(ZipArchiveEntry)obj;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryelseif(objinstanceofZipArchiveEntry){CipArchiveEntryother=(ZipArchiveEntry)obj;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntry<Object,ZipArchiveEntry>else=(ZipArchiveEntry)obj;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(other.getName()!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=(ZipArchiveEntry<K,V>)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){StringotherName=((ZipArchiveEntry<?>)obj).getName();if(otherName==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(otherNameinstanceofZipArchiveEntry){StringmyName=((ZipArchiveEntry)obj).getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){StringmyName=((ZipArchiveEntry<?>)obj).getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<K,V>){StringmyName=((ZipArchiveEntry<K,V>)obj).getName();if(!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry<?>){StringotherName=((ZipArchiveEntry<?>)obj).getName();if(otherName!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null||getClass()!=obj.getClass())returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(other==null||getClass()!=obj.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(obj==null||getClass()!=this.obj.getClass()){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)object.equals(this);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<?>other=(ZipArchiveEntry<?>)object.equals(obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry(obj!=null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<K,V>other=newZipArchiveEntry<K,V>(obj==null?this:obj.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(other!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656if(objinstanceofZipArchiveEntry==false){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(other!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntry<Object,Object>other=newZipArchiveEntry(obj.getClass(),getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(getClass(),getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656CipArchiveEntryelse=(ZipArchiveEntry)obj.cloneTarget();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java656ZipArchiveEntryother=newZipArchiveEntry(this,obj!=null?this:obj.getClass());
