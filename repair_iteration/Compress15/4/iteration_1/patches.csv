bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(myComment  ==  null  ||!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment  ==  null  ||!myComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||!myComment.equals(otherComment))  {	  if(otherComment    ==    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
2	[BUG]  [BUGGY]  if(otherComment  >=  null  ||!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  >=  null  ||!myComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  >=  null  ||!myComment.equals(otherComment))  {	  if(otherComment    ==    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
3	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(myComment))  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(myComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.equals(myComment))  {	  if(otherComment    ==    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
4	[BUG]  [BUGGY]  if(otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  false;  }	      	non-compiled	[CE]  ')'  expected	6	None	replace
5	[BUG]  [BUGGY]  if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	      	non-compiled	[CE]  ')'  expected	6	None	replace
6	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  ==  null)  {  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null)  {  if(myComment.equals(otherComment))  {  return  false;  }	      	non-compiled	[CE]  ')'  expected	6	None	replace
7	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	      	non-compiled	[CE]  ')'  expected	6	None	replace
8	[BUG]  [BUGGY]  if(myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	      	non-compiled	[CE]  ')'  expected	6	None	replace
9	[BUG]  [BUGGY]  if(otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	      	non-compiled	[CE]  ')'  expected	6	None	replace
10	[BUG]  [BUGGY]  if(otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  true;  }	      	non-compiled	[CE]  ')'  expected	6	None	replace
11	[BUG]  [BUGGY]  if(myComment!=  null  ||!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment!=  null  ||!myComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  ||!myComment.equals(otherComment))  {	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
12	[BUG]  [BUGGY]  if(otherComment!=  null  &&!myComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  &&!myComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&!myComment.equals(otherComment))  {	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(this.myComment!=  null  ||!myComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(this.myComment!=  null  ||!myComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(this.myComment!=  null  ||!myComment.equals(otherComment))  {	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if(myComment!=  null  ||  otherComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment!=  null  ||  otherComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  ||  otherComment.equals(otherComment))  {	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  if(myComment!=  null  ||  myComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment!=  null  ||  myComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  ||  myComment.equals(otherComment))  {	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  if(otherComment!=  null  &&  myComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  &&  myComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&  myComment.equals(otherComment))  {	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  if(myComment  ==  null  ||  otherComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment  ==  null  ||  otherComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||  otherComment.equals(otherComment))  {	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  if(myComment  ==  null  ||  myComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment  ==  null  ||  myComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||  myComment.equals(otherComment))  {	  if(otherComment    ==    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  ==  null  ||  otherComment.length()  ==  0)  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.length()  ==  0)  {	  if(otherComment!=    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  ==  null  ||  otherComment.length()!=  0)  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.length()!=  0)  {	  if(otherComment!=    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  if(otherComment!=  null  ||  myComment.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  ||  myComment.length()  ==  0)  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  myComment.length()  ==  0)  {	  if(otherComment!=    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  ||  otherComment.length()  >=  0)  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.length()  >=  0)  {	  if(otherComment!=    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  if(otherComment  >=  null  ||  otherComment.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  >=  null  ||  otherComment.length()  ==  0)  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  >=  null  ||  otherComment.length()  ==  0)  {	  if(otherComment!=    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(obj))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(obj))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.equals(obj))  {	  if(otherComment!=    null    ||    otherComment.equals(myComment))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  ==  null)  {  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null)  {  if(myComment.equals(otherComment))  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  if(otherComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  if(myComment!=  null  ||  otherComment.equals(myComment))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment!=  null  ||  otherComment.equals(myComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  ||  otherComment.equals(myComment))  {	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  if(otherComment!=  null  ||  noComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  ||  noComment.equals(otherComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  noComment.equals(otherComment))  {	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  ||  otherComment.length()!=  0)  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.length()!=  0)  {	  if(otherComment!=    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(myComment))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(myComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&  otherComment.equals(myComment))  {	  if(otherComment!=    null    ||    otherComment.equals(myComment))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  myComment.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  ==  null  ||  myComment.length()!=  0)  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  myComment.length()!=  0)  {	  if(otherComment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  if(otherComment!=  null)  {  if(otherComment.equals(myComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null)  {  if(otherComment.equals(myComment))  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null)  {  if(otherComment.equals(myComment))  {  return  false;  }	      	non-compiled	[CE]  ')'  expected	6	None	replace
33	[BUG]  [BUGGY]  if(otherComment.equals(myComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment.equals(myComment))  {  return  false;  }  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment.equals(myComment))  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(myName))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(myName))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.equals(myName))  {	  if(otherComment    ==    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  if(myComment  ==  null  ||  otherComment.equals(myComment))  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(myComment  ==  null  ||  otherComment.equals(myComment))  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||  otherComment.equals(myComment))  {	  if(otherComment    ==    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
36	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.length()  <  0)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {    [BUGGY]  if(otherComment!=  null  ||  otherComment.length()  <  0)  {  [BUGGY]    return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.length()  <  0)  {	  if(otherComment!=    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
