projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment>=null||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null){if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null){if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment.equals(otherComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment.equals(myComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null){if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(this.myComment!=null||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null||otherComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null||myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||otherComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||myComment.length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.length()>=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment>=null||otherComment.length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.equals(obj)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null){if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null||otherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||noComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&otherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||myComment.length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null){if(otherComment.equals(myComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment.equals(myComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.equals(myName)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||otherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.length()<0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.length()>=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.length()<=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||myComment.length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.trim().length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null&&myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||myComment.length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||otherComment.equals(otherName)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||parent.equals(otherComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669||otherComment.equals(myComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669result.equals(otherComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669||!myComment.equals(otherComment)){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669||otherComment!=null||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||!parent.equals(otherComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null&&otherComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null&&myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null&&!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null&&!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&!myComment.equals(otherComment)){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&!myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleMissingException("");
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&!myComment.equals(otherComment.getMessage())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||otherComment.length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||myComment.length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler!=null&&!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler!=null&&!myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler!=null&&!myComment.equals(otherComment)){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(null==otherComment||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.equals(obj)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669||otherComment.equals(myComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669oricarors.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669tries.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669oricarors.equals(otherComment,obj.toString())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669||otherComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669||otherComment.equals(myComment)){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleEquals(otherComment,obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.throwAsSertionFailedError("msg.bad.other.entry",otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleEquals(otherComment,myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.throwAsSertionFailedError("msg.bad.other.entry",obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.throwAsSertionError("msg.bad.other.entry",otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(null!=otherComment||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||obj.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null||otherComment.length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null||myComment.length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||otherComment.length()==0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment!=null){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment==null){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.throwInternal();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||noComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||noComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&noComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(noComment!=null||noComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669try{[Delete]catch(Exceptione){if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||!myComment.equals(otherComment)){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669try{[Delete]catch(NoSuchElementExceptionnsse){if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669try{[Delete]catch(NoSuchElementExceptionnsse){if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669try{[Delete]catch(Exceptione){if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment.equals(myComment)){returntrue;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669marcatos.equals(otherComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==otherComment||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||!parent.equals(otherComment)){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&otherComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&otherComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler==null&&otherComment.equals(myComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(this.myComment!=null&&!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(this.myComment==null||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||!myComment.equals(this.myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||!parent.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||!parent.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment!=null&&otherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.length()<0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.equals(noComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||noComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(noComment!=null||otherComment.equals(noComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null&&otherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&otherComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(obj==null||!obj.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.trim().length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.trim().length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||anotherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleMoreGuaranteed(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleMoreEquals(otherComment,obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleEquals(otherComment,false);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleMoreEquals(otherComment,false);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(this.otherComment!=null||!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment){if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment){if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment){if(myComment.equals(otherComment)||externalAttributes==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment){if(myComment.equals(otherComment)||externalAttributes!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment){if(myComment.equals(otherComment)||otherComment!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment){if(myComment.equals(otherComment)||externalAttributes==null){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.equals(myName)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==otherComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669safeName.equals(otherComment.getName())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null&&otherComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent!=otherComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler<String>thrownExceptionHandler=newUnsupportedOperationExceptionHandler<String>();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler<String>thrownExceptionHandler=getExceptionHandler();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleEquals(otherComment,null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&otherComment.equals(myName)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment,obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment,obj){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment,false)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment,false));
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment,null)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersect(otherComment,obj));
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669||otherComment!=null){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==otherComment||!myComment.equals(otherComment)){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669intersects(otherComment,false)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||myComment.equals(otherComment.getName())){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null&&otherComment.equals(myComment)){returntrue;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null&&myComment.equals(otherComment)){returntrue;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||myComment.equals(otherComment)){returntrue;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null&&myComment.equals(otherComment)){returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null&&otherComment.equals(otherComment)){returntrue;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler<String>thrownExceptionHandler=getExceptionHandler(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==otherComment||!myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669ExternalAttributes<String>externalAttributes=obj.getExternalAttributes();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669>>[Delete]elseif(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669>>[Delete]elseif(myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||myComment.equals(otherComment.getName())){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&otherComment.length()!=0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(otherComment.equals(myComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(otherComment!=null){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment!=null){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)){if(otherComment!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669>>[Delete]elseif(myComment.equals(otherComment)){if(otherComment!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(!myComment.equals(otherComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&otherComment.equals(obj)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(myComment==null||otherComment.equals(myName)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||otherComment.equals(entryName)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null&&otherComment.equals(noComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(!myComment.equals(otherComment)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment.equals(parent)){if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(!myComment.equals(otherComment)){if(!myComment.equals(otherComment)||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(!myComment.equals(otherComment)){if(!myComment.equals(otherComment)||!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(!myComment.equals(otherComment)){if(!myComment.equalsIgnoreCase(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||otherComment.length()>0){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment.equals(parent)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||otherComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669parent==null||parent.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669>>[Delete]elseif(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleMissingName(myComment,otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment!=null||myComment.equals(otherComment.toString())){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(!myComment.equals(otherComment)){if(!myComment.equalsIgnoreCase(otherComment)||!myComment.equalsIgnoreCase(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(!myComment.equals(otherComment)){if(!myComment.equals(otherComment)&&!myName.equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(otherComment.equals(myComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(otherComment.equals(myComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669>>[Delete]elseif(otherComment.equals(myComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(otherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment!=null){if(otherComment==null||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)){if(otherComment==null||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669if(otherComment==null||anotherComment.equals(myComment)){
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669aughtExceptionHandler.handleMissingName(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)&&otherComment!=null){if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669>>[Delete]elseif(myComment.equals(otherComment)||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java669[Delete]elseif(myComment.equals(otherComment)||otherComment.equals(otherComment)){returnfalse;}
