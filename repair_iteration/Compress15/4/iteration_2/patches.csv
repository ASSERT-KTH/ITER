bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.length()  >=  0)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.length()  >=  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.length()  >=  0)  {	  if(otherComment!=    null    ||    otherComment.length()    >=    0)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
2	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.length()  <  =  0)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.length()  <  =  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.length()  <  =  0)  {	  if(otherComment!=    null    ||    otherComment.length()    >=    0)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
3	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  myComment.length()  ==  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  myComment.length()  ==  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  myComment.length()  ==  0)  {	  if(otherComment    ==    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
4	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.trim().length()  ==  0)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.trim().length()  ==  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.trim().length()  ==  0)  {	  if(otherComment    ==    null    ||    otherComment.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
5	[BUG]  [BUGGY]  if(myComment!=  null  &&  myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment!=  null  &&  myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  &&  myComment.equals(otherComment))  {	  if(myComment!=    null    ||    myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	15	None	replace
6	[BUG]  [BUGGY]  if(otherComment!=  null  ||  myComment.length()!=  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  myComment.length()!=  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  myComment.length()!=  0)  {	  if(otherComment!=    null    ||    otherComment.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	29	None	replace
7	[BUG]  [BUGGY]  if(myComment  ==  null  ||  otherComment.equals(otherName))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment  ==  null  ||  otherComment.equals(otherName))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||  otherComment.equals(otherName))  {	  if(otherComment    ==    null    ||    otherComment.equals(myName))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
8	[BUG]  [BUGGY]  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
9	[BUG]  [BUGGY]  parent  ==  null  ||  parent.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  parent.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  parent.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  ||  otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ||  otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	||  otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
11	[BUG]  [BUGGY]  result.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  result.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	result.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
12	[BUG]  [BUGGY]  ||!myComment.equals(otherComment))  {  return  false;  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ||!myComment.equals(otherComment))  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	||!myComment.equals(otherComment))  {  return  false;	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
13	[BUG]  [BUGGY]  ||  otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ||  otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	||  otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
14	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||!parent.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
15	[BUG]  [BUGGY]  if(myComment!=  null  &&  otherComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment!=  null  &&  otherComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  &&  otherComment.equals(otherComment))  {	  if(otherComment!=    null    &&    otherComment.equals(myComment))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
16	[BUG]  [BUGGY]  if(otherComment  ==  null  &&  myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  &&  myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  &&  myComment.equals(otherComment))  {	  if(otherComment!=    null    &&    myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
17	[BUG]  [BUGGY]  if(myComment!=  null  &&!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment!=  null  &&!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  &&!myComment.equals(otherComment))  {	  if(otherComment!=    null    &&!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
18	[BUG]  [BUGGY]  if(otherComment  ==  null  &&!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  &&!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  &&!myComment.equals(otherComment))  {	  if(otherComment!=    null    &&!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
19	[BUG]  [BUGGY]  [Delete]  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
21	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {  return  false;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {  return  false;	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment);	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment))  {	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
24	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
25	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment.getMessage()))  {  return  false;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment.getMessage()))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&!myComment.equals(otherComment.getMessage()))  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
26	[BUG]  [BUGGY]  if(myComment  ==  null  ||  otherComment.length()!=  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment  ==  null  ||  otherComment.length()!=  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||  otherComment.length()!=  0)  {	  if(otherComment    ==    null    ||    myComment.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
27	[BUG]  [BUGGY]  if(myComment  ==  null  ||  myComment.length()!=  0)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment  ==  null  ||  myComment.length()!=  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||  myComment.length()!=  0)  {	  if(otherComment    ==    null    ||    myComment.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
28	[BUG]  [BUGGY]  aughtExceptionHandler!=  null  &&!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler!=  null  &&!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler!=  null  &&!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
29	[BUG]  [BUGGY]  aughtExceptionHandler!=  null  &&!myComment.equals(otherComment);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler!=  null  &&!myComment.equals(otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler!=  null  &&!myComment.equals(otherComment);	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
30	[BUG]  [BUGGY]  aughtExceptionHandler!=  null  &&!myComment.equals(otherComment))  {  return  false;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler!=  null  &&!myComment.equals(otherComment))  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler!=  null  &&!myComment.equals(otherComment))  {  return  false;	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
31	[BUG]  [BUGGY]  if(null  ==  otherComment  ||!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(null  ==  otherComment  ||!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(null  ==  otherComment  ||!myComment.equals(otherComment))  {	  if(myComment    ==    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
32	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(obj))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(obj))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.equals(obj))  {	  if(otherComment    ==    null    ||    otherComment.equals(myComment))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
33	[BUG]  [BUGGY]  ||  otherComment.equals(myComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ||  otherComment.equals(myComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	||  otherComment.equals(myComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
34	[BUG]  [BUGGY]  parent.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
35	[BUG]  [BUGGY]  oricarors.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  oricarors.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	oricarors.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
36	[BUG]  [BUGGY]  tries.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  tries.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	tries.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
37	[BUG]  [BUGGY]  oricarors.equals(otherComment,  obj.toString()))  {  return  false;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  oricarors.equals(otherComment,  obj.toString()))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	oricarors.equals(otherComment,  obj.toString()))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
38	[BUG]  [BUGGY]  ||  otherComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ||  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	||  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
39	[BUG]  [BUGGY]  ||  otherComment.equals(myComment))  {  return  false;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ||  otherComment.equals(myComment))  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	||  otherComment.equals(myComment))  {  return  false;	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
40	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  obj);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  obj);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleEquals(otherComment,  obj);	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
41	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment);	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
42	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  myComment);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  myComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleEquals(otherComment,  myComment);	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
43	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  obj);  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  obj);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  obj);	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
44	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  otherComment);  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  otherComment);	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
45	[BUG]  [BUGGY]  if(null!=  otherComment  ||!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(null!=  otherComment  ||!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(null!=  otherComment  ||!myComment.equals(otherComment))  {	  if(myComment!=    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
46	[BUG]  [BUGGY]  if(otherComment!=  null  ||  obj.equals(otherComment))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  obj.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  obj.equals(otherComment))  {	  if(otherComment!=    null    ||    otherComment.equals(obj))    {    	non-compiled	[CE]  ')'  expected	24	None	replace
47	[BUG]  [BUGGY]  if(myComment!=  null  ||  otherComment.length()  ==  0)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment!=  null  ||  otherComment.length()  ==  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  ||  otherComment.length()  ==  0)  {	  if(otherComment!=    null    ||    myComment.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
48	[BUG]  [BUGGY]  if(myComment!=  null  ||  myComment.length()  ==  0)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment!=  null  ||  myComment.length()  ==  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  ||  myComment.length()  ==  0)  {	  if(otherComment!=    null    ||    myComment.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
49	[BUG]  [BUGGY]  if(myComment  ==  null  ||  otherComment.length()  ==  0)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment  ==  null  ||  otherComment.length()  ==  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||  otherComment.length()  ==  0)  {	  if(otherComment!=    null    ||    myComment.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
50	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment!=  null)  {  return  false;  }	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
51	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment  ==  null)  {  return  false;  }	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
52	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment!=  null)  {  return  false;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment!=  null)  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment!=  null)  {  return  false;	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
53	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment  ==  null)  {  return  false;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment  ==  null)  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment  ==  null)  {  return  false;	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
54	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.throwInternal();	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
55	[BUG]  [BUGGY]  if(otherComment!=  null  ||  noComment.equals(myComment))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  noComment.equals(myComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  noComment.equals(myComment))  {	  if(otherComment!=    null    ||    noComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	28	None	replace
56	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  noComment.equals(myComment))  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  noComment.equals(myComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  noComment.equals(myComment))  {	  if(otherComment!=    null    ||    noComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	28	None	replace
57	[BUG]  [BUGGY]  if(otherComment!=  null  &&  noComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  &&  noComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&  noComment.equals(otherComment))  {	  if(otherComment!=    null    ||    noComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	28	None	replace
58	[BUG]  [BUGGY]  if(noComment!=  null  ||  noComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(noComment!=  null  ||  noComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(noComment!=  null  ||  noComment.equals(otherComment))  {	  if(otherComment!=    null    ||    noComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
59	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	try  {  [Delete]  catch(Exception  e)  {  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
60	[BUG]  [BUGGY]  parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
61	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nsse)  {  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nsse)  {  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	try  {  [Delete]  catch(NoSuchElementException  nsse)  {  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
62	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nsse)  {  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nsse)  {  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	try  {  [Delete]  catch(NoSuchElementException  nsse)  {  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
63	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	try  {  [Delete]  catch(Exception  e)  {  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
64	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(myComment))  {  return  true;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(myComment))  {  return  true;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment.equals(myComment))  {  return  true;	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
65	[BUG]  [BUGGY]  marcatos.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  marcatos.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	marcatos.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(myComment.equals(otherComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  }	  if(myComment.equals(otherComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
67	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||!parent.equals(otherComment))  {  return  false;	  if(myComment.equals(otherComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
68	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&  otherComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
69	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&  otherComment.equals(otherComment);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&  otherComment.equals(otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&  otherComment.equals(otherComment);	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
70	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&  otherComment.equals(myComment);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&  otherComment.equals(myComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&  otherComment.equals(myComment);	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
71	[BUG]  [BUGGY]  aughtExceptionHandler  ==  null  &&  otherComment.equals(myComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  ==  null  &&  otherComment.equals(myComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  ==  null  &&  otherComment.equals(myComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
72	[BUG]  [BUGGY]  if(this.myComment!=  null  &&!myComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(this.myComment!=  null  &&!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(this.myComment!=  null  &&!myComment.equals(otherComment))  {	  if(this.myComment!=    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  if(this.myComment  ==  null  ||!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(this.myComment  ==  null  ||!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(this.myComment  ==  null  ||!myComment.equals(otherComment))  {	  if(this.myComment!=    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
74	[BUG]  [BUGGY]  if(otherComment!=  null  ||!myComment.equals(this.myComment))  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||!myComment.equals(this.myComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||!myComment.equals(this.myComment))  {	  if(this.myComment!=    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
75	[BUG]  [BUGGY]  parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
76	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
77	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||!parent.equals(otherComment))  {	  if(otherComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
78	[BUG]  [BUGGY]  if(myComment!=  null  &&  otherComment.equals(myComment))  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment!=  null  &&  otherComment.equals(myComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment!=  null  &&  otherComment.equals(myComment))  {	  if(myComment!=    null    ||    otherComment.equals(myComment))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
79	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.length()  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.length()  <  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.length()  <  0)  {	  if(otherComment!=    null    ||    otherComment.length()    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
80	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(noComment))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(noComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.equals(noComment))  {	  if(otherComment!=    null    ||    noComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
81	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  noComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  noComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  noComment.equals(otherComment))  {	  if(otherComment!=    null    ||    noComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
82	[BUG]  [BUGGY]  if(noComment!=  null  ||  otherComment.equals(noComment))  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(noComment!=  null  ||  otherComment.equals(noComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(noComment!=  null  ||  otherComment.equals(noComment))  {	  if(otherComment!=    null    ||    noComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
83	[BUG]  [BUGGY]  if(otherComment  ==  null  &&  otherComment.equals(myComment))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  &&  otherComment.equals(myComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  &&  otherComment.equals(myComment))  {	  if(otherComment!=    null    &&    otherComment.equals(myComment))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
84	[BUG]  [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&  otherComment.equals(otherComment))  {	  if(otherComment!=    null    &&    otherComment.equals(myComment))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
85	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.equals(otherComment))  {	  if(otherComment!=    null    ||    otherComment.equals(obj))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
86	[BUG]  [BUGGY]  if(obj  ==  null  ||!obj.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(obj  ==  null  ||!obj.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(obj  ==  null  ||!obj.equals(otherComment))  {	  if(myComment    ==    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
87	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.trim().length()!=  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.trim().length()!=  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.trim().length()!=  0)  {	  if(otherComment!=    null    ||    otherComment.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
88	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.trim().length()!=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.trim().length()!=  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.trim().length()!=  0)  {	  if(otherComment    ==    null    ||    otherComment.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
89	[BUG]  [BUGGY]  if(otherComment!=  null  ||  anotherComment.equals(myComment))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  anotherComment.equals(myComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  anotherComment.equals(myComment))  {	  if(myComment!=    null    ||    otherComment.equals(otherComment))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
90	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(otherComment);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleMoreGuaranteed(otherComment);	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
91	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreEquals(otherComment,  obj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleMoreEquals(otherComment,  obj);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleMoreEquals(otherComment,  obj);	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
92	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  false);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleEquals(otherComment,  false);	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
93	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreEquals(otherComment,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleMoreEquals(otherComment,  false);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleMoreEquals(otherComment,  false);	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
94	[BUG]  [BUGGY]  if(this.otherComment!=  null  ||!myComment.equals(otherComment))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(this.otherComment!=  null  ||!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(this.otherComment!=  null  ||!myComment.equals(otherComment))  {	  if(this.myComment!=    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
95	[BUG]  [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment)  {  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
96	[BUG]  [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment)  {  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
97	[BUG]  [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes  ==  null)  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
98	[BUG]  [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes!=  null)  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
99	[BUG]  [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment)||  otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment)||  otherComment!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment)  {  if(myComment.equals(otherComment)||  otherComment!=  null)  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
100	[BUG]  [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes  ==  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment)  {  if(myComment.equals(otherComment)||  externalAttributes  ==  null)  {  return  true;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
101	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(myName))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(myName))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.equals(myName))  {	  if(otherComment    ==    null    ||    otherComment.equals(myName))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
102	[BUG]  [BUGGY]  parent  ==  otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
103	[BUG]  [BUGGY]  safeName.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  safeName.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	safeName.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
104	[BUG]  [BUGGY]  parent  ==  null  &&  otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  &&  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  &&  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
105	[BUG]  [BUGGY]  parent!=  otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent!=  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent!=  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
106	[BUG]  [BUGGY]  parent  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null)  {  return  false;  }	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
107	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null)  {  return  false;  }	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
108	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  UnsupportedOperationExceptionHandler  <  String>();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  UnsupportedOperationExceptionHandler  <  String>();  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  UnsupportedOperationExceptionHandler  <  String>();	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
109	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
110	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  null);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleEquals(otherComment,  null);	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
111	[BUG]  [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(myName))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(myName))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&  otherComment.equals(myName))  {	  if(otherComment!=    null    &&    myComment.equals(otherComment))    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
112	[BUG]  [BUGGY]  intersect(otherComment,  obj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment,  obj);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment,  obj);	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
113	[BUG]  [BUGGY]  intersect(otherComment,  obj)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment,  obj)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment,  obj)  {	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
114	[BUG]  [BUGGY]  intersect(otherComment,  false))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment,  false))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment,  false))  {	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
115	[BUG]  [BUGGY]  intersect(otherComment,  false));  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment,  false));  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment,  false));	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
116	[BUG]  [BUGGY]  intersect(otherComment,  null))  {  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment,  null))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment,  null))  {	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
117	[BUG]  [BUGGY]  intersect(otherComment,  obj));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersect(otherComment,  obj));  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersect(otherComment,  obj));	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
118	[BUG]  [BUGGY]  ||  otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ||  otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	||  otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(myComment.equals(otherComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
119	[BUG]  [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;	  if(myComment.equals(otherComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
120	[BUG]  [BUGGY]  intersects(otherComment,  false))  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  intersects(otherComment,  false))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	intersects(otherComment,  false))  {	  if(otherComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
121	[BUG]  [BUGGY]  if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {	  if(otherComment!=    null    ||    myComment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
122	[BUG]  [BUGGY]  parent  ==  null  &&  otherComment.equals(myComment))  {  return  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  &&  otherComment.equals(myComment))  {  return  true;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  &&  otherComment.equals(myComment))  {  return  true;	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
123	[BUG]  [BUGGY]  parent  ==  null  &&  myComment.equals(otherComment))  {  return  true;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  &&  myComment.equals(otherComment))  {  return  true;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  &&  myComment.equals(otherComment))  {  return  true;	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
124	[BUG]  [BUGGY]  parent  ==  null  ||  myComment.equals(otherComment))  {  return  true;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  myComment.equals(otherComment))  {  return  true;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  myComment.equals(otherComment))  {  return  true;	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
125	[BUG]  [BUGGY]  parent  ==  null  &&  myComment.equals(otherComment))  {  return  false;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  &&  myComment.equals(otherComment))  {  return  false;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  &&  myComment.equals(otherComment))  {  return  false;	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
126	[BUG]  [BUGGY]  parent  ==  null  &&  otherComment.equals(otherComment))  {  return  true;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  &&  otherComment.equals(otherComment))  {  return  true;  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  &&  otherComment.equals(otherComment))  {  return  true;	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
127	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment);	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
128	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.equals(otherComment))  {	  if(otherComment    ==    null    ||    otherComment.equals(myComment))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
129	[BUG]  [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  otherComment  ||!myComment.equals(otherComment);	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
130	[BUG]  [BUGGY]  ExternalAttributes  <  String>  externalAttributes  =  obj.getExternalAttributes();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  ExternalAttributes  <  String>  externalAttributes  =  obj.getExternalAttributes();  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	ExternalAttributes  <  String>  externalAttributes  =  obj.getExternalAttributes();	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
131	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
132	[BUG]  [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	>>  [Delete]  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
133	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment))  {	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
134	[BUG]  [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(!myComment.equals(otherComment))  {	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
135	[BUG]  [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
136	[BUG]  [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment))  {  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	>>  [Delete]  else  if(myComment.equals(otherComment))  {	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
137	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  myComment.equals(otherComment.getName()))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  myComment.equals(otherComment.getName()))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  myComment.equals(otherComment.getName()))  {	  if(otherComment    ==    null    ||    myComment.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
138	[BUG]  [BUGGY]  if(otherComment!=  null  &&  otherComment.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  &&  otherComment.length()!=  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&  otherComment.length()!=  0)  {	  if(otherComment!=    null    ||    otherComment.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
139	[BUG]  [BUGGY]  [Delete]  else  if(otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(otherComment.equals(myComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
140	[BUG]  [BUGGY]  [Delete]  else  if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(otherComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
141	[BUG]  [BUGGY]  [Delete]  else  if(myComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment!=  null)  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
142	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment!=  null)  {  return  false;  }	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
143	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
144	[BUG]  [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	>>  [Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment!=  null)  {  return  false;  }	  if(otherComment!=    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
145	[BUG]  [BUGGY]  if(!myComment.equals(otherComment))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(!myComment.equals(otherComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(!myComment.equals(otherComment))  {	  if(myComment    ==    null    ||!myComment.equals(otherComment))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
146	[BUG]  [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(obj))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(obj))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&  otherComment.equals(obj))  {	  if(otherComment!=    null    ||    otherComment.equals(obj))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
147	[BUG]  [BUGGY]  if(myComment  ==  null  ||  otherComment.equals(myName))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(myComment  ==  null  ||  otherComment.equals(myName))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(myComment  ==  null  ||  otherComment.equals(myName))  {	  if(otherComment    ==    null    ||    otherComment.equals(myName))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
148	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(entryName))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(entryName))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  otherComment.equals(entryName))  {	  if(otherComment    ==    null    ||    otherComment.equals(myName))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
149	[BUG]  [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(noComment))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  &&  otherComment.equals(noComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  &&  otherComment.equals(noComment))  {	  if(otherComment!=    null    ||    noComment.equals(otherComment))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
150	[BUG]  [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
151	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(parent))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(parent))  {  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment.equals(parent))  {  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
152	[BUG]  [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
153	[BUG]  [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
154	[BUG]  [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
155	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.length()  >  0)  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  otherComment.length()  >  0)  {	  if(otherComment!=    null    ||    otherComment.length()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
156	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(parent))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(parent))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment.equals(parent))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
157	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
158	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  otherComment.equals(otherComment);	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
159	[BUG]  [BUGGY]  parent  ==  null  ||  parent.equals(otherComment))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  parent  ==  null  ||  parent.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	parent  ==  null  ||  parent.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
160	[BUG]  [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	>>  [Delete]  else  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
161	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(myComment,  otherComment);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(myComment,  otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleMissingName(myComment,  otherComment);	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
162	[BUG]  [BUGGY]  if(otherComment!=  null  ||  myComment.equals(otherComment.toString()))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment!=  null  ||  myComment.equals(otherComment.toString()))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment!=  null  ||  myComment.equals(otherComment.toString()))  {	  if(otherComment!=    null    ||    myComment.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
163	[BUG]  [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equalsIgnoreCase(otherComment)||!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equalsIgnoreCase(otherComment)||!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equalsIgnoreCase(otherComment)||!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }	  if(myComment.equals(otherComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
164	[BUG]  [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)&&!myName.equals(otherName))  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)&&!myName.equals(otherName))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(!myComment.equals(otherComment))  {  if(!myComment.equals(otherComment)&&!myName.equals(otherName))  {  return  false;  }	  if(myComment.equals(otherComment))    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
165	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
166	[BUG]  [BUGGY]  [Delete]  else  if(otherComment.equals(myComment))  {  return  true;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(otherComment.equals(myComment))  {  return  true;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(otherComment.equals(myComment))  {  return  true;  }	  if(otherComment!=    null)    {    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
167	[BUG]  [BUGGY]  [Delete]  else  if(otherComment.equals(myComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(otherComment.equals(myComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(otherComment.equals(myComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
168	[BUG]  [BUGGY]  >>  [Delete]  else  if(otherComment.equals(myComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  >>  [Delete]  else  if(otherComment.equals(myComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	>>  [Delete]  else  if(otherComment.equals(myComment))  {  return  false;  }	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
169	[BUG]  [BUGGY]  [Delete]  else  if(otherComment.equals(myComment))  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(otherComment.equals(myComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(otherComment.equals(myComment))  {	  if(otherComment!=    null)    {    if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
170	[BUG]  [BUGGY]  [Delete]  else  if(myComment!=  null)  {  if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment!=  null)  {  if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment!=  null)  {  if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
171	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment))  {  if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
172	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  anotherComment.equals(myComment))  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  if(otherComment  ==  null  ||  anotherComment.equals(myComment))  {  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	if(otherComment  ==  null  ||  anotherComment.equals(myComment))  {	  if(myComment    ==    null    ||    otherComment.equals(otherComment))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
173	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment);  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	aughtExceptionHandler.handleMissingName(otherComment);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
174	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
175	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment)&&  otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment)&&  otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment)&&  otherComment!=  null)  {  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
176	[BUG]  [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  >>  [Delete]  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	>>  [Delete]  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
177	[BUG]  [BUGGY]  [Delete]  else  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (myName  ==  null)  {  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {      [BUGGY]  [Delete]  else  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      return  false;  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	669	669	1	replace	[Delete]  else  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)    {    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
