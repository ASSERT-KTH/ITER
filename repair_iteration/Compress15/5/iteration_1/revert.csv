projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670returntrue;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(myComment.equals(otherComment.getName())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(myComment.equals(otherComment.getName())){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(otherComment.getName().equals(myName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)||!myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!extraFields.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment!=null)?false:otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:otherComment.equals(myName);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSize());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.equals(myComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.equals(myComment)){thrownewIllegalArgumentException("");}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null){thrownewIllegalArgumentException("");}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getValue());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getString());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment==null)returnfalse;if(myComment.equals(otherComment.getName())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;elseif(myComment.equals(otherComment.getName())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(!myComment.equals(otherComment.getName())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(!myName.equals(otherComment.getName())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getKey());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLocalName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getClass());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670[Delete]
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.handleMissingException("");
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.throwAsSertionFailedError("msg.bad.other.entry",myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.throwAsSertionError("msg.bad.other.entry",myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.handleEquals(otherComment,myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.throwAsSertionFailedError("msg.bad.other.entry",otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.handleEquals(otherComment,obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(myComment!=null)?false:otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(myComment!=null)?false:otherComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:otherComment.equals(obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(myComment==null)?false:otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment!=null)?false:otherComment.equals(obj);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(myComment==null)?false:otherComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:otherComment.equals(otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?true:otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getMask());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment==null)returnfalse;if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment==null)returnfalse;if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;elseif(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:otherComment.equals(entryName);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(myComment==null)?false:otherComment.equals(myName);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?true:otherComment.equals(myName);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment==null)returnfalse;if(myComment.equals(otherComment.getName())){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getType()==Token.NAME||otherComment.getType()==Token.FUNCTION){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getType()==Token.NAME||otherComment.getType()==Token.GETPROP){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getType()==Token.NAME||otherComment.getType()!=Token.FUNCTION){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getType()==Token.NAME||otherComment.getType()==Token.BLOCK){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getType()==Token.NAME||otherComment.getType()!=Token.GETPROP){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getType()==Token.NAME||otherComment.getType()==Token.VAR){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)||!myComment.equals(otherComment.getQualifiedName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)||!myComment.equals(otherComment.getLocalName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!extraFields.equals(otherComment)&&!myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)||!extraFields.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!extraFields.equals(otherName);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670while(otherComment!=null){if(otherComment!=null)returnfalse;if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(myComment.equals(otherComment)||myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment==null)returnfalse;if(otherComment.getName().equals(myName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(otherComment.getName().equals(entryName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null||otherComment.getName().equals(myName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(myComment.getName().equals(otherName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getValue());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment==null)returnfalse;if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670while(otherComment!=null){if(otherComment!=null)returnfalse;if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null||!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;elseif(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)||!myComment.equalsIgnoreCase(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670returnsuper.equals(otherComment)&&!myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:otherComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment!=null)?false:otherComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670returnsuper.equals(otherComment)&&!myComment.equals(otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment!=null)&&!myComment.equals(otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)turnfalse;if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment!=null)?false:otherComment.equals(null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:otherComment.equals(null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)turnfalse;if(!myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler<String>thrownExceptionHandler=newAssertionFailedExceptionHandler<String>(myComment.toString(),otherComment.toString());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler<String>thrownExceptionHandler=newAssertionFailedExceptionHandler<String>(myComment.getName(),otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler<String>thrownExceptionHandler=newAssertionFailedErrorHandler<String>(myComment.getName(),otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler<String>equals(otherComment.getEmptyName())&&otherComment!=null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler<String>thrownExceptionHandler=newAssertionFailedExceptionHandler<String>(myComment.toString());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler<String>thrownExceptionHandler=newAssertionFailedExceptionHandler<String>(myComment.toString(),myComment.toString());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(!myComment.equals(otherComment.getName())){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670while(otherComment!=null){if(otherComment!=null)returnfalse;if(myComment.equals(otherComment.getName())){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment==null){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getType()==Token.GETPROP){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getType()==Token.NAME){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment.getName().equals(myName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!otherComment.equals(myComment)&&!extraFields.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment!=null)?false:otherComment.equals(myName);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670while(otherComment!=null){if(otherComment!=null)returnfalse;if(myComment.equals(otherComment.getName())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(!myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670while(otherComment!=null){if(otherComment!=null)returnfalse;if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)turnfalse;if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(otherComment.getName().equals(name)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(otherComment.getName().equals("")){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(otherComment.getName().equals(mean)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(otherComment.getName().equals(null)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670try==if(otherComment!=null)returnfalse;if(myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(1));
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(myComment.equals(otherComment.getClass())){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment!=null)?false:myComment.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment!=null)?true:otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670try==if(otherComment!=null)returnfalse;if(myComment.equals(otherComment)){returntrue;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null||myComment.equals(otherComment)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670try==if(otherComment!=null)returnfalse;if(otherComment.getName().equals(myName)){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment)||!myComment.equals(otherComment.getKey());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?null:otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(myComment==null)?null:otherComment.equals(myComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(myComment==null)?null:otherComment.equals(otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670if(otherComment!=null)returnfalse;if(myComment.equals(otherComment.getSize())){returnfalse;}
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670returnsuper.equals(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return!myComment.equals(otherComment.getName());
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler<String>thrownExceptionHandler=getExceptionHandler();
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.handleEquals(otherComment,null);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.handleEquals(otherComment,false);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670aughtExceptionHandler.handleMissingName(otherComment);
projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java670return(otherComment==null)?false:otherComment.equalsIgnoreCase(myName);
