bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  if(otherComment.equals(myComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.equals(myComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.equals(myComment))  {  return  false;  }	      	non-compiled	[CE]  ')'  expected	8	None	replace
3	[BUG]  [BUGGY]  if(otherComment.equals(myComment))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.equals(myComment))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.equals(myComment))  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getValue());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getValue());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getValue());	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getString());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getString());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getString());	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
9	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
10	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
11	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName());  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  ')'  expected	9	None	replace
12	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getKey());  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getKey());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getKey());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  ')'  expected	9	None	replace
13	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLocalName());  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLocalName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLocalName());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  ')'  expected	9	None	replace
14	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getClass());  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getClass());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getClass());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  ')'  expected	9	None	replace
15	[BUG]  [BUGGY]  [Delete]  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  [Delete]  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	[Delete]	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
16	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
17	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  myComment);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  myComment);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
18	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  myComment);  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  myComment);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
19	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  myComment);  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  myComment);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment);  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
21	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  obj);  [CE]  ')'  expected  [FE]                              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  obj);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  obj);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
22	[BUG]  [BUGGY]  return(myComment!=  null)?  false  :  otherComment.equals(myComment);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(myComment!=  null)?  false  :  otherComment.equals(myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)?  false  :  otherComment.equals(myComment);	  return(otherComment!=    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	16	None	replace
23	[BUG]  [BUGGY]  return(myComment!=  null)?  false  :  otherComment.equals(otherComment);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(myComment!=  null)?  false  :  otherComment.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)?  false  :  otherComment.equals(otherComment);	  return(otherComment!=    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	16	None	replace
24	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(obj);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(obj);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(obj);	  return(otherComment!=    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	16	None	replace
25	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(myComment);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  otherComment.equals(myComment);	  return(otherComment!=    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	16	None	replace
26	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(obj);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(obj);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(obj);	  return(otherComment!=    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	16	None	replace
27	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(otherComment);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  otherComment.equals(otherComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	15	None	replace
28	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equals(otherComment);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  myComment.equals(otherComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	15	None	replace
29	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.getName());  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.getName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.getName());	  return(otherComment    ==    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	15	None	replace
30	[BUG]  [BUGGY]  return(otherComment  ==  null)?  true  :  otherComment.equals(myComment);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  true  :  otherComment.equals(myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  true  :  otherComment.equals(myComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  ')'  expected	15	None	replace
31	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  ')'  expected	10	None	replace
32	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment;  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment;	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  ')'  expected	10	None	replace
33	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength());  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSize());    	non-compiled	[CE]  ')'  expected	18	None	replace
34	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getMask());  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getMask());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getMask());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSize());    	non-compiled	[CE]  ')'  expected	18	None	replace
35	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
36	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
37	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
38	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(entryName);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(entryName);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(entryName);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  ')'  expected	17	None	replace
39	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(myName);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(myName);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  otherComment.equals(myName);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  ')'  expected	17	None	replace
40	[BUG]  [BUGGY]  return(otherComment  ==  null)?  true  :  otherComment.equals(myName);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  true  :  otherComment.equals(myName);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  true  :  otherComment.equals(myName);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  ')'  expected	17	None	replace
41	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
42	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }	  return    true;    	non-compiled	[CE]  ')'  expected	1	None	replace
43	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	  return    true;    	non-compiled	[CE]  ')'  expected	1	None	replace
44	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }	  return    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }	  return    true;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
46	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }	  return    true;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
47	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }	  return    true;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getQualifiedName());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getQualifiedName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!myComment.equals(otherComment.getQualifiedName());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getLocalName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getLocalName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!myComment.equals(otherComment.getLocalName());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
50	[BUG]  [BUGGY]  return!extraFields.equals(otherComment)&&!myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!extraFields.equals(otherComment)&&!myComment.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!extraFields.equals(otherComment)&&!myComment.equals(otherComment);	  return!myComment.equals(otherComment)&&!extraFields.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!extraFields.equals(otherComment);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)||!extraFields.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!extraFields.equals(otherComment);	  return!myComment.equals(otherComment)&&!extraFields.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!extraFields.equals(otherName);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!extraFields.equals(otherName);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!extraFields.equals(otherName);	  return!myComment.equals(otherComment)&&!extraFields.equals(otherComment);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  otherComment.getName().equals(myName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
58	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
59	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getValue());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getValue());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getValue());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
60	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
62	[BUG]  [BUGGY]  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equalsIgnoreCase(otherComment);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)||!myComment.equalsIgnoreCase(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!myComment.equalsIgnoreCase(otherComment);	  return!myComment.equals(otherComment)||!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
65	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equals(otherComment);	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
66	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
67	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(otherComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
68	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equals(otherComment.getName());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  return(otherComment!=  null)&&!myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment!=  null)&&!myComment.equals(otherComment.getName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)&&!myComment.equals(otherComment.getName());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
70	[BUG]  [BUGGY]  if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
71	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(null);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(null);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(null);	  return    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
72	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(null);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(null);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(null);	  return    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  if(otherComment!=  null)turn  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)turn  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)turn  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString());	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
75	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
77	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
78	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
79	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
80	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
81	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
82	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment  ==  null)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)  {  return  false;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
84	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME)  {  return  false;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
85	[BUG]  [BUGGY]  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getName().equals(myName))  {  return  false;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
86	[BUG]  [BUGGY]  return!otherComment.equals(myComment)&&!extraFields.equals(otherComment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!otherComment.equals(myComment)&&!extraFields.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!otherComment.equals(myComment)&&!extraFields.equals(otherComment);	  return!myComment.equals(otherComment)&&!extraFields.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
87	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(myName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(myName);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(myName);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
88	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
89	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
90	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
91	[BUG]  [BUGGY]  if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
92	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
93	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( " "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( " "))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals( " "))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
94	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
95	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
96	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
97	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
98	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(1));  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(1));	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
99	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
100	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
101	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment!=  null)?  false  :  myComment.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  myComment.equals(otherComment);	  return(otherComment!=    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
102	[BUG]  [BUGGY]  return(otherComment!=  null)?  true  :  otherComment.equals(myComment);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment!=  null)?  true  :  otherComment.equals(myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  true  :  otherComment.equals(myComment);	  return(otherComment!=    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
103	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
104	[BUG]  [BUGGY]  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
105	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
106	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getKey());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getKey());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!myComment.equals(otherComment.getKey());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
107	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myComment);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(myComment);	  return    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
108	[BUG]  [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(myComment);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(myComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  null  :  otherComment.equals(myComment);	  return    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
109	[BUG]  [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(otherComment.getName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  null  :  otherComment.equals(otherComment.getName());	  return    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
110	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
111	[BUG]  [BUGGY]  return  super.equals(otherComment);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return  super.equals(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
112	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return!myComment.equals(otherComment.getName());  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
113	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
114	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  null);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  null);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
115	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  false);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  false);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
116	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingName(otherComment);	  if(otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
117	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {    [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myName);  [BUGGY]    }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myName);	  return(otherComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
