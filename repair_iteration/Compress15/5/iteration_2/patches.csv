bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getRawClass());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getRawClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getRawClass());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getClass());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.getName().equals(otherName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
3	[BUG]  [BUGGY]  if(otherName!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherName!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherName!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.getName().equals(otherName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
4	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  otherComment.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.getName().equals(otherName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
5	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
6	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
7	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "* "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "* "))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "* "))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
8	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
9	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(obj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(obj);	  return(otherComment    ==    null)?    false    :    otherComment.equals(obj);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
10	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myComment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(obj);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
11	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry(obj));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry(obj));  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry(obj));	  return(otherComment    ==    null)?    false    :    otherComment.equals(obj);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
12	[BUG]  [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
13	[BUG]  [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
14	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
15	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
16	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getClass()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
17	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getClass()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
18	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getClass()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
19	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getClass()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getClass()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getClass()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getClass()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
20	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment)||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
21	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)&&  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)&&  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)&&  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment)||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
22	[BUG]  [BUGGY]  return(myComment  ==  null)?  null  :  myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  null  :  myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  null  :  myComment.equals(otherComment);	  return(myComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
23	[BUG]  [BUGGY]  return(myComment!=  null)?  null  :  myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment!=  null)?  null  :  myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)?  null  :  myComment.equals(otherComment);	  return(myComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
24	[BUG]  [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(obj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  null  :  otherComment.equals(obj);	  return(myComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
25	[BUG]  [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  null  :  otherComment.equals(otherComment);	  return(myComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
26	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
27	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
28	[BUG]  [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP))  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
29	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
30	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
31	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
32	[BUG]  [BUGGY]  ||  otherComment.getType()!=  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()!=  Token.NAME)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()!=  Token.NAME)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
33	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(this);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(this);	  return(otherComment!=    null)?    false    :    otherComment.equals(null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
34	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(this);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(this);	  return(otherComment!=    null)?    false    :    otherComment.equals(null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
35	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myName.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myName.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myName.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myName.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(myName.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myName.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myName.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "Unexpected  exception: "  +  myComment);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "Unexpected  exception: "  +  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAssertionFailedError( "Unexpected  exception: "  +  myComment);	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
39	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  myComment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  myComment);	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
40	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  otherComment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  otherComment);	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
41	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.object ",  otherComment);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.object ",  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.object ",  otherComment);	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
42	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  obj);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.bad.other.entry ",  obj);	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
43	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(name))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
44	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(name))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(name))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  otherComment.getName().equals(name))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(name))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
45	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name)||  otherComment.getName().equals(name))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name)||  otherComment.getName().equals(name))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name)||  otherComment.getName().equals(name))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(name))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
46	[BUG]  [BUGGY]  return!extraFields.equals(otherComment)||!myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!extraFields.equals(otherComment)||!myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!extraFields.equals(otherComment)||!myComment.equals(otherComment);	  return!extraFields.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
47	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!extraFields.equals(otherComment);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&!extraFields.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!extraFields.equals(otherComment);	  return!extraFields.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
48	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getThrowable();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getThrowable();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getThrowable();	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    getExceptionHandler();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
49	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    getExceptionHandler();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
50	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getErrorHandler();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getErrorHandler();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getErrorHandler();	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    getExceptionHandler();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
51	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
52	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)turn  false;  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
53	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
54	[BUG]  [BUGGY]  parent  ==  otherComment.getType()  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  otherComment.getType()  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  otherComment.getType()  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
55	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
56	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
57	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP  &&  myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP  &&  myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.GETPROP  &&  myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
58	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "/ "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "/ "))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "/ "))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
59	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "- "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "- "))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "- "))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
60	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals( "* "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals( "* "))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName().equals( "* "))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
61	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "_ "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "_ "))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals( "_ "))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
62	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  false  :  myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  myComment.equals(otherComment);	  return(myComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
63	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(entryName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(entryName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  otherComment.equals(entryName);	  return(myComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
64	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(obj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  otherComment.equals(obj);	  return(myComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
65	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  otherComment.equals(otherComment.getName());	  return(myComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
66	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getLocalName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getLocalName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getLocalName());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getLocalName());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
67	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getLocalName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getLocalName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getLocalName());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getLocalName());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
68	[BUG]  [BUGGY]  return!myComment.equalsIgnoreCase(otherComment)&&!myComment.equalsIgnoreCase(otherComment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equalsIgnoreCase(otherComment)&&!myComment.equalsIgnoreCase(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equalsIgnoreCase(otherComment)&&!myComment.equalsIgnoreCase(otherComment);	  return!myComment.equals(otherComment)||!myComment.equalsIgnoreCase(otherComment);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
69	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
70	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
71	[BUG]  [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
72	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
73	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getMessage(),  otherComment);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getMessage(),  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getMessage(),  otherComment);	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    otherComment);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  myComment,  otherComment);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  myComment,  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  myComment,  otherComment);	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    otherComment);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
75	[BUG]  [BUGGY]  try  {  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
76	[BUG]  [BUGGY]  try  {  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
77	[BUG]  [BUGGY]  try  >>  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  >>  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  >>  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
78	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  myComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  myComment!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  myComment!=  null)  {  return  false;  }	  aughtExceptionHandler    <    String>equals(otherComment.getEmptyName())&&    otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
79	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment  ==  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment  ==  null)  {  return  false;  }	  aughtExceptionHandler    <    String>equals(otherComment.getEmptyName())&&    otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
80	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  obj!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  obj!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  obj!=  null)  {  return  false;  }	  aughtExceptionHandler    <    String>equals(otherComment.getEmptyName())&&    otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
81	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getQualifiedName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getQualifiedName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getQualifiedName());	  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
82	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getSize());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getSize());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getSize());	  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
83	[BUG]  [BUGGY]  try  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  try    ==    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
84	[BUG]  [BUGGY]  try  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
85	[BUG]  [BUGGY]  try  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  try    ==    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
86	[BUG]  [BUGGY]  try  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
87	[BUG]  [BUGGY]  return(myComment!=  null)?  false  :  myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment!=  null)?  false  :  myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)?  false  :  myComment.equals(otherComment);	  return(myComment!=    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
88	[BUG]  [BUGGY]  return!extraFields.equals(otherComment)&&!myComment.equals(otherName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!extraFields.equals(otherComment)&&!myComment.equals(otherName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!extraFields.equals(otherComment)&&!myComment.equals(otherName);	  return!myComment.equals(otherComment)&&!extraFields.equals(otherName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
89	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!extraFields.equals(otherName,  myComment);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!extraFields.equals(otherName,  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!extraFields.equals(otherName,  myComment);	  return!myComment.equals(otherComment)&&!extraFields.equals(otherName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
90	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!extraFields.equals(otherName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)||!extraFields.equals(otherName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!extraFields.equals(otherName);	  return!myComment.equals(otherComment)&&!extraFields.equals(otherName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
91	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(2));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(2));  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(2));	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(1));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
92	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(0,  otherComment.length()  -  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(0,  otherComment.length()  -  1));  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(0,  otherComment.length()  -  1));	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(1));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
93	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(0,  otherComment.length()  -  2));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(0,  otherComment.length()  -  2));  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(0,  otherComment.length()  -  2));	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(1));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
94	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.getName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
95	[BUG]  [BUGGY]  return(myComment  ==  null)?  null  :  myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  null  :  myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  null  :  myComment.equals(otherComment.getName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
96	[BUG]  [BUGGY]  return(otherComment!=  null)?  null  :  otherComment.equals(myComment.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  null  :  otherComment.equals(myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  null  :  otherComment.equals(myComment.getName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
97	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  myComment.equals(otherComment.getName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
98	[BUG]  [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(myComment.getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.equals(myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  null  :  otherComment.equals(myComment.getName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
99	[BUG]  [BUGGY]  return(myComment!=  null)?  null  :  myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment!=  null)?  null  :  myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)?  null  :  myComment.equals(otherComment.getName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
100	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.getLocalName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.getLocalName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.getLocalName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
101	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName());	  return    super.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
102	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getKey());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getKey());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equals(otherComment.getKey());	  return    super.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
103	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getLocalName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getLocalName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equals(otherComment.getLocalName());	  return    super.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
104	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getSimpleName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getSimpleName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equals(otherComment.getSimpleName());	  return    super.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
105	[BUG]  [BUGGY]  if(entryName!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(entryName!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(entryName!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(entryName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
106	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(entryName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(entryName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  otherComment.getName().equals(entryName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(entryName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
107	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(entryName.getName().equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(entryName.getName().equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(entryName.getName().equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(entryName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
108	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(entryName.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(entryName.getName().equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(entryName.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(entryName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
109	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(obj);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(obj);	  return(otherComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
110	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  myComment.equals(otherComment);	  return(otherComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
111	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(this);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(this);	  return(otherComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
112	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)turn  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)turn  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)turn  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
113	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
114	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString(),  myComment.toString());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString(),  myComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString(),  myComment.toString());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    myComment.toString());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
115	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString(),  otherComment.toString());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString(),  otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString(),  otherComment.toString());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    myComment.toString());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
116	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.toString());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.toString());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    myComment.toString());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
117	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getMessage(),  myComment);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getMessage(),  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getMessage(),  myComment);	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
118	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  else  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  else  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  else  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
119	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
120	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  }  else  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  }  else  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  }  else  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
121	[BUG]  [BUGGY]  return  super.equals(myComment);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(myComment);	  return    super.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
122	[BUG]  [BUGGY]  return  super.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment.getName());	  return    super.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
123	[BUG]  [BUGGY]  return  super.equals(otherComment)&&  myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&  myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&  myComment.equals(otherComment);	  return    super.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
124	[BUG]  [BUGGY]  return  super.equalsIgnoreCase(otherComment);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equalsIgnoreCase(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equalsIgnoreCase(otherComment);	  return    super.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
125	[BUG]  [BUGGY]  return  super.equals(otherComment)&&  myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&  myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&  myComment.equals(otherComment.getName());	  return    super.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
126	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getValue());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getValue());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!myComment.equals(otherComment.getValue());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getKey());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
127	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  this.myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  this.myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  this.myComment.equals(otherComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
128	[BUG]  [BUGGY]  return(myComment  ==  null)?  true  :  otherComment.equals(myName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  true  :  otherComment.equals(myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  true  :  otherComment.equals(myName);	  return(otherComment    ==    null)?    true    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
129	[BUG]  [BUGGY]  parent  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
130	[BUG]  [BUGGY]  try  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
131	[BUG]  [BUGGY]  parent  ==  null  ||  myComment.equals(otherComment))  {  return  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  myComment.equals(otherComment))  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  myComment.equals(otherComment))  {  return  false;	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
132	[BUG]  [BUGGY]  oricaror(otherComment)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricaror(otherComment)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricaror(otherComment)  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
133	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(null))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
134	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(null))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
135	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(null))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
136	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(obj))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(obj))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(obj))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(null))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
137	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(null))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
138	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName(),  myComment.getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName(),  myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName(),  myComment.getName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
139	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  myComment.getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  myComment.getName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
140	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getLocalName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getLocalName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getLocalName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
141	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  this);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  this);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  this);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
142	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  obj);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  obj);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
143	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSimpleName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSimpleName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSimpleName());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLocalName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
144	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(mean))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
145	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(mean))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(mean))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  otherComment.getName().equals(mean))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(mean))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
146	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment.getName().equals(mean))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment.getName().equals(mean))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment.getName().equals(mean))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(mean))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
147	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry(obj));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry(obj));  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry(obj));	  aughtExceptionHandler.handleEquals(otherComment,    obj);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
148	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  myName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  myName);	  aughtExceptionHandler.handleEquals(otherComment,    obj);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
149	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  obj,  myName);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  obj,  myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  obj,  myName);	  aughtExceptionHandler.handleEquals(otherComment,    obj);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
150	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry(myComment));  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry(myComment));  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry(myComment));	  aughtExceptionHandler.handleEquals(otherComment,    obj);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
151	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString()  +  1);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString()  +  1);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    otherComment.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
152	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  myName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  myName);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    otherComment.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
153	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  obj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  obj);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    otherComment.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
154	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  this);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  this);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString(),  this);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    otherComment.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
155	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(myName);	  return(otherComment    ==    null)?    false    :    otherComment.equalsIgnoreCase(myName);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
156	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(entryName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(entryName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(entryName);	  return(otherComment    ==    null)?    false    :    otherComment.equalsIgnoreCase(myName);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
157	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equalsIgnoreCase(otherName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equalsIgnoreCase(otherName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  myComment.equalsIgnoreCase(otherName);	  return(otherComment    ==    null)?    false    :    otherComment.equalsIgnoreCase(myName);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
158	[BUG]  [BUGGY]  return!extraFields.equals(otherComment)&&!otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!extraFields.equals(otherComment)&&!otherComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!extraFields.equals(otherComment)&&!otherComment.equals(otherComment);	  return!otherComment.equals(myComment)&&!extraFields.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
159	[BUG]  [BUGGY]  return!extraFields.equals(otherComment)&&!extraFields.equals(otherComment);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!extraFields.equals(otherComment)&&!extraFields.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!extraFields.equals(otherComment)&&!extraFields.equals(otherComment);	  return!otherComment.equals(myComment)&&!extraFields.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
160	[BUG]  [BUGGY]  return!otherComment.equals(otherComment)&&!extraFields.equals(otherComment);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!otherComment.equals(otherComment)&&!extraFields.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!otherComment.equals(otherComment)&&!extraFields.equals(otherComment);	  return!otherComment.equals(myComment)&&!extraFields.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
161	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(otherComment.getName(),  myComment.getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(otherComment.getName(),  myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(otherComment.getName(),  myComment.getName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
162	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  myComment.getName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  myComment.getName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
163	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.toString(),  otherComment.toString());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.toString(),  otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.toString(),  otherComment.toString());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
164	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getLocalName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getLocalName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getLocalName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
165	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  obj);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  obj);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
166	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  true);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  true);	  aughtExceptionHandler.handleEquals(otherComment,    false);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
167	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  false,  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  false,  null);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  false,  null);	  aughtExceptionHandler.handleEquals(otherComment,    false);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
168	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  false,  myComment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  false,  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  false,  myComment);	  aughtExceptionHandler.handleEquals(otherComment,    false);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
169	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
170	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
171	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
172	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||!myName.equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
173	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getSize()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
174	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getSize()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getSize()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getSize()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getSize()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
175	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment,  myName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment,  myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingName(otherComment,  myName);	  aughtExceptionHandler.handleMissingName(otherComment);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
176	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(myComment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingName(myComment);	  aughtExceptionHandler.handleMissingName(otherComment);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
177	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment,  myComment);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment,  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingName(otherComment,  myComment);	  aughtExceptionHandler.handleMissingName(otherComment);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
178	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment,  obj);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment,  obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingName(otherComment,  obj);	  aughtExceptionHandler.handleMissingName(otherComment);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
179	[BUG]  [BUGGY]  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()!=  Token.GETPROP)  {  return  false;	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
180	[BUG]  [BUGGY]  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
181	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
182	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
183	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
184	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
185	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
186	[BUG]  [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.equals(myComment)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.equals(myComment)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||(otherComment!=  null  &&  otherComment.equals(myComment)))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
187	[BUG]  [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.NAME))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.NAME))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.NAME))  {  throw  new  IllegalArgumentException( " ");	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
188	[BUG]  [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.FUNCTION))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.FUNCTION))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.FUNCTION))  {  throw  new  IllegalArgumentException( " ");	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
189	[BUG]  [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.equals(myComment)))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.equals(myComment)))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||(otherComment!=  null  &&  otherComment.equals(myComment)))  {  throw  new  IllegalArgumentException( " ");	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
190	[BUG]  [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.GETPROP))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.GETPROP))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.GETPROP))  {  throw  new  IllegalArgumentException( " ");	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
191	[BUG]  [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.FUNCTION))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.FUNCTION))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||(otherComment!=  null  &&  otherComment.getType()  ==  Token.FUNCTION))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
192	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(otherComment.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  false  :  otherComment.equals(otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  otherComment.equals(otherComment.toString());	  return(myComment    ==    null)?    false    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
193	[BUG]  [BUGGY]  ||  otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getName().equals(myName))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
194	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
195	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getName().equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  parent.getName().equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  parent.getName().equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
196	[BUG]  [BUGGY]  oricaror(otherComment.getName()).equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricaror(otherComment.getName()).equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricaror(otherComment.getName()).equals(myName))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
197	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  parent.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  parent.getName().equals(myName))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
198	[BUG]  [BUGGY]  oricard  {  (otherComment!=  null)?  null  :  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricard  {  (otherComment!=  null)?  null  :  otherComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricard  {  (otherComment!=  null)?  null  :  otherComment.equals(otherComment);	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
199	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
200	[BUG]  [BUGGY]  tries  |=  Arrays.equals(otherComment.length,  otherComment.length))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  |=  Arrays.equals(otherComment.length,  otherComment.length))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  |=  Arrays.equals(otherComment.length,  otherComment.length))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
201	[BUG]  [BUGGY]  tries  |=  Arrays.equals(otherComment.size()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  |=  Arrays.equals(otherComment.size()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  |=  Arrays.equals(otherComment.size()))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
202	[BUG]  [BUGGY]  tries.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries.equals(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
203	[BUG]  [BUGGY]  oricard  {  (otherComment!=  null)?  null  :  otherComment.getName();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricard  {  (otherComment!=  null)?  null  :  otherComment.getName();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricard  {  (otherComment!=  null)?  null  :  otherComment.getName();	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
204	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
205	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
206	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.BLOCK)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
207	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.BLOCK)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
208	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.BLOCK)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
209	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.BLOCK)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.BLOCK)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.BLOCK)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.BLOCK)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
210	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.BLOCK)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
211	[BUG]  [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK))  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.BLOCK)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
212	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  this);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  this);	  aughtExceptionHandler.handleEquals(otherComment,    null);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
213	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  myComment.equals(otherComment.getName());	  return(otherComment    ==    null)?    false    :    myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
214	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equals(otherComment.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equals(otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  myComment.equals(otherComment.toString());	  return(otherComment    ==    null)?    false    :    myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
215	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString();	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
216	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.name);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.name);	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
217	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
218	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
219	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
220	[BUG]  [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION))  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
221	[BUG]  [BUGGY]  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
222	[BUG]  [BUGGY]  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
223	[BUG]  [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION))  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
224	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
225	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
226	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
227	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  otherName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  otherName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  otherName);	  aughtExceptionHandler.handleEquals(otherComment,    myComment);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
228	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  myComment,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  myComment,  null);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  myComment,  null);	  aughtExceptionHandler.handleEquals(otherComment,    myComment);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
229	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
230	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.toString());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
231	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
232	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getClass());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getClass());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
233	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
234	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
235	[BUG]  [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
236	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||!myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||!myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null  ||!myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
237	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
238	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
239	[BUG]  [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
240	[BUG]  [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
241	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
242	[BUG]  [BUGGY]  return  myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());	  [Delete]    	non-compiled	[CE]  <identifier>  expected	15	None	replace
243	[BUG]  [BUGGY]  return  myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  myComment.equals(otherComment.getName());	  [Delete]    	non-compiled	[CE]  <identifier>  expected	15	None	replace
244	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getKey());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getKey());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getKey());	  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
245	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(otherComment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	Thread.currentThread().setContextClassLoader(otherComment);	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
246	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
247	[BUG]  [BUGGY]  oricarn(otherComment)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricarn(otherComment)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricarn(otherComment)  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
248	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
249	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
250	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
251	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  otherComment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ",  otherComment);	  aughtExceptionHandler.throwAsSertionError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
252	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ".getMessage(),  myComment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ".getMessage(),  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ".getMessage(),  myComment);	  aughtExceptionHandler.throwAsSertionError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
253	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ".getMessage(),  otherComment);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ".getMessage(),  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry ".getMessage(),  otherComment);	  aughtExceptionHandler.throwAsSertionError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
254	[BUG]  [BUGGY]  parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
255	[BUG]  [BUGGY]  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
256	[BUG]  [BUGGY]  try  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
257	[BUG]  [BUGGY]  parent  ==  null  &&!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  &&!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  &&!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
258	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||!parent.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
259	[BUG]  [BUGGY]  parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||!myComment.equals(otherComment))  {  return  false;	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
260	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nsse)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  [Delete]  catch(NoSuchElementException  nsse)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  [Delete]  catch(NoSuchElementException  nsse)  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
261	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
262	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
263	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
264	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getClass()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getClass()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getClass()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
265	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  else  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  else  if(!myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  else  if(!myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
266	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getString());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
267	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength()  +  1);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength()  +  1);	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getLength());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
268	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
269	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
270	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
271	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  myComment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingException( " ",  myComment);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
272	[BUG]  [BUGGY]  try  >>  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  >>  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  >>  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
273	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toLowerCase());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toLowerCase());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toLowerCase());	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
274	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(myComment.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(myComment.getName());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
275	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(myComment.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(myComment.getName());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
276	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(otherComment.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(otherComment.getName());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
277	[BUG]  [BUGGY]  return  false  :  otherComment.equals(myComment.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  false  :  otherComment.equals(myComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  false  :  otherComment.equals(myComment.getName());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
278	[BUG]  [BUGGY]  return(otherComment  ==  null)?  true  :  otherComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  true  :  otherComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  true  :  otherComment.equals(otherComment.getName());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
279	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(myComment.toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(myComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(myComment.toString());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
280	[BUG]  [BUGGY]  return(myComment!=  null)?  true  :  otherComment.equals(myComment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment!=  null)?  true  :  otherComment.equals(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)?  true  :  otherComment.equals(myComment);	  return(otherComment!=    null)?    true    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
281	[BUG]  [BUGGY]  return(myComment!=  null)?  true  :  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment!=  null)?  true  :  otherComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)?  true  :  otherComment.equals(otherComment);	  return(otherComment!=    null)?    true    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
282	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;	  if(otherComment!=    null)return    false;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
283	[BUG]  [BUGGY]  if(otherComment!=  null)return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  true;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  true;	  if(otherComment!=    null)return    false;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
284	[BUG]  [BUGGY]  return  super.equals(otherComment)||!myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)||!myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)||!myComment.equals(otherComment);	  return    super.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
285	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);	  return    super.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
286	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equals(otherComment.toString());	  return    super.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
287	[BUG]  [BUGGY]  return(otherComment  ==  null)&&!myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)&&!myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)&&!myComment.equals(otherComment.getName());	  return(otherComment!=    null)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
288	[BUG]  [BUGGY]  return(otherComment!=  null)&&!myComment.equals(otherComment.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)&&!myComment.equals(otherComment.getQualifiedName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)&&!myComment.equals(otherComment.getQualifiedName());	  return(otherComment!=    null)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
289	[BUG]  [BUGGY]  return(otherComment!=  null)&&!myComment.equals(otherComment.getKey());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)&&!myComment.equals(otherComment.getKey());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)&&!myComment.equals(otherComment.getKey());	  return(otherComment!=    null)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
290	[BUG]  [BUGGY]  return(myComment!=  null)&&!myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment!=  null)&&!myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)&&!myComment.equals(otherComment.getName());	  return(otherComment!=    null)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
291	[BUG]  [BUGGY]  return(myComment!=  null)?  false  :  otherComment.equals(myName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment!=  null)?  false  :  otherComment.equals(myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment!=  null)?  false  :  otherComment.equals(myName);	  return(otherComment!=    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
292	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(entryName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(entryName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(entryName);	  return(otherComment!=    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
293	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getQualifiedName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getQualifiedName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getQualifiedName());	  return!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
294	[BUG]  [BUGGY]  return!myComment.equals(otherComment.toString());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.toString());	  return!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
295	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getName());	  return!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
296	[BUG]  [BUGGY]  return(otherComment  ==  null)?  true  :  otherComment.equals(entryName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  true  :  otherComment.equals(entryName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  true  :  otherComment.equals(entryName);	  return(otherComment    ==    null)?    false    :    otherComment.equals(entryName);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
297	[BUG]  [BUGGY]  return(entryName  ==  null)?  false  :  otherComment.equals(entryName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(entryName  ==  null)?  false  :  otherComment.equals(entryName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(entryName  ==  null)?  false  :  otherComment.equals(entryName);	  return(otherComment    ==    null)?    false    :    otherComment.equals(entryName);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
298	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
299	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
300	[BUG]  [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment  ==  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
301	[BUG]  [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
302	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getQualifiedName())&&!myComment.equals(otherComment.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getQualifiedName())&&!myComment.equals(otherComment.getQualifiedName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getQualifiedName())&&!myComment.equals(otherComment.getQualifiedName());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
303	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.VAR)  {  return  false;	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.VAR)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
304	[BUG]  [BUGGY]  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.VAR)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
305	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  &&  otherComment.getType()  ==  Token.VAR)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.VAR)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
306	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.VAR)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.VAR)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()!=  Token.VAR)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.VAR)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
307	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.VAR)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
308	[BUG]  [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  (otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.VAR)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.VAR)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
309	[BUG]  [BUGGY]  oricarors.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricarors.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricarors.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
310	[BUG]  [BUGGY]  ||  other.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  other.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  other.getName().equals(myName))  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
311	[BUG]  [BUGGY]  if(otherComment.getName().equals(entryName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getName().equals(entryName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getName().equals(entryName))  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
312	[BUG]  [BUGGY]  oricaror(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricaror(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricaror(otherComment.getName()))  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
313	[BUG]  [BUGGY]  oricard  <  otherComment.getName())  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricard  <  otherComment.getName())  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricard  <  otherComment.getName())  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
314	[BUG]  [BUGGY]  return(myComment  ==  null)?  true  :  otherComment.equals(myComment);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  true  :  otherComment.equals(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  true  :  otherComment.equals(myComment);	  return(otherComment    ==    null)?    true    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
315	[BUG]  [BUGGY]  return(myComment  ==  null)?  true  :  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  true  :  otherComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  true  :  otherComment.equals(otherComment);	  return(otherComment    ==    null)?    true    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
316	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry  <  String>());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry  <  String>());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry  <  String>());	  aughtExceptionHandler.handleEquals(otherComment,    null);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
317	[BUG]  [BUGGY]  rim().equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  rim().equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	rim().equals(otherComment.getName()))  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
318	[BUG]  [BUGGY]  if(otherComment.getName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getName()!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getName()!=  null)  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
319	[BUG]  [BUGGY]  parent!=  otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent!=  otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent!=  otherComment.getName().equals(myName))  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
320	[BUG]  [BUGGY]  ||  otherComment.getName().equals(myName))  {  return  false;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  ||  otherComment.getName().equals(myName))  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	||  otherComment.getName().equals(myName))  {  return  false;	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
321	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.BLOCK)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
322	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment  >=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment  >=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment  >=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
323	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName()  +  1);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName()  +  1);	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
324	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(myComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.equals(myComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  otherComment.equals(myComment))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
325	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(myComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(myComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.equals(myComment))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
326	[BUG]  [BUGGY]  parent  ==  null  &&  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  &&  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  &&  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
327	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry  <  Object>());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry  <  Object>());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry  <  Object>());	  return(otherComment!=    null)?    false    :    otherComment.equals(obj);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
328	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(otherComment.getName());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
329	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.toString());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
330	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(this.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(this.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(this.getName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
331	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(otherComment.getName());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
332	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(null);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(null);	  return(otherComment    ==    null)?    false    :    otherComment.equals(null);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
333	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null)||  otherComment.getName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null)||  otherComment.getName()!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null)||  otherComment.getName()!=  null)  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(null))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
334	[BUG]  [BUGGY]  parent  ==  null  &&  otherComment!=  null;  else  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  &&  otherComment!=  null;  else  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  &&  otherComment!=  null;  else  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
335	[BUG]  [BUGGY]  return  super.equals(obj);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(obj);	  return    super.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
336	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
337	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName(),  otherComment.getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName(),  otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(otherComment.getName(),  otherComment.getName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
338	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()!=  Token.FUNCTION)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
339	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  otherComment.toString());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    otherComment.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
340	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment!=  null;  if(otherComment.getName().equals(name))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment!=  null;  if(otherComment.getName().equals(name))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment!=  null;  if(otherComment.getName().equals(name))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(name))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
341	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  false);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  false);  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  false);  }	  aughtExceptionHandler.handleEquals(otherComment,    false);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
342	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  false);  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  false);  }  else  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  false);  }  else  {  return  false;  }	  aughtExceptionHandler.handleEquals(otherComment,    false);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
343	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals( " "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals( " "))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName().equals( " "))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
344	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment!=  null;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment!=  null;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment!=  null;  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
345	[BUG]  [BUGGY]  parent  ==  null;  if(otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null;  if(otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null;  if(otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
346	[BUG]  [BUGGY]  parent!=  null;  if(otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent!=  null;  if(otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent!=  null;  if(otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
347	[BUG]  [BUGGY]  return(obj  ==  null)?  false  :  otherComment.equals(obj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(obj  ==  null)?  false  :  otherComment.equals(obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(obj  ==  null)?  false  :  otherComment.equals(obj);	  return(otherComment    ==    null)?    false    :    otherComment.equals(obj);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
348	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
349	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(myName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(myName);	  return(otherComment    ==    null)?    false    :    otherComment.equalsIgnoreCase(myName);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
350	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(obj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(obj);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(obj);	  return(otherComment    ==    null)?    false    :    otherComment.equalsIgnoreCase(myName);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
351	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }	  aughtExceptionHandler.handleMissingName(otherComment);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
352	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(otherComment,  false);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingName(otherComment,  false);	  aughtExceptionHandler.handleMissingName(otherComment);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
353	[BUG]  [BUGGY]  tries  |=  Arrays.asList(extraFields))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  |=  Arrays.asList(extraFields))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  |=  Arrays.asList(extraFields))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
354	[BUG]  [BUGGY]  tries  |=  Arrays.asList(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  |=  Arrays.asList(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  |=  Arrays.asList(otherComment))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
355	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.equals(otherComment);	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
356	[BUG]  [BUGGY]  parent  ==  (parent  ==  null)?  null  :  parent.getParent();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  (parent  ==  null)?  null  :  parent.getParent();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  (parent  ==  null)?  null  :  parent.getParent();	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
357	[BUG]  [BUGGY]  tries  |=  Arrays.asList(otherComment);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  |=  Arrays.asList(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  |=  Arrays.asList(otherComment);	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
358	[BUG]  [BUGGY]  parent  ==  null  &&  otherComment!=  null;  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  &&  otherComment!=  null;  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  &&  otherComment!=  null;  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
359	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment!=  null;  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment!=  null;  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment!=  null;  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
360	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
361	[BUG]  [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
362	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(myComment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(myComment);	  return(myComment!=    null)?    false    :    otherComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
363	[BUG]  [BUGGY]  try  {  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
364	[BUG]  [BUGGY]  if(otherComment.getEmptyName()!=  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getEmptyName()!=  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getEmptyName()!=  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }	  aughtExceptionHandler    <    String>equals(otherComment.getEmptyName())&&    otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
365	[BUG]  [BUGGY]  if(otherComment.getEmptyName()  ==  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getEmptyName()  ==  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getEmptyName()  ==  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }	  aughtExceptionHandler    <    String>equals(otherComment.getEmptyName())&&    otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
366	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())&&  otherComment!=  null)  {  return  false;  }	  aughtExceptionHandler    <    String>equals(otherComment.getEmptyName())&&    otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
367	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getName())&&  otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getName())&&  otherComment!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>equals(otherComment.getName())&&  otherComment!=  null)  {  return  false;  }	  aughtExceptionHandler    <    String>equals(otherComment.getEmptyName())&&    otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
368	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
369	[BUG]  [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(obj))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null  ||  otherComment.getName().equals(obj))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  otherComment.getName().equals(obj))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
370	[BUG]  [BUGGY]  if(otherComment!=  null  ||  myComment.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null  ||  myComment.getName().equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||  myComment.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
371	[BUG]  [BUGGY]  return!extraFields.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!extraFields.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!extraFields.equals(otherComment)&&!myComment.equalsIgnoreCase(otherComment);	  return!extraFields.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
372	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.toString();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.toString();	  return(otherComment    ==    null)?    false    :    otherComment.equals(entryName);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
373	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  otherComment,  myComment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  otherComment,  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  otherComment,  myComment);	  aughtExceptionHandler.throwAsSertionError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
374	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  otherComment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  otherComment);	  aughtExceptionHandler.throwAsSertionError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
375	[BUG]  [BUGGY]  return!otherComment.equals(myComment)&&!myComment.equals(otherComment.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!otherComment.equals(myComment)&&!myComment.equals(otherComment.getQualifiedName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!otherComment.equals(myComment)&&!myComment.equals(otherComment.getQualifiedName());	  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
376	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler();  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    getExceptionHandler();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
377	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(myComment);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(myComment);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    getExceptionHandler();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
378	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(0);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(0);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    getExceptionHandler();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
379	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
380	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
381	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
382	[BUG]  [BUGGY]  parent  ==  null  &&  otherComment!=  null;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  &&  otherComment!=  null;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  &&  otherComment!=  null;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
383	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment!=  null;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment!=  null;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment!=  null;  else  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
384	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  otherComment,  myComment);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  otherComment,  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  otherComment,  myComment);	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
385	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  otherComment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  otherComment);	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
386	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  new  ZipArchiveEntry());	  aughtExceptionHandler.handleEquals(otherComment,    myComment);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
387	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  getName());	  aughtExceptionHandler.handleEquals(otherComment,    myComment);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
388	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(otherComment.getName()!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(otherComment.getName()!=  null)  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
389	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ExceptionHandler  <  String>(myComment.toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ExceptionHandler  <  String>(myComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ExceptionHandler  <  String>(myComment.toString());	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
390	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  e.getExceptionHandler();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  e.getExceptionHandler();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  e.getExceptionHandler();	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
391	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ThrowableHandler  <  String>(otherComment.getClass());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ThrowableHandler  <  String>(otherComment.getClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ThrowableHandler  <  String>(otherComment.getClass());	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
392	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ThrowableHandler  <  String>(this,  otherComment.getClass());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ThrowableHandler  <  String>(this,  otherComment.getClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  ThrowableHandler  <  String>(this,  otherComment.getClass());	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
393	[BUG]  [BUGGY]  if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()!=  Token.NAME  &&  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
394	[BUG]  [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  b);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEquals(otherComment,  b);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleEquals(otherComment,  b);	  aughtExceptionHandler.handleEquals(otherComment,    obj);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
395	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getClass()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getClass()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getClass()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getClass()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
396	[BUG]  [BUGGY]  return  super.equals(obj)&&!myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(obj)&&!myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(obj)&&!myComment.equals(otherComment);	  return    super.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
397	[BUG]  [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	While(otherComment!=  null)  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
398	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getName()))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getName()))  {  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getName()))  {	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
399	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(otherComment);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aught(new  IllegalArgumentException( " ")).initCause(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aught(new  IllegalArgumentException( " ")).initCause(otherComment);	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
400	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getClass()))  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getClass()))  {  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getClass()))  {	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
401	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.toString()))  {  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.toString()))  {  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.toString()))  {	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
402	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getType()))  {  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getType()))  {  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  otherComment.getType()))  {	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
403	[BUG]  [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  myComment))  {  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  myComment))  {  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aught(IllegalArgumentException.DEFAULT_EXTERN_ERROR,  myComment))  {	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
404	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(mean))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
405	[BUG]  [BUGGY]  if(otherComment  >=  null)return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  >=  null)return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  >=  null)return  false;	  if(otherComment!=    null)return    false;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
406	[BUG]  [BUGGY]  if(otherComment!=  null)turn  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)turn  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)turn  false;	  if(otherComment!=    null)return    false;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
407	[BUG]  [BUGGY]  parent  ==  null;  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null;  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null;  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
408	[BUG]  [BUGGY]  parent  ==  null;  if(otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null;  if(otherComment!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null;  if(otherComment!=  null)  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
409	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment  ==  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment  ==  null)  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
410	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()  ==  Token.GETELEM)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()  ==  Token.GETELEM)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.GETPROP  ||  otherComment.getType()  ==  Token.GETELEM)  {  return  false;  }	  if(otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
411	[BUG]  [BUGGY]  allowSideEquals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  allowSideEquals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	allowSideEquals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
412	[BUG]  [BUGGY]  allowEquals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  allowEquals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	allowEquals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
413	[BUG]  [BUGGY]  allowSideEquals(otherComment,  false))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  allowSideEquals(otherComment,  false))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	allowSideEquals(otherComment,  false))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
414	[BUG]  [BUGGY]  allowEquals(otherComment,  false))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  allowEquals(otherComment,  false))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	allowEquals(otherComment,  false))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
415	[BUG]  [BUGGY]  allowEquals(otherComment,  obj))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  allowEquals(otherComment,  obj))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	allowEquals(otherComment,  obj))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
416	[BUG]  [BUGGY]  allowSideEquals(otherComment,  obj))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  allowSideEquals(otherComment,  obj))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	allowSideEquals(otherComment,  obj))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
417	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.getName().equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.getName().equals(otherName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
418	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    myComment.toString());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
419	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    myComment.toString());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
420	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toLowerCase();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toLowerCase();	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
421	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  String[]  {  }  );  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(new  String[]  {  }  );	  return(otherComment!=    null)?    false    :    otherComment.equals(null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
422	[BUG]  [BUGGY]  return!otherComment.equals(myComment)&&!extraFields.equals(otherName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!otherComment.equals(myComment)&&!extraFields.equals(otherName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!otherComment.equals(myComment)&&!extraFields.equals(otherName);	  return!myComment.equals(otherComment)&&!extraFields.equals(otherName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
423	[BUG]  [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getClass());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return  super.equals(otherComment)&&!myComment.equals(otherComment.getClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  super.equals(otherComment)&&!myComment.equals(otherComment.getClass());	  return    super.equals(otherComment)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
424	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
425	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(otherComment.getName(),  otherComment.getName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(otherComment.getName(),  otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(otherComment.getName(),  otherComment.getName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
426	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
427	[BUG]  [BUGGY]  return!myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	15	None	replace
428	[BUG]  [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.getName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  null  :  otherComment.getName();  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  null  :  otherComment.getName();	  [Delete]    	non-compiled	[CE]  <identifier>  expected	15	None	replace
429	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  otherComment);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingException( " ",  otherComment);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
430	[BUG]  [BUGGY]  parent!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent!=  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
431	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment!=  null;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment!=  null;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment!=  null;  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)turn    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
432	[BUG]  [BUGGY]  if(otherComment!=  null)  {  return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  return  false;  }  else  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
433	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getName(),  otherComment);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getName(),  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ".getName(),  otherComment);	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    otherComment);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
434	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
435	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null  ||  otherComment.equals(myComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null  ||  otherComment.equals(myComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null  ||  otherComment.equals(myComment))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
436	[BUG]  [BUGGY]  parent  ==  null  ||  parent.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  parent.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  parent.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
437	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.equals(myName))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
438	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null  ||  otherComment.equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null  ||  otherComment.equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null  ||  otherComment.equals(myName))  {  return  false;  }	  if(otherComment!=    null    ||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
439	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getClass());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getClass());	  return!myComment.equals(otherComment.getName())&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
440	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  myName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName(),  myName);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
441	[BUG]  [BUGGY]  if(otherComment.getName()!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getName()!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getName()!=  null)  {  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getName(),  otherComment.getName());  }	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
442	[BUG]  [BUGGY]  return!myComment.equals(otherComment.getKey());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment.getKey());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment.getKey());	  return!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	112	None	replace
443	[BUG]  [BUGGY]  return(otherComment  ==  null)?  0  :  otherComment.equalsIgnoreCase(myName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  0  :  otherComment.equalsIgnoreCase(myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  0  :  otherComment.equalsIgnoreCase(myName);	  return(otherComment    ==    null)?    false    :    otherComment.equalsIgnoreCase(myName);    	non-compiled	[CE]  <identifier>  expected	117	None	replace
444	[BUG]  [BUGGY]  try  ==  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment  ==  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
445	[BUG]  [BUGGY]  try  {  if(otherComment!=  null)return  true;  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment!=  null)return  true;  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment!=  null)return  true;  if(otherComment.getName().equals(myName))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
446	[BUG]  [BUGGY]  if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
447	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null  ||  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
448	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(myComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(myComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null  ||  otherComment.equals(myComment))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
449	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null  ||  otherComment.equals(myName))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
450	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment.getName()))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
451	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
452	[BUG]  [BUGGY]  While(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  While(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	While(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
453	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment)||  myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment)||    myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
454	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry());	  return(otherComment!=    null)?    false    :    otherComment.equals(null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
455	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry(null));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry(null));  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(new  ZipArchiveEntry(null));	  return(otherComment!=    null)?    false    :    otherComment.equals(null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
456	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
457	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equalsIgnoreCase(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
458	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment)||  otherComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
459	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(mean))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(mean))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
460	[BUG]  [BUGGY]  return(myComment  ==  null)?  false  :  myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)?  false  :  myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)?  false  :  myComment.equals(otherComment.getName());	  return(myComment    ==    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
461	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(!myComment.equals(otherComment)||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
462	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(!myComment.equalsIgnoreCase(otherComment))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
463	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getClass()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getClass()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
464	[BUG]  [BUGGY]  if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
465	[BUG]  [BUGGY]  if(otherComment  >=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  >=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  >=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
466	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.FUNCTION)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
467	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.FUNCTION  ||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.FUNCTION  ||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.FUNCTION  ||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
468	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(null))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(null))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
469	[BUG]  [BUGGY]  while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
470	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
471	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.getKey());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.getKey());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(otherComment.getKey());	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
472	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  entryName,  myComment);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  entryName,  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry "  +  entryName,  myComment);	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
473	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment,  myComment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment,  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  otherComment,  myComment);	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
474	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)  {  return  false;  }  while(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)  {  return  false;  }  while(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)  {  return  false;  }  while(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null)turn    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
475	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(myComment,  otherComment);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(myComment,  otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.handleMissingName(myComment,  otherComment);	  if(otherComment    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
476	[BUG]  [BUGGY]  return(otherComment!=  null)?  true  :  otherComment.equals(myName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  true  :  otherComment.equals(myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  true  :  otherComment.equals(myName);	  return(otherComment!=    null)?    false    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
477	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  entryName,  myComment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  entryName,  myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionError( "msg.bad.other.entry "  +  entryName,  myComment);	  aughtExceptionHandler.throwAsSertionError(   "msg.bad.other.entry   ",    myComment);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
478	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null  ||  myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null  ||  myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
479	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.getName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.getName()!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null  ||  otherComment.getName()!=  null)  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
480	[BUG]  [BUGGY]  if(otherComment  ==  null  ||  otherComment.getName()!=  null)return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null  ||  otherComment.getName()!=  null)return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null  ||  otherComment.getName()!=  null)return  false;	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
481	[BUG]  [BUGGY]  if(otherComment  ==  null)return  false;  if(myName.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)return  false;  if(myName.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)return  false;  if(myName.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myName.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
482	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(myName);	  return(otherComment    ==    null)?    true    :    otherComment.equals(myName);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
483	[BUG]  [BUGGY]  tries  ||  otherComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||  otherComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||  otherComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
484	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.equals(parent))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.equals(parent))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.equals(parent))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
485	[BUG]  [BUGGY]  tries  ||  otherComment.equals(otherComment.getKey()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||  otherComment.equals(otherComment.getKey()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||  otherComment.equals(otherComment.getKey()))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
486	[BUG]  [BUGGY]  tries  ||  otherComment.equals(otherComment.getEntryName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||  otherComment.equals(otherComment.getEntryName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||  otherComment.equals(otherComment.getEntryName()))  {  return  false;  }	  if(otherComment.equals(myComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
487	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
488	[BUG]  [BUGGY]  return(myComment  ==  null)&&!myComment.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(myComment  ==  null)&&!myComment.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(myComment  ==  null)&&!myComment.equals(otherComment.getName());	  return(otherComment!=    null)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
489	[BUG]  [BUGGY]  return(otherComment!=  null)&&!myComment.equals(otherComment.getClass());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)&&!myComment.equals(otherComment.getClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)&&!myComment.equals(otherComment.getClass());	  return(otherComment!=    null)&&!myComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
490	[BUG]  [BUGGY]  if(otherComment.getType()  >=  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  >=  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  >=  Token.NAME  ||  otherComment.getType()!=  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()!=    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
491	[BUG]  [BUGGY]  while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
492	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
493	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
494	[BUG]  [BUGGY]  While(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  While(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	While(otherComment!=  null)  {  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
495	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  true;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null)return  true;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null)return  true;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
496	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName())||!myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
497	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName())||  otherComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName())||  otherComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  else  if(myComment.equals(otherComment.getName())||  otherComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    else    if(myComment.equals(otherComment.getName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
498	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim()  +  1);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim()  +  1);	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.trim());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
499	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(mock);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(mock);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(mock);	  return(otherComment!=    null)?    false    :    otherComment.equals(obj);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
500	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(comment);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(comment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(comment);	  return(otherComment!=    null)?    false    :    otherComment.equals(obj);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
501	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.SCRIPT)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.SCRIPT)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.SCRIPT)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
502	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.CALL)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.CALL)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.CALL)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
503	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null  ||  otherComment.getName().equals(myName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null  ||  otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null  ||  otherComment.getName().equals(myName))  {  return  false;  }	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
504	[BUG]  [BUGGY]  parent  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  null  ||  otherComment.getName().equals(myName))  {  return  false;	  if(otherComment!=    null    ||    otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
505	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())||  otherComment!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())||  otherComment!=  null)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>equals(otherComment.getEmptyName())||  otherComment!=  null)  {  return  false;  }	  aughtExceptionHandler    <    String>equals(otherComment.getEmptyName())&&    otherComment!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
506	[BUG]  [BUGGY]  [Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  [Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	[Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
507	[BUG]  [BUGGY]  >>  [Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  >>  [Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	>>  [Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
508	[BUG]  [BUGGY]  >=  [Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  >=  [Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	>=  [Delete]  else  if(otherComment!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
509	[BUG]  [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.equals(otherComment.getName())))  {  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||(otherComment!=  null  &&  otherComment.equals(otherComment.getName())))  {  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||(otherComment!=  null  &&  otherComment.equals(otherComment.getName())))  {	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
510	[BUG]  [BUGGY]  >>  [Delete]  else  if(otherComment  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  >>  [Delete]  else  if(otherComment  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	>>  [Delete]  else  if(otherComment  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
511	[BUG]  [BUGGY]  [Delete]  else  if(otherComment  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  [Delete]  else  if(otherComment  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	[Delete]  else  if(otherComment  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
512	[BUG]  [BUGGY]  return!extraFields.equals(myComment)&&!myComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!extraFields.equals(myComment)&&!myComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!extraFields.equals(myComment)&&!myComment.equals(otherComment);	  return!extraFields.equals(otherComment)&&!myComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
513	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  obj);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  obj);  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  obj);  }	  aughtExceptionHandler.handleEquals(otherComment,    obj);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
514	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  obj);  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  obj);  }  else  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler.handleEquals(otherComment,  obj);  }  else  {  return  false;  }	  aughtExceptionHandler.handleEquals(otherComment,    obj);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
515	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(2,  otherComment.length()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(2,  otherComment.length()));  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(2,  otherComment.length()));	  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.substring(1));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
516	[BUG]  [BUGGY]  tries.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
517	[BUG]  [BUGGY]  oricarors.equals(otherComment.getName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  oricarors.equals(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	oricarors.equals(otherComment.getName());	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
518	[BUG]  [BUGGY]  parent!=  (otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent!=  (otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent!=  (otherComment.getName()))  {  return  false;  }	  if(otherComment.getName().equals(myName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
519	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(otherComment);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equalsIgnoreCase(otherComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
520	[BUG]  [BUGGY]  return(otherComment!=  null)?  null  :  otherComment.equals(myComment);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  null  :  otherComment.equals(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  null  :  otherComment.equals(myComment);	  return(otherComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
521	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equalsIgnoreCase(myComment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equalsIgnoreCase(myComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equalsIgnoreCase(myComment);	  return(otherComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
522	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equalsIgnoreCase(otherComment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equalsIgnoreCase(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equalsIgnoreCase(otherComment);	  return(otherComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
523	[BUG]  [BUGGY]  while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null  &&  otherComment.equals(myComment))  {  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
524	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(myComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
525	[BUG]  [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	while(otherComment!=  null)  {  if(otherComment!=  null  ||  myComment.equals(otherComment))  {  return  true;  }	  while(otherComment!=    null)    {    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
526	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.GETPROP)  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.GETPROP)  {  return  true;  }	  if(otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
527	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(otherComment);	  return(myComment    ==    null)?    null    :    otherComment.equals(myComment);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
528	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getSize()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.equals(otherComment.getSize()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
529	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment.getName());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment.getName());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    getExceptionHandler();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
530	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment.getClass());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment.getClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  getExceptionHandler(otherComment.getClass());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    getExceptionHandler();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
531	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(otherComment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equalsIgnoreCase(otherComment);	  return(otherComment!=    null)?    false    :    otherComment.equals(otherComment);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
532	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment.getName()))  {  return  true;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
533	[BUG]  [BUGGY]  if(otherComment!=  null  ||!myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null  ||!myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null  ||!myComment.equals(otherComment.getName()))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(!myComment.equals(otherComment.getName()))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
534	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString(),  otherComment.toString());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString(),  otherComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myComment.toString(),  otherComment.toString());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString(),    myComment.toString());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
535	[BUG]  [BUGGY]  if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  >=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  if(otherComment    ==    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
536	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.VAR  ||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.VAR  ||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.VAR  ||  otherComment.getType()  ==  Token.NAME)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.VAR)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
537	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equals(otherName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  false  :  myComment.equals(otherName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  myComment.equals(otherName);	  return(otherComment    ==    null)?    false    :    otherComment.equals(entryName);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
538	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(name))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(name))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
539	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.getName().equals(name))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.getName().equals(name))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.getName().equals(name))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(name))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
540	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
541	[BUG]  [BUGGY]  if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
542	[BUG]  [BUGGY]  if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
543	[BUG]  [BUGGY]  if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.equals(myComment))  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
544	[BUG]  [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.toString());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  null  :  otherComment.equals(myComment.toString());	  return(myComment    ==    null)?    null    :    otherComment.equals(otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
545	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  myName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  myName);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
546	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  this);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  this);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  this);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
547	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  mySpace);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  mySpace);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedErrorHandler  <  String>(myComment.getName(),  otherComment.getName(),  mySpace);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedErrorHandler    <    String>(myComment.getName(),    otherComment.getName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
548	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETELEM)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETELEM)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETELEM)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
549	[BUG]  [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  true;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
550	[BUG]  [BUGGY]  otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.GETPROP)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.GETPROP)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
551	[BUG]  [BUGGY]  try  {  if(otherComment!=  null)return  true;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment!=  null)return  true;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment!=  null)return  true;  if(myComment.equals(otherComment))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
552	[BUG]  [BUGGY]  try  ==  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	  try    ==    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
553	[BUG]  [BUGGY]  tries  ||  otherComment.equals(otherComment.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||  otherComment.equals(otherComment.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||  otherComment.equals(otherComment.getName()))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
554	[BUG]  [BUGGY]  tries  ||!myComment.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||!myComment.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||!myComment.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
555	[BUG]  [BUGGY]  tries  ||  otherComment.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||  otherComment.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||  otherComment.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
556	[BUG]  [BUGGY]  tries  ||  otherComment.equals(otherComment.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||  otherComment.equals(otherComment.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||  otherComment.equals(otherComment.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
557	[BUG]  [BUGGY]  tries  ||  otherComment.equals(myComment))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries  ||  otherComment.equals(myComment))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries  ||  otherComment.equals(myComment))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
558	[BUG]  [BUGGY]  tries.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  tries.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	tries.equals(otherComment))  {  throw  new  IllegalArgumentException( " ");  }	  if(otherComment.equals(myComment))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
559	[BUG]  [BUGGY]  try  ==  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment  ==  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	  try    ==    if(otherComment!=    null)return    false;    if(myComment.equals(otherComment))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
560	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
561	[BUG]  [BUGGY]  try  {  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  {  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  {  if(otherComment!=  null  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
562	[BUG]  [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
563	[BUG]  [BUGGY]  parent!=  null  &&!myComment.equals(otherComment))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent!=  null  &&!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent!=  null  &&!myComment.equals(otherComment))  {  return  false;  }	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
564	[BUG]  [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	parent  ==  otherComment  ||!myComment.equals(otherComment))  {  return  false;	  if(otherComment!=    null    ||!myComment.equals(otherComment))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
565	[BUG]  [BUGGY]  return(otherComment  ==  null)?  0  :  otherComment.equals(otherComment);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  return(otherComment  ==  null)?  0  :  otherComment.equals(otherComment);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  0  :  otherComment.equals(otherComment);	  return(otherComment    ==    null)?    false    :    otherComment.equals(obj);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
566	[BUG]  [BUGGY]  &&  otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  &&  otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	&&  otherComment.getType()  ==  Token.NAME  ||  otherComment.getType()  ==  Token.BLOCK)  {  return  false;  }	  if(otherComment.getType()    ==    Token.NAME    ||    otherComment.getType()    ==    Token.BLOCK)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
567	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  new  String[]  {  otherComment  }  );  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  new  String[]  {  otherComment  }  );  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler.throwAsSertionFailedError( "msg.bad.other.entry ",  new  String[]  {  otherComment  }  );	  aughtExceptionHandler.throwAsSertionFailedError(   "msg.bad.other.entry   ",    otherComment);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
568	[BUG]  [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }  else  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }  else  {  return  false;  }	  aughtExceptionHandler.handleMissingName(otherComment);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
569	[BUG]  [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment  ==  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment  ==  null)  {  aughtExceptionHandler.handleMissingName(otherComment);  }	  aughtExceptionHandler.handleMissingName(otherComment);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
570	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(myComment.getName().equals(otherName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(myComment.getName().equals(otherName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
571	[BUG]  [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	try  ==  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(entryName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(entryName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
572	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.getName().equals(entryName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.getName().equals(entryName))  {  return  false;  }  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.getName().equals(entryName))  {  return  false;  }	  if(otherComment!=    null)return    false;    if(otherComment.getName().equals(entryName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
573	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myName);  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.toString(),  myName);	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
574	[BUG]  [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getClass());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {      [BUGGY]  aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getClass());  [BUGGY]      }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	aughtExceptionHandler  <  String>thrownExceptionHandler  =  new  AssertionFailedExceptionHandler  <  String>(myComment.getClass());	  aughtExceptionHandler    <    String>thrownExceptionHandler    =    new    AssertionFailedExceptionHandler    <    String>(myComment.toString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
