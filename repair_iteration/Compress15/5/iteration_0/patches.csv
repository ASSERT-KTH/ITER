bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  true;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return  true;  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return  true;	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
2	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(!myComment.equals(otherComment))  {  return  false;  }	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
3	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  false;  }	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
4	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  false;  }	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
5	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment.getName()))  {  return  true;  }	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
6	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(otherComment.getName().equals(myName))  {  return  false;  }	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
7	[BUG]  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)return  false;  if(myComment.equals(otherComment))  {  return  true;  }	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
8	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]                  AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]    [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	  	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
9	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getName());  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getName());  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getName());	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
10	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment);  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment);  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment);	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
11	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment);  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment);  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!myComment.equals(otherComment);	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
12	[BUG]  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)||!myComment.equals(otherComment.getName());	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
13	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!extraFields.equals(otherComment);  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return!myComment.equals(otherComment)&&!extraFields.equals(otherComment);  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!extraFields.equals(otherComment);	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
14	[BUG]  [BUGGY]  if(otherComment!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  if(otherComment!=  null)  {  return  false;  }  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	if(otherComment!=  null)  {  return  false;  }	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
15	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(myComment);  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(myComment);  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(myComment);	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
16	[BUG]  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(myComment);  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return(otherComment!=  null)?  false  :  otherComment.equals(myComment);  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment!=  null)?  false  :  otherComment.equals(myComment);	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
17	[BUG]  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(myName);  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return(otherComment  ==  null)?  false  :  otherComment.equals(myName);  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return(otherComment  ==  null)?  false  :  otherComment.equals(myName);	return  false;  	non-compiled	[CE]  ';'  expected	9	None	replace
18	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSize());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSize());  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.getSize());	return  false;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  if  (otherName  !=  null)  {  return  false;  }  }  else  if  (!myName.equals(otherName))  {  return  false;  }  String  myComment  =  getComment();  String  otherComment  =  other.getComment();  if  (myComment  ==  null)  {  if  (otherComment  !=  null)  {  [BUGGY]  return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString());  [BUGGY]  }  }  else  if  (!myComment.equals(otherComment))  {  return  false;  }  return  getTime()  ==  other.getTime()  &&  getInternalAttributes()  ==  other.getInternalAttributes()  &&  getPlatform()  ==  other.getPlatform()  &&  getExternalAttributes()  ==  other.getExternalAttributes()  &&  getMethod()  ==  other.getMethod()  &&  getSize()  ==  other.getSize()  [CLASS]  ZipArchiveEntry  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  byte[]  b  extra  rawName  boolean  ZipArchiveEntry  other  Object  obj  String  entryName  myComment  myName  name  otherComment  otherName  GeneralPurposeBit  b  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress15/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	670	670	1	replace	return!myComment.equals(otherComment)&&!myComment.equals(otherComment.toString());	return  false;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
