bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unknown  arg ");  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    System.err.println( "Unknown  arg ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
22	[BUG]  [BUGGY]    System.err.println( "Unknown  arg ");  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unknown  arg ");  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    System.err.println( "Unknown  arg ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    if(args.length!=  1)  {  printUsage();  }  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    if(args.length!=  1)  {  printUsage();  }		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
24	[BUG]  [BUGGY]    if(args.length!=  1)  {  printUsage();  }  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    if(args.length!=  1)  {  printUsage();  }  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    if(args.length!=  1)  {  printUsage();  }		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unknown  arg "  +  args);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    System.err.println( "Unknown  arg "  +  args);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
25	[BUG]  [BUGGY]    System.err.println( "Unknown  arg "  +  args);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unknown  arg "  +  args);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    System.err.println( "Unknown  arg "  +  args);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unknown  arg "  +  args.length);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    System.err.println( "Unknown  arg "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
26	[BUG]  [BUGGY]    System.err.println( "Unknown  arg "  +  args.length);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unknown  arg "  +  args.length);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    System.err.println( "Unknown  arg "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  ZoneInfoCompiler()  {  [BUGGY]    super();  [BUGGY]  iRuleSets  =  new  HashMap<String,  RuleSet>();  iZones  =  new  ArrayList<Zone>();  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	355	355	1	add	    super();		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	11	1	add
72	[BUG]  [BUGGY]    super();  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  ZoneInfoCompiler()  {  [BUGGY]    super();  [BUGGY]  iRuleSets  =  new  HashMap<String,  RuleSet>();  iZones  =  new  ArrayList<Zone>();  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	355	355	1	replace	    super();		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	11	1	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  ZoneInfoCompiler()  {  [BUGGY]    super();  iRuleSets  =  new  HashMap  <  String,  RuleSet>();  [BUGGY]  iRuleSets  =  new  HashMap<String,  RuleSet>();  iZones  =  new  ArrayList<Zone>();  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	355	355	1	add	    super();  iRuleSets  =  new  HashMap  <  String,  RuleSet>();		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	11	1	add
73	[BUG]  [BUGGY]    super();  iRuleSets  =  new  HashMap  <  String,  RuleSet>();  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  ZoneInfoCompiler()  {  [BUGGY]    super();  iRuleSets  =  new  HashMap  <  String,  RuleSet>();  [BUGGY]  iRuleSets  =  new  HashMap<String,  RuleSet>();  iZones  =  new  ArrayList<Zone>();  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	355	355	1	replace	    super();  iRuleSets  =  new  HashMap  <  String,  RuleSet>();		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	11	1	add
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unknown  arg ");  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unknown  arg ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
132	[BUG]  [BUGGY]    System.err.println( "Unknown  arg ");  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unknown  arg ");  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unknown  arg ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "DateTimeUsage "  +  args[0]);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "DateTimeUsage "  +  args[0]);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
133	[BUG]  [BUGGY]    System.err.println( "DateTimeUsage "  +  args[0]);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "DateTimeUsage "  +  args[0]);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "DateTimeUsage "  +  args[0]);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args.length  ==  1)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	if(args.length  ==  1)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
153	[BUG]  [BUGGY]  if(args.length  ==  1)  {  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args.length  ==  1)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	if(args.length  ==  1)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	if(args  ==  null  ||  args.length  ==  0)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
154	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	if(args  ==  null  ||  args.length  ==  0)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args.length  ==  2)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	if(args.length  ==  2)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
155	[BUG]  [BUGGY]  if(args.length  ==  2)  {  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args.length  ==  2)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	if(args.length  ==  2)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args.length);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    System.err.println( "Unable  to  parse  args: "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
162	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args.length);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args.length);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    System.err.println( "Unable  to  parse  args: "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
163	[BUG]  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  zone. ");  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    System.err.println( "Prints  a  disassembled  view  of  the  given  zone. ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
164	[BUG]  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  zone. ");  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  zone. ");  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    System.err.println( "Prints  a  disassembled  view  of  the  given  zone. ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    System.err.println( "Unable  to  parse: "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
165	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    System.err.println( "Unable  to  parse: "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length  +  1);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	    System.err.println( "Unable  to  parse: "  +  args.length  +  1);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
166	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length  +  1);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length  +  1);  [BUGGY]  if  (args.length  ==  0)  {  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	    System.err.println( "Unable  to  parse: "  +  args.length  +  1);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	19	1	add
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args.length);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unable  to  parse  args: "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
182	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args.length);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args.length);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unable  to  parse  args: "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0].toString());  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unable  to  parse: "  +  args[0].toString());		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
183	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0].toString());  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0].toString());  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unable  to  parse: "  +  args[0].toString());		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length  +  1);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unable  to  parse: "  +  args.length  +  1);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
184	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length  +  1);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length  +  1);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unable  to  parse: "  +  args.length  +  1);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0].getClass().getName());  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unable  to  parse: "  +  args[0].getClass().getName());		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
185	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0].getClass().getName());  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0].getClass().getName());  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unable  to  parse: "  +  args[0].getClass().getName());		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unable  to  parse: "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
186	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args.length);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unable  to  parse: "  +  args.length);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  ZoneInfoCompiler()  {  iRuleSets  =  new  HashMap<String,  RuleSet>();  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(iRuleSets.size());  [BUGGY]  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	356	356	1	add	iZones  =  new  ArrayList  <  Zone>(iRuleSets.size());	iZones  =  new  ArrayList<Zone>();  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	12	1	replace
204	[BUG]  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(iRuleSets.size());  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  ZoneInfoCompiler()  {  iRuleSets  =  new  HashMap<String,  RuleSet>();  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(iRuleSets.size());  [BUGGY]  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	356	356	1	replace	iZones  =  new  ArrayList  <  Zone>(iRuleSets.size());	iZones  =  new  ArrayList<Zone>();  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	12	1	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args  ==  null  ||  args.length  ==  2)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	if(args  ==  null  ||  args.length  ==  2)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
184	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  2)  {  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args  ==  null  ||  args.length  ==  2)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	if(args  ==  null  ||  args.length  ==  2)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args  ==  null  ||  args.length  <  0)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	add	if(args  ==  null  ||  args.length  <  0)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
185	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  <  0)  {  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  [BUGGY]  if(args  ==  null  ||  args.length  <  0)  {  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	94	94	1	replace	if(args  ==  null  ||  args.length  <  0)  {	if  (args.length  ==  0)  {  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	18	1	replace
272	[BUG]  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(iZones);  [timeout]  [CONTEXT]  public  ZoneInfoCompiler()  {  iRuleSets  =  new  HashMap<String,  RuleSet>();  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(iZones);  [BUGGY]  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	356	356	1	replace	iZones  =  new  ArrayList  <  Zone>(iZones);	iZones  =  new  ArrayList<Zone>();  	non-compiled	[timeout]	12	None	replace
273	[BUG]  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(4);  [timeout]  [CONTEXT]  public  ZoneInfoCompiler()  {  iRuleSets  =  new  HashMap<String,  RuleSet>();  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(4);  [BUGGY]  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	356	356	1	replace	iZones  =  new  ArrayList  <  Zone>(4);	iZones  =  new  ArrayList<Zone>();  	non-compiled	[timeout]	12	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  ZoneInfoCompiler()  {  iRuleSets  =  new  HashMap<String,  RuleSet>();  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(1);  [BUGGY]  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	356	356	1	add	iZones  =  new  ArrayList  <  Zone>(1);	iZones  =  new  ArrayList<Zone>();  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	12	1	replace
275	[BUG]  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(1);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  ZoneInfoCompiler()  {  iRuleSets  =  new  HashMap<String,  RuleSet>();  [BUGGY]  iZones  =  new  ArrayList  <  Zone>(1);  [BUGGY]  iLinks  =  new  ArrayList<String>();  }  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  <init>  [RETURN_TYPE]  ZoneInfoCompiler()  [VARIABLES]  DateTimeOfYear  cStartOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  iAdvanceDayOfWeek  ThreadLocal  cVerbose  Zone  iNext  char  iZoneChar  List  iLinks  iRules  iZones  Chronology  cLenientISO  String  iFormat  iLetterS  iName  iRules  iType  Map  iRuleSets  int  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	356	356	1	replace	iZones  =  new  ArrayList  <  Zone>(1);	iZones  =  new  ArrayList<Zone>();  	compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	12	1	replace
511	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args[0].toString());  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unable  to  parse  args: "  +  args[0].toString());		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
512	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args[0].toString());  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args[0].toString());  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unable  to  parse  args: "  +  args[0].toString());		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
512	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
513	[BUG]  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Prints  a  disassembled  view  of  the  given  rule. ");		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
513	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args[0]);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unable  to  parse  args: "  +  args[0]);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
514	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args[0]);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse  args: "  +  args[0]);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unable  to  parse  args: "  +  args[0]);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0]);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	add	    System.err.println( "Unable  to  parse: "  +  args[0]);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
516	[BUG]  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0]);  [FE]  AssertionFailedError  testDateTimeZoneBuilder  [CONTEXT]  public  static  void  main(String[]  args)  throws  Exception  {  if  (args.length  ==  0)  {  [BUGGY]    System.err.println( "Unable  to  parse: "  +  args[0]);  [BUGGY]  printUsage();  return;  }  File  inputDir  =  null;  File  outputDir  =  null;  boolean  verbose  =  false;  int  i;  for  (i=0;  i<args.length;  i++)  {  try  {  [CLASS]  ZoneInfoCompiler  DateTimeOfYear  Rule  RuleSet  Zone  [METHOD]  main  [RETURN_TYPE]  void  String[]  args  [VARIABLES]  IndexOutOfBoundsException  e  Zone  iNext  String  iFormat  iLetterS  iName  iRules  iType  name  str  String[]  args  int  day  dayOfWeek  i  iDayOfMonth  iDayOfWeek  iFromYear  iMillisOfDay  iMonthOfYear  iOffsetMillis  iSaveMillis  iToYear  iUntilYear  index  j  millis  month  year  DateTimeOfYear  cStartOfYear  dtOfYear  iDateTimeOfYear  iUntilDateTimeOfYear  boolean  advance  iAdvanceDayOfWeek  verbose  File[]  sources  ThreadLocal  cVerbose  char  iZoneChar  zoneChar  List  iLinks  iRules  iZones  ZoneInfoCompiler  zic  Chronology  cLenientISO  Map  iRuleSets  File  inputDir  outputDir  	projects/Time11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java	0.0	95	95	1	replace	    System.err.println( "Unable  to  parse: "  +  args[0]);		compilable	  [FE]  AssertionFailedError  testDateTimeZoneBuilder	21	1	add
