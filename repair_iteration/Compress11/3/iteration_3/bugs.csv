bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[448];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[448];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[448];	  final    byte[]    signature    =    new    byte[248];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[252];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[252];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[252];	  final    byte[]    signature    =    new    byte[248];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in.readLine());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  InputStream(in.readLine());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  InputStream(in.readLine());	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in.readUTF());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  InputStream(in.readUTF());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  InputStream(in.readUTF());	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in.readInt());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  InputStream(in.readInt());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  InputStream(in.readInt());	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in.read(),  4096);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  InputStream(in.read(),  4096);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  InputStream(in.read(),  4096);	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
7	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in.read(),  zip);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  InputStream(in.read(),  zip);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  InputStream(in.read(),  zip);	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
8	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in.read(),  ZIP);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  InputStream(in.read(),  ZIP);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  InputStream(in.read(),  ZIP);	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.getInputStream( "UTF-8 ");	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  this.tarheader.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  this.tais.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  InputStream  in  =  TarArchiveInputStream.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  TarArchiveInputStream.getInputStream();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  TarArchiveInputStream.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  InputStream  in  =  tais.readInputStream();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readInputStream();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(IResource.DEPRECATED);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream(IResource.DEPRECATED);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.getInputStream(IResource.DEPRECATED);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  byte[]  signature  =  in.read(fragment);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(fragment);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(fragment);	  byte[]    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  byte[]  signature  =  in.read(signature.length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(signature.length);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(signature.length);	  byte[]    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  byte[]  signature  =  in.read(strategy);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(strategy);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(strategy);	  byte[]    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  byte[]  signature  =  in.read(dump);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(dump);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(dump);	  byte[]    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  in.skipChildren();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.skipChildren();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.skipChildren();	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  in.mark(signature.length);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.mark(signature.length);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.mark(signature.length);	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  in.readFully(tarheader);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.readFully(tarheader);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.readFully(tarheader);	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  in.defaultRead();  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.defaultRead();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.defaultRead();	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  in.mark(signature);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.mark(signature);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.mark(signature);	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  in.readFully();  [CE]  illegal  start  of  expression  [FE]                                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.readFully();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.readFully();	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  byte[]  signature  =  in.read(tarheader,  tais);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(tarheader,  tais);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(tarheader,  tais);	  byte[]    signature    =    in.read(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
26	[BUG]  [BUGGY]  byte[]  signature  =  in.read(tarheader,  dumpsig);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(tarheader,  dumpsig);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(tarheader,  dumpsig);	  byte[]    signature    =    in.read(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
27	[BUG]  [BUGGY]  byte[]  signature  =  in.read(tarheader)+  dumpsig.length;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(tarheader)+  dumpsig.length;  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(tarheader)+  dumpsig.length;	  byte[]    signature    =    in.read(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
28	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[228  *  DateTimeConstants.MILLIS_PER_SECOND];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[228  *  DateTimeConstants.MILLIS_PER_SECOND];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[228  *  DateTimeConstants.MILLIS_PER_SECOND];	  final    byte[]    signature    =    new    byte[228];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
29	[BUG]  [BUGGY]  byte[]  signature  =  in.readFully();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.readFully();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.readFully();	  byte[]    signature    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
30	[BUG]  [BUGGY]  byte[]  signature  =  in.readFully(tarheader);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.readFully(tarheader);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.readFully(tarheader);	  byte[]    signature    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
31	[BUG]  [BUGGY]  byte[]  signature  =  in.readLine();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.readLine();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.readLine();	  byte[]    signature    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
32	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
33	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getVersion());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.getVersion());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
34	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getRawClass());  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getRawClass());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.getRawClass());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getValue());  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getValue());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.getValue());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  tarheader);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in,  tarheader);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
37	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getCharset());  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getCharset());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.getCharset());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
38	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[6096];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[6096];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[6096];	  final    byte[]    signature    =    new    byte[4096];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[4000];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[4000];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[4000];	  final    byte[]    signature    =    new    byte[4096];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[3296];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[3296];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[3296];	  final    byte[]    signature    =    new    byte[4096];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[1024];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[1024];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[1024];	  final    byte[]    signature    =    new    byte[4096];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  String  signature  =  in.read(signature.length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  String  signature  =  in.read(signature.length);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	String  signature  =  in.read(signature.length);	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
43	[BUG]  [BUGGY]  String  signature  =  in.read();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  String  signature  =  in.read();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	String  signature  =  in.read();	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
44	[BUG]  [BUGGY]  String  signature  =  in.read(tarheader);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  String  signature  =  in.read(tarheader);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	String  signature  =  in.read(tarheader);	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
45	[BUG]  [BUGGY]  byte  signature  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte  signature  =  in.read(signature);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte  signature  =  in.read(signature);	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
46	[BUG]  [BUGGY]  String  signature  =  in.readFully(signature);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  String  signature  =  in.readFully(signature);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	String  signature  =  in.readFully(signature);	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
47	[BUG]  [BUGGY]  String  signature  =  in.read(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  String  signature  =  in.read(signature,  tarheader);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	String  signature  =  in.read(signature,  tarheader);	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
48	[BUG]  [BUGGY]  InputStream  in  =  getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getInputStream( "UTF-8 ");  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getInputStream( "UTF-8 ");	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(IResource.DEPRECATED);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(IResource.DEPRECATED);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getInputStream(IResource.DEPRECATED);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  InputStream  in  =  this.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  this.getInputStream();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  this.getInputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(IResource.DEFAULT_SIGNATURE);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(IResource.DEFAULT_SIGNATURE);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getInputStream(IResource.DEFAULT_SIGNATURE);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  InputStream  in  =  getOutputStream();  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getOutputStream();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getOutputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(in.getVersion());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getInputStream(in.getVersion());	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  InputStream  in  =  this.tais.readIn();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  this.tais.readIn();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  this.tais.readIn();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.readIn();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  this.tarheader.readIn();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  this.tarheader.readIn();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  InputStream  in  =  tais.readFile();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readFile();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readFile();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  InputStream  in  =  tais.readIn(in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readIn(in);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readIn(in);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
58	[BUG]  [BUGGY]  InputStream  in  =  TarArchiveInputStream.readIn();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  TarArchiveInputStream.readIn();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  TarArchiveInputStream.readIn();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
59	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readLine());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readLine());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.readLine());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
60	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readUTF());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readUTF());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.readUTF());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  4096);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  4096);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  4096);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
62	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  file);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  file);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  file);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
63	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readShort());  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readShort());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.readShort());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
64	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readUTF());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readUTF());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readUTF());	  InputStream    in    =    new    ByteArrayInputStream(in.readShort());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readInt());  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readInt());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readInt());	  InputStream    in    =    new    ByteArrayInputStream(in.readShort());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readBytes());  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readBytes());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readBytes());	  InputStream    in    =    new    ByteArrayInputStream(in.readShort());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readUnsignedInt());  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readUnsignedInt());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readUnsignedInt());	  InputStream    in    =    new    ByteArrayInputStream(in.readShort());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readFully());  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readFully());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readFully());	  InputStream    in    =    new    ByteArrayInputStream(in.readShort());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readByte());  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readByte());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readByte());	  InputStream    in    =    new    ByteArrayInputStream(in.readShort());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
70	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine()  +  1);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine()  +  1);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readLine()  +  1);	  InputStream    in    =    new    ByteArrayInputStream(in.readLine());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readLine());  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readLine());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readLine());	  InputStream    in    =    new    ByteArrayInputStream(in.readLine());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine()  -  1);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine()  -  1);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readLine()  -  1);	  InputStream    in    =    new    ByteArrayInputStream(in.readLine());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  4096);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  4096);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  4096);	  InputStream    in    =    new    ByteArrayInputStream(in.readLine());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  out.readLine());  [CE]  illegal  start  of  expression  [FE]                                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  out.readLine());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  out.readLine());	  InputStream    in    =    new    ByteArrayInputStream(in.readLine());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(tarheader));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(tarheader));  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.read(tarheader));	  InputStream    in    =    new    ByteArrayInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(),  4096);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(),  4096);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.read(),  4096);	  InputStream    in    =    new    ByteArrayInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
77	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read()  +  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read()  +  1);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.read()  +  1);	  InputStream    in    =    new    ByteArrayInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read()  -  1);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.read()  -  1);	  InputStream    in    =    new    ByteArrayInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  in.flush();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.flush();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.flush();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  tais.close();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  tais.close();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	tais.close();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
81	[BUG]  [BUGGY]  InputStream  in  =  new  byte[InputStream.read(signature)];  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  byte[InputStream.read(signature)];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  byte[InputStream.read(signature)];	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
82	[BUG]  [BUGGY]  InputStream  in  =  new  byte[in.read(signature)];  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  byte[in.read(signature)];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  byte[in.read(signature)];	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
83	[BUG]  [BUGGY]  byte[]  signature  =  in.read(code);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(code);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(code);	  byte[]    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(in);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getInputStream(in);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(archiverName);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getInputStream(archiverName);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
86	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(in.getCharset());  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(in.getCharset());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getInputStream(in.getCharset());	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
87	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[512];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[512];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[512];	  final    byte[]    signature    =    new    byte[248];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
88	[BUG]  [BUGGY]  byte[]  signature  =  in.readTar();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.readTar();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.readTar();	  byte[]    signature    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
89	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream(archiverName);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.getInputStream(archiverName);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
90	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  this.archiverName.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream(in);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.getInputStream(in);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
92	[BUG]  [BUGGY]  byte[]  signature  =  in.read(tarheader)+  dumpsig;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(tarheader)+  dumpsig;  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(tarheader)+  dumpsig;	  byte[]    signature    =    in.read(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
93	[BUG]  [BUGGY]  byte[]  signature  =  in.read(tarheader,  buffer);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(tarheader,  buffer);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(tarheader,  buffer);	  byte[]    signature    =    in.read(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
94	[BUG]  [BUGGY]  byte[]  signature  =  in.read(tarheader,  TAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(tarheader,  TAR);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(tarheader,  TAR);	  byte[]    signature    =    in.read(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
95	[BUG]  [BUGGY]  in.read(tarheader);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.read(tarheader);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.read(tarheader);	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
96	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in.read(tarheader));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  InputStream(in.read(tarheader));  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  InputStream(in.read(tarheader));	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
97	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(in.read());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  FileInputStream(in.read());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  FileInputStream(in.read());	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
98	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in,  TAR);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
99	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  archiverName);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in,  archiverName);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
100	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully(archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readFully(archiverName);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readFully(archiverName);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
101	[BUG]  [BUGGY]  InputStream  in  =  tais.readIn(archiverName);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readIn(archiverName);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readIn(archiverName);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
102	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readFully();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readFully();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
103	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully(in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readFully(in);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readFully(in);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
104	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully(tarheader);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readFully(tarheader);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readFully(tarheader);	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
105	[BUG]  [BUGGY]  String  signature  =  in.read(strategy);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  String  signature  =  in.read(strategy);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	String  signature  =  in.read(strategy);	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
106	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readChars());  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readChars());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readChars());	  InputStream    in    =    new    ByteArrayInputStream(in.readLine());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(tarheader));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(tarheader));  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.read(tarheader));	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
108	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readFully());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readFully());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.readFully());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
109	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  1);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.read()  +  1);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
110	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[100];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[100];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[100];	  final    byte[]    signature    =    new    byte[4096];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
111	[BUG]  [BUGGY]  byte[]  signature  =  in.read(archiverName);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(archiverName);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(archiverName);	  byte[]    signature    =    in.read(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
112	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(),  in.read());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(),  in.read());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.read(),  in.read());	  InputStream    in    =    new    ByteArrayInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
113	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(),  in.readShort());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.read(),  in.readShort());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.read(),  in.readShort());	  InputStream    in    =    new    ByteArrayInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
114	[BUG]  [BUGGY]  InputStream  in  =  tais.readUTF();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readUTF();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readUTF();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
115	[BUG]  [BUGGY]  InputStream  in  =  tais.readIO();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readIO();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readIO();	  InputStream    in    =    tais.readIn();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
116	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readCharacters());  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readCharacters());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readLine(),  in.readCharacters());	  InputStream    in    =    new    ByteArrayInputStream(in.readLine());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
117	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
118	[BUG]  [BUGGY]  InputStream  in  =  tais.readLine();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  tais.readLine();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  tais.readLine();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
119	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.getPath());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
120	[BUG]  [BUGGY]  byte[]  signature  =  in.read(zip);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(zip);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(zip);	  byte[]    signature    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
121	[BUG]  [BUGGY]  int  signature  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  int  signature  =  in.read(signature);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	int  signature  =  in.read(signature);	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
122	[BUG]  [BUGGY]  char  signature  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  char  signature  =  in.read(signature);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	char  signature  =  in.read(signature);	  String    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
123	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[7];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  final  byte[]  signature  =  new  byte[7];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	final  byte[]  signature  =  new  byte[7];	  final    byte[]    signature    =    new    byte[8];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
124	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readIO());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(in.readIO());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ByteArrayInputStream(in.readIO());	  InputStream    in    =    new    ByteArrayInputStream(in.readShort());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
125	[BUG]  [BUGGY]  InputStream  in  =  new  byte[in.read(signature.length)];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  byte[in.read(signature.length)];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  byte[in.read(signature.length)];	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
126	[BUG]  [BUGGY]  InputStream  in  =  new  byte[InputStream.read(signature.length)];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  byte[InputStream.read(signature.length)];  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  byte[InputStream.read(signature.length)];	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
127	[BUG]  [BUGGY]  InputStream  in  =  new  byte[InputStream.read(signature);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  byte[InputStream.read(signature);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  byte[InputStream.read(signature);	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
128	[BUG]  [BUGGY]  in.markSupported();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.markSupported();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.markSupported();	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
129	[BUG]  [BUGGY]  in.skip();  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.skip();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.skip();	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
130	[BUG]  [BUGGY]  in.readFully(signature);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  in.readFully(signature);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	in.readFully(signature);	  in.read();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
131	[BUG]  [BUGGY]  InputStream  in  =  getInputStream().readLine();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  getInputStream().readLine();  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  getInputStream().readLine();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
132	[BUG]  [BUGGY]  byte[]  signature  =  in.read(duplicate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  byte[]  signature  =  in.read(duplicate);  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	byte[]  signature  =  in.read(duplicate);	  byte[]    signature    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
133	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in.readFully());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  InputStream(in.readFully());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  InputStream(in.readFully());	  InputStream    in    =    new    InputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
134	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.readShort());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.readShort());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  in.readShort());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
135	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.getVersion());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.getVersion());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  in.getVersion());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
136	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.read());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.read());  [BUGGY]      in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	207	207	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  in.read());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
