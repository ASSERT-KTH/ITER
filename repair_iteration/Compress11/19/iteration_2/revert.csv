projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.close();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength);signatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.seek(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=null){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==2){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<2){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]dumpsig=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.read();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.mark(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength.mark(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(tarheader.length),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength,tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(tarheader.length);signatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235tarheader.mark(signatureLength);signatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){signatureLength=in.read(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){signatureLength=in.read(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength);signatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==1)){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==2)){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){in.set();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength>0)){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.readDigest());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}else{in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>=0){in.mark(signatureLength);}else{in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.mark(signatureLength);}else{in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader);}else{in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.set();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235Thread.currentThread().setContextClassLoader(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=0;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235Thread.currentThread().setContextClassLoader(this);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=0;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.mark(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader.length);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader,signatureLength);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader,512));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader,256));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(dumpsig,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader,100));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader,32));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235tarheader.set(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235tarheader.mark(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength-4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength),tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength+1));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength)+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(dumpsig,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.length,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,TarArchiveInputStream.DEFAULT)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheaderLength,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,TarArchiveInputStream.DEFAULT+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength,tarheader.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength,tarheader.length+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength,tarheader.length).reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.mark(signatureLength);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){System.arraycopy(tarheader,0,tarheader,0,signatureLength);}else{System.arraycopy(tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(tarheader);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.skip(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.seek(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.seek(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.skipBytes(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.seek(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(tarheader.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in.read(),in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in.read(),in.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalTarArchiveInputStreamin=newTarArchiveInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in.readLine());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in.read()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==null){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=null){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==null){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){if(signatureLength==0){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){if(signatureLength==0){in.set();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){if(signatureLength!=0){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalTarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.read();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.read();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]dumpsig=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]signatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]dumpsig=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]signatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalbyte[]dumpsig=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]dumpsig=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]signature=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.set();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==2){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<2){in.mark(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==2){in.set();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength+tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,TarArchiveInputStream.class);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader,signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalbytesignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalbytesignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalStringsignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.getBytes("UTF-8"));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.getBytes(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.readBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.getBytes(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read()+dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.readLine());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(),tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=in.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=null){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235tarheader=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(tarheaderLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(tarheader,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]dumpsig=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(length,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newInputStream(tarheader,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader,archiverName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>=0){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalbytesignatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength+1);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatures.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){in.set();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);signatureLength=in.read(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);signatureLength=in.read(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);signatureLength=in.read(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){signatureLength=in.read(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==2){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.close();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(tarheader.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in,in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==1){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength*1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(tarheader.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}else{returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.close();}else{returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newFileInputStream(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){in.write(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.getBytes(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.getBytes(256));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(tarheader.length);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){System.arraycopy(tarheader,0,tarheader,0,signatureLength);}else{System.arraycopy(tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{System.arraycopy(tarheader,0,signatureLength,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader,4096));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<0){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength;}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength!=0)){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(),dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength),TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength),tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<2){in.set();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength-3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength-6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength/1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==2){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.mark(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==2){in.mark(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newFileInputStream(tarheader.getPath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235IntegersignatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength+1);}else{in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235Integertarheader=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength-1,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>=0){in.close();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newFileInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,TarArchiveInputStream.DEFAULT).getBytes();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2&&in.mark(signatureLength)>0){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2&&in.mark(signatureLength)<2){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235atterNonArray(signatureLength)){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235atterNonArray(signatureLength){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=null){in.mark(signatureLength);signatureLength=in.read(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);signatureLength=in.read(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,in.mark(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength+tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(dumpsig.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength/2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(strategy.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]dumpsig=in.read(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>=0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.skip(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}else{System.arraycopy(tarheader,0,signatureLength,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newBufferedInputStream(signatureLength);
