projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.reset();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.close();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235nisipLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235finalintsignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235TarArchiveInputStreamin=newTarArchiveInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength);signatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=2){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.mark(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.set(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.mark(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235in.seek(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.reset();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.close();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235(signatureLength==0)){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){in.set();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.set();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(signatureLength,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=null){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==2){in.reset();}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength<2){in.reset();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength>0){in.reset();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235byte[]dumpsig=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235InputStreamin=newByteArrayInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.mark(signatureLength);}else{in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength==0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java235if(signatureLength!=0){in.read();}else{in.mark(signatureLength);}
