projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.markSupported();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT|TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skip(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,cacherName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipChildren(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.flush();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.write(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.markSupported(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(true);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipSupported();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.seek(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=2){returnnewTarArchiveInputStream(in);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.markSupported();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-1,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultReader().write(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setState(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(chunkerLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)-1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setLength(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength].readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength+12];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setSupported(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.markSupported(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setState(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.startSupported();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setSupported(true);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength/1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature.length,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature.length-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature.length+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,tarheader,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,10000);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,100);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,2096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,1024);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,4192);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.readInt();if(signatureLength==2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211nisipLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211nisip=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.seek(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setChildren(true);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.closeArchiveInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signature,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signature,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signatureLength,signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211finalintsignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.in.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.readUTF();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.readFully();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.readInt()-1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.readIO();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipBytes(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipCharacters();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tarheader.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tarheader.length+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tarheader.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,cacherName.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signatureLength,file);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,16);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(chunkerLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(chunkerLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(chunkerLength-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(chunkerLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=2){returnnewTarArchiveInputStream(in);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211TarArchiveInputStreamin=newTarArchiveInputStream(in.markSupported(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211TarArchiveInputStreamin=newTarArchiveInputStream(in.markSupported());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211TarArchiveInputStreamin=newTarArchiveInputStream(in.markSupported());tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211TarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211TarArchiveInputStream.instance.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211TarArchiveInputStreamin=tais.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[12];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[10];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[16];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newString[signatureLength];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[32];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[6];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[11];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-2,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+1,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-1,TarArchiveInputStream.DEFAULT,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-4,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-1,file,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(false);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(true,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(false,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setSupported(false);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signature,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength,file);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength+1];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength+2];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength+3];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength*12];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength+4];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength+16];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skip(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skip(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skip(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skip(signatureLength+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.markSupported(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.markSupported(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.markSupported(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.markSupported(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.markSupported(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in,signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength,2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,file.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signature,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.readFully(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.tais.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.tarheader.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.readInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.readInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream("UTF-8");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.flush();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==0){in.flush();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=2){in.flush();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=0){in.flush();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength>12){in.flush();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.flush();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.mark(signature.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.mark(signature.length);}else{System.arraycopy(signature,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.mark(signature.length);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.mark(signature.length);}else{returnnewZipArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.mark(signature.length);}else{returnnewArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.readInt();if(signatureLength==2){returnnewTarArchiveInputStream(in);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in,signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in);}else{thrownewIllegalArgumentException("".equals(signatureLength));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength/12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipChildren(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipChildren(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipChildren(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipChildren(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skipChildren(signatureLength+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength-3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultReader().write(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultReader().write(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultReader().write(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultReader().write(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultReader().write(signature,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultReader().write(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength/11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.read(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.write(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.write(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.write(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.write(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.write(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.write(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT&TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT|TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT|TarArchiveInputStream.DEFAULT+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT/TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT|TarArchiveInputStream.DEFAULT-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setLength(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setLength(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.seek(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.seek(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.seek(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)+2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)+4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)+3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)+12;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)+10;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,file);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tarheaderName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,tarheaderName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT|TarArchiveInputStream.DEFAULT));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT),tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setState(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setState(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setState(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setState(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength/12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength-4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength-10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength/11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.readInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.tarheader.getInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(signatureLength,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(signatureLength,10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength>=2){thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength>2){thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength==2){thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength>2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength>=2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength==2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[12].readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[16].readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[6].readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[32].readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[10].readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[64].readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT)-1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)-2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)/1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)-3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)-4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setState(signatureLength*12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setState(signatureLength+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setState(signatureLength});
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211nisipLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarInputStream(in);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in,in);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.write('n');
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength,10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,14);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.archiverName.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.tarheader.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tarheader.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.markSupported(signatureLength,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength*12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(thenLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signalLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT+TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setState(in.markSupported());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)-tarheader;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)+tarheader;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(signatureLength+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(signatureLength*12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setSupported(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength*11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,TarArchiveInputStream.DEFAULT+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-1,TarArchiveInputStream.DEFAULT-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT)-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,tarheaderLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setLength(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setLength(0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signatureLength,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-signatureLength+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-signatureLength)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarInputStream(in);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarNumberArchiveInputStream(in);}else{returnnewTarNumberArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.flush();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.release(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.release();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.reset(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.copyCurrentStructure(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signature,tarheaderLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.copyCurrentStructure(signature,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-6,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-1,TarArchiveInputStream.DEFAULT)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.skipSupported();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tarheader.length-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.createInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.createInputStream(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newZipInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.archiverName.getInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.archiverName.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=this.tarheader.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tarheader.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skip(signatureLength+10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength+32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength*1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength<2){thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength<2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength!=2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength!=2){thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211IntegersignatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength*2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[40];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[64];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength+8];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength*12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength-6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-1,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength*12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=2){returnnewTarArchiveInputStream(in,signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=2){returnnewTarInputStream(in);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=2){returnnewTarNumberArchiveInputStream(in);}else{returnnewTarNumberArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.resetChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setChildrenLength(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setChildren(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.setChildren(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(archiverName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(in.getVersion());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setLength(signatureLength+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setLength(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=in.read(signature,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signature,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skip();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength<2){returnnewTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211while(signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT|TarArchiveInputStream.DEFAULT)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=12){returnnewTarArchiveInputStream(in);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength!=12){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readCurrentStructure(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readCurrentStructure(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.startArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.releaseArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.initCurrentStructure(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,TarArchiveInputStream.DEFAULT-1,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read().write(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultReader().write(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(signatureLength*12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(signatureLength,12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,20000);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-12,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength-1,signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.readIn();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.readFully(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=tais.getInputStream(PRINT_SIGNATURE);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.skip(signatureLength-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.defaultWrite(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature,0,signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){returnnewTarArchiveInputStream(in);}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength-11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength+16);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.setSupported(true);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.setSupported(true);}else{returnnewZipArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.setSupported(true);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211if(signatureLength==2){in.setSupported(true);}else{thrownewIllegalArgumentException("Markisnotsupported.");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signatureLength,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.read(signature.length,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.readFully(signatureLength,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211tais.release(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength+11];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[1];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signatureLength-6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength].mark(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength].getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newbyte[signatureLength].markSupported();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setChildren(chunkerLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newByteArrayInputStream(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newByteArrayInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211InputStreamin=newByteArrayInputStream(in.read(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,in.read(signature.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tais.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signatureLength,tarheader.length+11);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signature.length+12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signature.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.mark(signature.length-12);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.setLength(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211IntegersignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java211in.set(signature,0,TarArchiveInputStream.DEFAULT);
