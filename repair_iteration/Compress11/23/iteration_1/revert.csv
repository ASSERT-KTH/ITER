projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getValue();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.toString();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getSimpleName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getDeclaringClass();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getParent();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChunk());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSimpleName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(entryLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(subscriptionLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signature));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.UNKNOWN:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(",");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,this);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(signatureLength);tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength*2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?JAR:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(signatureLength):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.NONE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?newTarArchiveInputStream(signatureLength):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||in!=null){returnnewTarArchiveInputStream(in);}
