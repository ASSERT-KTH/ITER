bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  new  TarArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  new  TarArchiveInputStream(in);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(in);	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  new  TarArchiveInputStream(tais,  signatureLength);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  signatureLength);	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  new  TarArchiveInputStream(tais,  in);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  in);	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  tarheader);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  new  TarArchiveInputStream(tais,  tarheader);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  tarheader);	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  new  TarArchiveInputStream(in,  tais);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  new  TarArchiveInputStream(in,  tais);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(in,  tais);	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  return  tais.getName();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais.getName();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getName();	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  return  tais.getValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais.getValue();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getValue();	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  return  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais.getNextEntry();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getNextEntry();	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  return  tais.toString();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais.toString();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.toString();	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  return  tais.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais.getSimpleName();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getSimpleName();	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  return  tais.getDeclaringClass();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais.getDeclaringClass();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getDeclaringClass();	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  return  tais.getParent();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais.getParent();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getParent();	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
25	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getNextEntry());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getSimpleName());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getSimpleName());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  tais.copyCurrentStructure(tarheader);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.copyCurrentStructure(tarheader);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(tarheader);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  tais.setEntry(in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setEntry(in);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(in);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  tais.setValue(tarheader.getValue());  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setValue(tarheader.getValue());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.getValue());	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  tais.copyCurrentStructure(in);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.copyCurrentStructure(in);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(in);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  tais.setEntryLength(entryLength);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setEntryLength(entryLength);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(entryLength);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  tais.close();  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.close();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.close();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setEntryLength(signatureLength  +  1);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  +  1);	  tais.setEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setEntryLength(signatureLength  +  2);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  +  2);	  tais.setEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  tais.setEntryLength(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setEntryLength(0);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(0);	  tais.setEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  tais.setEntryLength(subscriptionLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setEntryLength(subscriptionLength);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(subscriptionLength);	  tais.setEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  tais.setEntry(signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setEntry(signatureLength);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(signatureLength);	  tais.setEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
57	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
58	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));	  return    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }	  return    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength);	  return    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));	  return    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
67	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
68	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in):  in;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in):  in;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(in):  in;	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
70	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in):  tais;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in):  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(in):  tais;	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
71	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  new  TarArchiveInputStream(tais.getName());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getName());	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  TAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  new  TarArchiveInputStream(tais,  TAR);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  TAR);	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  tais.setCurrentEntryLength(signatureLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setCurrentEntryLength(signatureLength);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(signatureLength);	  tais.setEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  tais.setName(tarheader.getName());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setName(tarheader.getName());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getName());	  tais.setEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
79	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(tais,  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  new  TarArchiveInputStream(tais,  in);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  new  TarArchiveInputStream(tais,  in);	  return    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
80	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(tais);  }	  return    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
81	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
83	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
84	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getValue());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getValue());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
86	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
90	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  if(tais!=  null)  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  throw  new  ArchiveException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
92	[BUG]  [BUGGY]  if(tais  ==  null)  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  throw  new  ArchiveException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
93	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
94	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
95	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
96	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
97	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
98	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
99	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  new  TarArchiveInputStream(tais,  this);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  this);	  new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
100	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
101	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
102	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
103	[BUG]  [BUGGY]  if(tais!=  null)  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  in.mark(signatureLength);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
104	[BUG]  [BUGGY]  in.mark(signatureLength);  tais.close();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  in.mark(signatureLength);  tais.close();  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	in.mark(signatureLength);  tais.close();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
105	[BUG]  [BUGGY]  if(tais!=  null)  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  tais.close();  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  tais.close();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()));  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
107	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  *  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais.setEntryLength(signatureLength  *  2);  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  *  2);	  tais.setEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
108	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
109	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getNextEntry());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
110	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getName());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getName());  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getName());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
111	[BUG]  [BUGGY]  return  tais  ==  null?  JAR  :  tais;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais  ==  null?  JAR  :  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  JAR  :  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
112	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
113	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength):  tais;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength):  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(signatureLength):  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
114	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
115	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais;	  return    tais;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
116	[BUG]  [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
117	[BUG]  [BUGGY]  if(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
118	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
119	[BUG]  [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais;  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais;	  return    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
120	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
121	[BUG]  [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
122	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
123	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
124	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
125	[BUG]  [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
126	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
127	[BUG]  [BUGGY]  if(tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();    [BUGGY]  if(tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(   "Could  not  use  reset  and  mark  operations.   ",  e);  }  throw  new  ArchiveException(   "No  Archiver  found  for  the  stream  signature   ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
