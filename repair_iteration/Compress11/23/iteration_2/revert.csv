projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getValue();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.toString();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getSimpleName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getDeclaringClass();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getParent();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChunk());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSimpleName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(entryLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(subscriptionLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signature));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.UNKNOWN:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(",");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,this);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(signatureLength);tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength*2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?JAR:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(signatureLength):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.NONE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?newTarArchiveInputStream(signatureLength):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(!TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(signatureLength,TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(signatureLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(signatureLength==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finaltais==null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.toString()+signatureLength;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.substring(signatureLength,tais.toString());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.substring(signatureLength,tais.length());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.toString()+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tarheader,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getQualifiedName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getCurrentName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),TAR.getSimpleName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?newTarArchiveInputStream(signatureLength+1):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?newTarArchiveInputStream(signatureLength):tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(signatureLength):tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newIntegerArrayInputStream(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signature));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheaderLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getValue(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getKey());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getValue()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(signature.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getValue()+signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signature.length),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais.getLastChunk());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais.getEntryLength());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais.getSimpleName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais.getVersion());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(in!=null){returnnewTarArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,in.read());}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signature.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length+1));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(signatureLength,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(signatureLength,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength!=0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength!=tais){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(entryLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(declarationLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(signatureLength+1):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(signatureLength,tarheader):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(signatureLength),tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(tais,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(in,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||!tais.hasNextEntry()){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0||!tais.hasNextEntry()){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(signature));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null)TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==1){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newByteArrayInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getName()+signatureLength;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getName()+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getString();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getRawName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,4096));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,32));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,100));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,DUMP));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getName(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getVersion());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signature,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader.length,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength==0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength==tais){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.closeEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntry(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=tais.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243nisipLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tarheader,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,tarheader.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243nas=newTarArchiveInputStream(newByteArrayInputStream(tarheader));nais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.setNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT:in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT:TarArchiveInputStream.DEFAULT;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT:tais,signatureLength;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tarheader!=null){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=tarheader){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=tarheader.length){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader.length);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signature,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais!=null){returnnewTarArchiveInputStream(in,tarheader.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){returnnewTarArchiveInputStream(in,tarheader.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newTarArchiveInputStream(in,tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==1){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength!=0){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength!=tais){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tar,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,AR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,JAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,TAR,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,ARCPIO);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(TAR,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?JAR:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?JAR:tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?JAR:tais.getValue();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?JAR:tais.getEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,this,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,null);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tarheader,this);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,this,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signature.length));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getSimpleName()!=null){returntais.getSimpleName();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getSimpleName()+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getSimpleName()+signatureLength;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getSimpleName()==null){returntais.getSimpleName();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getSimpleName()!=null){returntais.getSimpleName();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getSimpleName()!=null)returnnull;if(signatureLength==0){returntais.getSimpleName();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in,signatureLength):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(signatureLength):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(tarheader):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in):in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(tarheader,in):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(signature):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243nas=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));nais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==1){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChunk(),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChunk(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getFirstChunk());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getEndChunk());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()+1));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()),this);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signature.getBytes()));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()),signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tarheader,tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheaderLength),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getRawEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getLastChild();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getLastEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength+3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength*1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(SignatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength+6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||signatureLength==0){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(tais);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(tarheader);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.UNKNOWN:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.UNKNOWN:tais,signatureLength;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null)TarArchiveInputStream.UNKNOWN:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.UNKNOWN:in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in,tais,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getValue()!=null){returntais.getValue();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getValue()+signatureLength;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getValue()==null){returntais.getValue();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getValue()!=AR){returntais.getValue();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<1){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>2){if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(subscriptionLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength!=0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(in!=null||tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,signatureLength)){if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>0){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getParentEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(",");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(",");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(",");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("",");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(subscriptionLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(signatureLength+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=1){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signatureLength,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_TEST:in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null)TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null)TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(tarheader):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(signatureLength):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in,signatureLength):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(tarheader.length):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(signature):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==null){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getName()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getName()+".js");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getName()+1,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getLocalName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getName()+"-");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getString());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null)TarArchiveInputStream.DEFAULT_SIGNATURE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheaderLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in.read(),tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in.read(),tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tais.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in.read(),TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243try{[Delete]catch(IOExceptione){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243Thread.currentThread().setContextClassLoader(TarArchiveInputStream.class);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243aughtExceptionHandler{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243Thread.currentThread().setContextClassLoader(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getName(),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getSimpleName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tarheader.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getParent());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getType());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,tais);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais!=null){returnnewTarArchiveInputStream(in,tarheader);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in,tais);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getName(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getName()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getSimpleName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getName(),TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(SignatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in.getValue());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(signatureLength!=null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newTarArchiveInputStream(in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength/2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength*2+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength*4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength*3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(tarheader.length);tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(signatureLength);tais.closeEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(signatureLength);tais.reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(SignatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentEntry(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentEntry(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>0){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,in.read());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setProperty(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==null){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentEntry(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(tarheader,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),this.signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),signatureLength,in.readBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(in!=null){returnnewTarArchiveInputStream(in,in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||in!=null){returnnewTarArchiveInputStream(in,in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.hasNextEntry()){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.nextEntry()==signatureLength){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.nextEntry().length>0){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.nextEntry()==null){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChunk());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_TEST:in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getRawParent();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0||signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>=0){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<1){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.NONE:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.NONE:tais,signatureLength;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.NONE:in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.NONE:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getDeclaringClass().getName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getDeclaringClass()!=null){returntais.getDeclaringClass();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returntais.getDeclaringClass();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getDeclaringClass()!=null){returntais.getDeclaringClass();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.getDeclaringClass()!=AR){returntais.getDeclaringClass();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returntais.getDeclaringClass();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getName(),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in.readBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,CPIO);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,TARIO);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.isEnabled(Feature.QUOTE_FIELD_NAMES)){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newIntegerArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.isEnabled(Feature.QUOTE_FIELD_NAME)){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null){returnnewTarArchiveInputStream(in,in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in);}else{in.mark(SignatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:TAR_ArchiveInputStream.DEFAULT_SIGNATURE;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:tarheader;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==1){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(tais);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==null){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader.length);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?newTarArchiveInputStream(signatureLength,tarheader):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?newTarArchiveInputStream(signatureLength),tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(tarheader,tais):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(tarheader,in):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null?newTarArchiveInputStream(tarheader):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,0));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==1){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,in.read());}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,out);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheaderLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getDigest());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null?newTarArchiveInputStream(tarheader):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newStringArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?null:tais.getSimpleName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getFullName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getSimpleDigest();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getSimpleName()+File.separator;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newStringArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newJARInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in,tais);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newFileInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,0);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(subsignatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,DUMP);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setNextEntry(newTarArchiveInputStream(in));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais==null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais.toString());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==null||signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null||signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<=2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null||signatureLength<2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){in.mark(signatureLength);tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(signatureLength);tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(signatureLength);tais.flush();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setSignal(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setSimpleName(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChunk()-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243Thread.currentThread().interrupt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243&&tais!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setSignatureLength(0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243(signatureLength==0)){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(in,tais);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==null){returnnewTarArchiveInputStream(in,tais);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(tais);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tarheader,tais.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tais.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setSignatureLength(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(entryLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais==null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243&&tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||tais!=null){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getSignature();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==1){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(in,tais);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(in,tais);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(tais);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?null:tais.getName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.NONE:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.NONE:tarheader;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.NONE:tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:TAR_ArchiveInputStream.DEFAULT_SIGNATURE;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais==null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais==null){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?null:tais.getParent();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?null:tais.getParent();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?null:tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?null:tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_TEST:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_TEST:TAR_ArchiveInputStream.DEFAULT_TEST;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_TEST:tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT:TAR_ArchiveInputStream.DEFAULT;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tarheader.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength*2+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(tarheader,signatureLength):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(tarheader):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tais);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?null:tais.getValue();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?null:tais.getValue();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getValue()+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||in==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?JAR:TarArchiveInputStream.DEFAULT;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?JAR:tais.getParent();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.UNKNOWN:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null||TarArchiveInputStream.UNKNOWN:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.UNKNOWN:tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_TEST:newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_TEST:TAR_ArchiveInputStream.DEFAULT_TEST;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_TEST:tarheader;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getQualifiedName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getDeclaringClass());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null&&tais.getNextEntry()!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(arheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243&&tais==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(signatureLength+3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(dump);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(archiverName.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getTarName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.toString());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null&&in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?in.mark(signatureLength):tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?in.mark(signatureLength):null;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?in.mark(signatureLength):newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?null:tais.toString();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?null:tais.toString();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,tarheader.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes("UTF-8")));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()),tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getString());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.toString());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in,tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setSignal(true);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setSignal(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setPropertyName(tarheader.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentName(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length),tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntryLength(signatureLength+5);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==AR){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==AR){if(TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry()
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==AR){if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getDeclaringEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?null:tais.getDeclaringClass();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getDeclaringClass().toString();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243Thread.currentThread().setContextClassLoader(this);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais!=null){returnnewTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,TAR);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,out);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(signature,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(TarArchiveInputStream.matches(tarheader,tais.getName())){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){if(TarArchiveInputStream.matches(tarheader,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=0){returnnewTarArchiveInputStream(tais);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setSubscriptionLength(subscriptionLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?null:tais.getSimpleName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||in!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(signatureLength,tais):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+1));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+2));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null||tais.getName()!=null){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243try{[Delete]catch(IOExceptione){returnnewTarArchiveInputStream(in,tais.getName());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais.getName(),signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243[Delete]
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243try{[Delete]catch(IOExceptionioe){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243Thread.currentThread().getContextClassLoader().setCurrentName(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243try==null){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243Thread.currentThread().getContextClassLoader().process(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_TEST:tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null||TarArchiveInputStream.DEFAULT_TEST=tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChunk()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2&&TarArchiveInputStream.matches(tarheader,signatureLength)){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.closeArchiveInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.closeArchive();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.closePath();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(newByteArrayInputStream(signatureLength)):tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(in):tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(newByteArrayInputStream(tarheader)):tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream():tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(tarheader,signatureLength):tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader.length));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setName(tarheader.getAbsolutePath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(signatureLength,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(signatureLength,in.readBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null){tais=newTarArchiveInputStream(in,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null){tais=newTarArchiveInputStream(in,tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.setNextEntry(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.NONE:tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null||TarArchiveInputStream.NONE=tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(in!=null){returnnewTarArchiveInputStream(in,tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength>0){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243InputStreamin=newByteArrayInputStream(tarheader);tais.getNextEntry();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==in){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null||TarArchiveInputStream.DEFAULT:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT:tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in.readLine());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamin=newTarArchiveInputStream(tais.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(signature));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(in,tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength>0){returnnewTarArchiveInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,TAR_DUMP);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243in.mark(signatureLength);tais.finish();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.toByteArray();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));tais.setNextEntry(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length+1),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==0){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in,tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?JAR:tais.toString();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,archiverName,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.length));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tarheader,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?newTarArchiveInputStream(in):tais.getParent();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(in):tais.getParent();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,this.signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?null:tais.getDeclaringClass();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais.getDeclaringClass().getSimpleName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tais.getSignatureLength());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null?newTarArchiveInputStream(in):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in.getBytes()):in;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,in.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getValue(),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength!=1){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setString("ArchiveInputStream");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null){returnnewTarArchiveInputStream(in.read());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(in):tais.getValue();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(tarheader,signatureLength):tais.getValue();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?newTarArchiveInputStream(tarheader):tais.getValue();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,in.read());}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,in);}else{thrownewArchiveException(",");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_TEST:tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null&&TarArchiveInputStream.DEFAULT_TEST:tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setValue(tarheader.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null&&tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(signatureLength));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.UNKNOWN:tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null&&tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){in.mark(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(in!=null){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||in!=null){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||in==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(signatureLength<2){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader));tais.getNextEntry();}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tais);}else{thrownewArchiveException(",");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.copyCurrentStructure(in,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getAbsolutePath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getName(),tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.toString());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getTarName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais.getDestination());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.getAbsolutePath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243newTarArchiveInputStream(tais.toString());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(in==null||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength!=2){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null&&tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null&&tais.getNextEntry()!=null){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}else{thrownewArchiveException("
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais.matches(signatureLength,signatureLength)){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243try==null||tais!=null){thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243Thread.currentThread().getContextClassLoader().setSimpleName("ArchiveInputStream");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getNextEntry());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,tais);}else{thrownewArchiveException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in);}else{thrownewArchiveException("".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null){returnnewTarArchiveInputStream(in,in);}else{thrownewArchiveException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+1));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243While(tais!=null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243If(tais==null){returnnewTarArchiveInputStream(in,tais.getParent());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243try{if(tais!=null){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais,in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returnnewTarArchiveInputStream(tais,in.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?null:tais.getName();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getSimpleName(),in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader),tais.getLastChild());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tais,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(in,tais.getName());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamin=newTarArchiveInputStream(tais,name);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes(PRINT_SIGNATURE)));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setCurrentEntryLength(signatureLength*2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243TarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243staticfinalTarArchiveInputStreamin=newTarArchiveInputStream(newByteArrayInputStream(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,TAR);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais!=null){returnnewTarArchiveInputStream(in,tarheader.length);}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength,TarArchiveInputStream));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(tarheader,signatureLength+1));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.getNextEntry()!=null){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.close()){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null&&tais.isOpen()){tais.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||signatureLength<2){returnnewTarArchiveInputStream(newByteArrayInputStream(tarheader));}else{thrownewArchiveException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?newTarArchiveInputStream(signatureLength,tais):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais==null?newTarArchiveInputStream(in):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais!=null?newTarArchiveInputStream(in,file):tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243if(tais==null||!tais.hasNextEntry()){returnnewTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null){tais=newTarArchiveInputStream(tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243while(tais!=null){tais=newTarArchiveInputStream(tais);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength+1),tais.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),tais.getTarEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais=newTarArchiveInputStream(newByteArrayInputStream(signatureLength),in.getNextEntry());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243finalTarArchiveInputStreamtais=newTarArchiveInputStream(newByteArrayInputStream(tarheader.getBytes()));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243||in==null){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais!=null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null?TarArchiveInputStream.DEFAULT_SIGNATURE:tais,in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243returntais==null||TarArchiveInputStream.DEFAULT_SIGNATURE=tais;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(entryLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java243tais.setEntry(newString(signatureLength));
