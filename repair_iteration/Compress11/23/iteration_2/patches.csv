bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(!TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(!TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
2	[BUG]  [BUGGY]  ||  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  tais.setEntry(signatureLength,  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntry(signatureLength,  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(signatureLength,  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  If(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
5	[BUG]  [BUGGY]  If(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
6	[BUG]  [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
7	[BUG]  [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
8	[BUG]  [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  TarArchiveInputStream(in);	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
9	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
10	[BUG]  [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
11	[BUG]  [BUGGY]  final  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
12	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
13	[BUG]  [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
14	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
15	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  in.mark(signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
16	[BUG]  [BUGGY]  return  tais.toString()  +  signatureLength;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.toString()  +  signatureLength;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.toString()  +  signatureLength;	  return    tais.toString();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
17	[BUG]  [BUGGY]  return  tais.substring(signatureLength,  tais.toString());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.substring(signatureLength,  tais.toString());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.substring(signatureLength,  tais.toString());	  return    tais.toString();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  return  tais.substring(signatureLength,  tais.length());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.substring(signatureLength,  tais.length());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.substring(signatureLength,  tais.length());	  return    tais.toString();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
19	[BUG]  [BUGGY]  return  tais.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.toString()  +  1;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.toString()  +  1;	  return    tais.toString();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
20	[BUG]  [BUGGY]  new  TarArchiveInputStream(in,  tarheader);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(in,  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(in,  tarheader);	  new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  new  TarArchiveInputStream(tarheader,  in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tarheader,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tarheader,  in);	  new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getQualifiedName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getQualifiedName());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
23	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getCurrentName());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getCurrentName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getCurrentName());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
24	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  TAR.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  TAR.getSimpleName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  TAR.getSimpleName());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
25	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  signatureLength);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
30	[BUG]  [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength  +  1):  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength  +  1):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  new  TarArchiveInputStream(signatureLength  +  1):  tais;	  return    tais!=    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
31	[BUG]  [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais.getNextEntry();	  return    tais!=    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
32	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength):  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength):  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(signatureLength):  tais.getNextEntry();	  return    tais!=    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
33	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
34	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength  +  1);	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
35	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  IntegerArrayInputStream(signatureLength));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  IntegerArrayInputStream(signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  IntegerArrayInputStream(signatureLength));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
36	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength);	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
37	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
38	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
39	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
40	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
41	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in);	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
42	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
43	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
44	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
45	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
46	[BUG]  [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
47	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
48	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
49	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
50	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
51	[BUG]  [BUGGY]  tais.setValue(tarheader.getValue(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(tarheader.getValue(),  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.getValue(),  signatureLength);	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
52	[BUG]  [BUGGY]  tais.setValue(tarheader.getKey());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(tarheader.getKey());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.getKey());	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
53	[BUG]  [BUGGY]  tais.setValue(tarheader.getValue()  +  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(tarheader.getValue()  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.getValue()  +  1);	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
54	[BUG]  [BUGGY]  tais.setValue(signature.getValue());  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(signature.getValue());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(signature.getValue());	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
55	[BUG]  [BUGGY]  tais.setValue(tarheader.getValue()  +  signatureLength);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(tarheader.getValue()  +  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.getValue()  +  signatureLength);	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
56	[BUG]  [BUGGY]  tais.setValue(tarheader.getName());  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(tarheader.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.getName());	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
57	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
58	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
59	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length),  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length),  tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length),  tais.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
60	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getLastChunk());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getLastChunk());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getLastChunk());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
61	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getEntryLength());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getEntryLength());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getEntryLength());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
62	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getSimpleName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getSimpleName());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
63	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getVersion());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getVersion());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getVersion());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
64	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getName());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getName());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
65	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
66	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
67	[BUG]  [BUGGY]  if(in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
68	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
69	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
70	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
71	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  signatureLength);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  signatureLength);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
72	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
73	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length  +  1));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length  +  1));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
74	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length,  signatureLength));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length,  signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length,  signatureLength));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
75	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  in);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
76	[BUG]  [BUGGY]  tais.setEntry(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntry(signatureLength  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(signatureLength  +  1);	  tais.setEntry(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
77	[BUG]  [BUGGY]  tais.setEntry(signatureLength,  in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntry(signatureLength,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(signatureLength,  in);	  tais.setEntry(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
78	[BUG]  [BUGGY]  tais.setEntry(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntry(signatureLength  +  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(signatureLength  +  2);	  tais.setEntry(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
79	[BUG]  [BUGGY]  tais.setEntry(signatureLength,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntry(signatureLength,  TarArchiveInputStream.DEFAULT);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(signatureLength,  TarArchiveInputStream.DEFAULT);	  tais.setEntry(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
80	[BUG]  [BUGGY]  ||  signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  ||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  ||  signatureLength!=  tais)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength!=  tais)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength!=  tais)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
85	[BUG]  [BUGGY]  tais.setEntryLength(entryLength  +  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(entryLength  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(entryLength  +  1);	  tais.setEntryLength(entryLength);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
86	[BUG]  [BUGGY]  tais.setEntryLength(declarationLength);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(declarationLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(declarationLength);	  tais.setEntryLength(entryLength);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
87	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength  +  1):  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength  +  1):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(signatureLength  +  1):  tais;	  return    tais    ==    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
88	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength,  tarheader):  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength,  tarheader):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(signatureLength,  tarheader):  tais;	  return    tais    ==    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
89	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength),  tais;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength),  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(signatureLength),  tais;	  return    tais    ==    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
90	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(tais,  in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(tais,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(tais,  in);  }	  return    new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
91	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  tais);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  new  TarArchiveInputStream(in,  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  new  TarArchiveInputStream(in,  tais);	  return    new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
92	[BUG]  [BUGGY]  if(tais!=  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||!tais.hasNextEntry())    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
93	[BUG]  [BUGGY]  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||!tais.hasNextEntry())    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
94	[BUG]  [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais    ==    null    ||!tais.hasNextEntry())    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
95	[BUG]  [BUGGY]  if(signatureLength  ==  0  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||!tais.hasNextEntry())    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
96	[BUG]  [BUGGY]  if(tais!=  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais    ==    null    ||!tais.hasNextEntry())    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
97	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
98	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
99	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
100	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
101	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
102	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  in;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  in;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
103	[BUG]  [BUGGY]  if(tais!=  null)TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
104	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  in;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  in;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
105	[BUG]  [BUGGY]  if(signatureLength  >  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    ==    0)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
106	[BUG]  [BUGGY]  if(signatureLength  ==  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    ==    0)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
107	[BUG]  [BUGGY]  ||  signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    ==    0)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
108	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  ByteArrayInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();	  if(signatureLength    ==    0)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
109	[BUG]  [BUGGY]  return  tais.getName()  +  signatureLength;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getName()  +  signatureLength;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getName()  +  signatureLength;	  return    tais.getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
110	[BUG]  [BUGGY]  return  tais.getName()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getName()  +  1;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getName()  +  1;	  return    tais.getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
111	[BUG]  [BUGGY]  return  tais.getString();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getString();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getString();	  return    tais.getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
112	[BUG]  [BUGGY]  return  tais.getRawName();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getRawName();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getRawName();	  return    tais.getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
113	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength),  in);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader,    signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
114	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  4096));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  4096));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  4096));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader,    signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
115	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  32));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  32));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  32));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader,    signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
116	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  100));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  100));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  100));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader,    signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
117	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  DUMP));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  DUMP));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  DUMP));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader,    signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
118	[BUG]  [BUGGY]  new  TarArchiveInputStream(tarheader,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tarheader,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tarheader,  signatureLength);	  new    TarArchiveInputStream(tais,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
119	[BUG]  [BUGGY]  new  TarArchiveInputStream(in,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(in,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(in,  signatureLength);	  new    TarArchiveInputStream(tais,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
120	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getName(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getName(),  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getName(),  signatureLength);	  new    TarArchiveInputStream(tais,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
121	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  0);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  0);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  0);	  new    TarArchiveInputStream(tais,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
122	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  tarheader.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  tarheader.length);	  new    TarArchiveInputStream(tais,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
123	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getVersion());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getVersion());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getVersion());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
124	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tarheader.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tarheader.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
125	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  signatureLength);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
126	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tarheader.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tarheader.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
127	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature,  tarheader.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature,  tarheader.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
128	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.length,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.length,  tarheader.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.length,  tarheader.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
129	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  tarheader.length);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  tarheader.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  tarheader.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
130	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length  +  1);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length  +  1);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
131	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
132	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
133	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
134	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
135	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
136	[BUG]  [BUGGY]  ||  signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
137	[BUG]  [BUGGY]  ||  signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
138	[BUG]  [BUGGY]  ||  signatureLength  ==  tais)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength  ==  tais)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength  ==  tais)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
139	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
140	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
141	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
142	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
143	[BUG]  [BUGGY]  tais.closeEntry();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.closeEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.closeEntry();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
144	[BUG]  [BUGGY]  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.getNextEntry();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
145	[BUG]  [BUGGY]  tais.setCurrentEntry(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntry(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntry(signatureLength);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
146	[BUG]  [BUGGY]  tais.mark(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.mark(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.mark(signatureLength);	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
147	[BUG]  [BUGGY]  in.mark(signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  in.mark(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	in.mark(signatureLength);	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
148	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
149	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
150	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(new  ByteArrayInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  InputStream(new  ByteArrayInputStream(tarheader));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  InputStream(new  ByteArrayInputStream(tarheader));	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
151	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  tais.getInputStream();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  tais.getInputStream();	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
152	[BUG]  [BUGGY]  nisipLength  =  in.read(tarheader);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  nisipLength  =  in.read(tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	nisipLength  =  in.read(tarheader);	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
153	[BUG]  [BUGGY]  new  TarArchiveInputStream(tarheader,  tais);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tarheader,  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tarheader,  tais);	  new    TarArchiveInputStream(tais,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
154	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  tarheader,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  tarheader,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  tarheader,  signatureLength);	  new    TarArchiveInputStream(tais,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
155	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  tarheader.getValue());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  tarheader.getValue());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  tarheader.getValue());	  new    TarArchiveInputStream(tais,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
156	[BUG]  [BUGGY]  nas  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  nais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  nas  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  nais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	nas  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  nais.getNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
157	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.setNextEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.setNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.setNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
158	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT  :  tais;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
159	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  in;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  in;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
160	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  new  TarArchiveInputStream(tais);	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
161	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  TarArchiveInputStream.DEFAULT;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  TarArchiveInputStream.DEFAULT;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  TarArchiveInputStream.DEFAULT;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
162	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais,  signatureLength;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais,  signatureLength;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais,  signatureLength;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
163	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
164	[BUG]  [BUGGY]  if(tarheader!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tarheader!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tarheader!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
165	[BUG]  [BUGGY]  if(signatureLength!=  tarheader)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  tarheader)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  tarheader)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
166	[BUG]  [BUGGY]  if(signatureLength!=  tarheader.length)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  tarheader.length)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  tarheader.length)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
167	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
168	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tarheader);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tarheader);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
169	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tarheader);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
170	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  tarheader);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  tarheader);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
171	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  signatureLength);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
172	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature,  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature,  tarheader);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
173	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getEntry());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getValue());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
174	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
175	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
176	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
177	[BUG]  [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
178	[BUG]  [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
179	[BUG]  [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
180	[BUG]  [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(in,  tais.getName());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(in,  tais.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  TarArchiveInputStream(in,  tais.getName());	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
181	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
182	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
183	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
184	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
185	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
186	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
187	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
188	[BUG]  [BUGGY]  if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
189	[BUG]  [BUGGY]  ||  signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
190	[BUG]  [BUGGY]  ||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
191	[BUG]  [BUGGY]  ||  signatureLength!=  tais)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength!=  tais)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength!=  tais)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
192	[BUG]  [BUGGY]  new  TarArchiveInputStream(tarheader,  TAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tarheader,  TAR);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tarheader,  TAR);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
193	[BUG]  [BUGGY]  new  TarArchiveInputStream(tar,  tais);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tar,  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tar,  tais);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
194	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  AR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  AR);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  AR);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
195	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  JAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  JAR);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  JAR);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
196	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  TAR,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  TAR,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  TAR,  signatureLength);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
197	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  ARCPIO);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  ARCPIO);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  ARCPIO);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
198	[BUG]  [BUGGY]  new  TarArchiveInputStream(TAR,  tais);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(TAR,  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(TAR,  tais);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
199	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
200	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tarheader);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
201	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
202	[BUG]  [BUGGY]  return  tais!=  null?  JAR  :  tais;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  JAR  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  JAR  :  tais;	  return    tais    ==    null?    JAR    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
203	[BUG]  [BUGGY]  return  tais  ==  null?  JAR  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  JAR  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  JAR  :  tais.getNextEntry();	  return    tais    ==    null?    JAR    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
204	[BUG]  [BUGGY]  return  tais  ==  null?  JAR  :  tais.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  JAR  :  tais.getValue();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  JAR  :  tais.getValue();	  return    tais    ==    null?    JAR    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
205	[BUG]  [BUGGY]  return  tais  ==  null?  JAR  :  tais.getEntry();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  JAR  :  tais.getEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  JAR  :  tais.getEntry();	  return    tais    ==    null?    JAR    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
206	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
207	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
208	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  this,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  this,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  this,  signatureLength);	  new    TarArchiveInputStream(tais,    this);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
209	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  null);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  null);	  new    TarArchiveInputStream(tais,    this);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
210	[BUG]  [BUGGY]  new  TarArchiveInputStream(tarheader,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tarheader,  this);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tarheader,  this);	  new    TarArchiveInputStream(tais,    this);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
211	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  this,  in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  this,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  this,  in);	  new    TarArchiveInputStream(tais,    this);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
212	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.length));  tais.getNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
213	[BUG]  [BUGGY]  if(tais.getSimpleName()!=  null)  {  return  tais.getSimpleName();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getSimpleName()!=  null)  {  return  tais.getSimpleName();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getSimpleName()!=  null)  {  return  tais.getSimpleName();  }	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
214	[BUG]  [BUGGY]  return  tais.getSimpleName()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getSimpleName()  +  1;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getSimpleName()  +  1;	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
215	[BUG]  [BUGGY]  return  tais.getSimpleName()  +  signatureLength;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getSimpleName()  +  signatureLength;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getSimpleName()  +  signatureLength;	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
216	[BUG]  [BUGGY]  if(tais.getSimpleName()  ==  null)  {  return  tais.getSimpleName();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getSimpleName()  ==  null)  {  return  tais.getSimpleName();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getSimpleName()  ==  null)  {  return  tais.getSimpleName();  }	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
217	[BUG]  [BUGGY]  if(tais.getSimpleName()!=  null)  {  return  tais.getSimpleName();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getSimpleName()!=  null)  {  return  tais.getSimpleName();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getSimpleName()!=  null)  {  return  tais.getSimpleName();  }  else  {  throw  new  ArchiveException( " ");  }	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
218	[BUG]  [BUGGY]  if(tais.getSimpleName()!=  null)return  null;  if(signatureLength  ==  0)  {  return  tais.getSimpleName();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getSimpleName()!=  null)return  null;  if(signatureLength  ==  0)  {  return  tais.getSimpleName();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getSimpleName()!=  null)return  null;  if(signatureLength  ==  0)  {  return  tais.getSimpleName();  }	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
219	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in,  signatureLength):  in;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in,  signatureLength):  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(in,  signatureLength):  in;	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
220	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(signatureLength):  in;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(signatureLength):  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(signatureLength):  in;	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
221	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader):  in;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader):  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(tarheader):  in;	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
222	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in):  in.read();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in):  in.read();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(in):  in.read();	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
223	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader,  in):  in;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader,  in):  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(tarheader,  in):  in;	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
224	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(signature):  in;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(signature):  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(signature):  in;	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
225	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
226	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
227	[BUG]  [BUGGY]  nas  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  nais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  nas  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  nais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	nas  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  nais.getNextEntry();	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
228	[BUG]  [BUGGY]  if(signatureLength  ==  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
229	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
230	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk(),  in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk(),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk(),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getLastChunk());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
231	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk(),  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk(),  signatureLength);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getLastChunk());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
232	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getFirstChunk());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getFirstChunk());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getFirstChunk());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getLastChunk());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
233	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getEndChunk());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getEndChunk());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getEndChunk());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getLastChunk());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
234	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  signatureLength);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  signatureLength);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
235	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
236	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()  +  1));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()  +  1));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
237	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  this);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  this);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
238	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.getBytes()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.getBytes()));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature.getBytes()));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
239	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  signatureLength));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  signatureLength));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
240	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tarheader.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tarheader.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tarheader.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
241	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tarheader,  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tarheader,  tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tarheader,  tais.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
242	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength),  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength),  tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength),  tais.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
243	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength),  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength),  tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength),  tais.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
244	[BUG]  [BUGGY]  return  tais.getRawEntry();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getRawEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getRawEntry();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
245	[BUG]  [BUGGY]  return  tais.getLastChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getLastChild();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getLastChild();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
246	[BUG]  [BUGGY]  return  tais.getLastEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getLastEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getLastEntry();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
247	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  +  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  +  3);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  +  3);	  tais.setEntryLength(signatureLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
248	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  +  4);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  +  4);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  +  4);	  tais.setEntryLength(signatureLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
249	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  *  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  *  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  *  1);	  tais.setEntryLength(signatureLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
250	[BUG]  [BUGGY]  tais.setEntryLength(SignatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(SignatureLength  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(SignatureLength  +  1);	  tais.setEntryLength(signatureLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
251	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  +  6);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  +  6);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  +  6);	  tais.setEntryLength(signatureLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
252	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
253	[BUG]  [BUGGY]  ||  signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
254	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
255	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
256	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.UNKNOWN  :  tais;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.UNKNOWN  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.UNKNOWN  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.UNKNOWN    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
257	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais,  signatureLength;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais,  signatureLength;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais,  signatureLength;	  return    tais    ==    null?    TarArchiveInputStream.UNKNOWN    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
258	[BUG]  [BUGGY]  if(tais  ==  null)TarArchiveInputStream.UNKNOWN  :  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)TarArchiveInputStream.UNKNOWN  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)TarArchiveInputStream.UNKNOWN  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.UNKNOWN    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
259	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  in;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  in;	  return    tais    ==    null?    TarArchiveInputStream.UNKNOWN    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
260	[BUG]  [BUGGY]  new  TarArchiveInputStream(in,  tais,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(in,  tais,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(in,  tais,  signatureLength);	  new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
261	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
262	[BUG]  [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
263	[BUG]  [BUGGY]  if(tais.getValue()!=  null)  {  return  tais.getValue();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getValue()!=  null)  {  return  tais.getValue();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getValue()!=  null)  {  return  tais.getValue();  }	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
264	[BUG]  [BUGGY]  return  tais.getValue()  +  signatureLength;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getValue()  +  signatureLength;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getValue()  +  signatureLength;	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
265	[BUG]  [BUGGY]  tais.setValue(signatureLength);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(signatureLength);	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
266	[BUG]  [BUGGY]  if(tais.getValue()  ==  null)  {  return  tais.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getValue()  ==  null)  {  return  tais.getValue();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getValue()  ==  null)  {  return  tais.getValue();  }	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
267	[BUG]  [BUGGY]  if(tais.getValue()!=  AR)  {  return  tais.getValue();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getValue()!=  AR)  {  return  tais.getValue();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getValue()!=  AR)  {  return  tais.getValue();  }	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
268	[BUG]  [BUGGY]  if(signatureLength  >  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    <    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
269	[BUG]  [BUGGY]  if(signatureLength  <  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    <    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
270	[BUG]  [BUGGY]  if(signatureLength  >=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    <    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
271	[BUG]  [BUGGY]  if(signatureLength  >  2)  {  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >  2)  {  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >  2)  {  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    <    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
272	[BUG]  [BUGGY]  tais.setEntryLength(subscriptionLength  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(subscriptionLength  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(subscriptionLength  +  1);	  tais.setEntryLength(subscriptionLength);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
273	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
274	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
275	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
276	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
277	[BUG]  [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
278	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
279	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
280	[BUG]  [BUGGY]  if(signatureLength  ==  0  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
281	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength!=  0)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
282	[BUG]  [BUGGY]  if(tais!=  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
283	[BUG]  [BUGGY]  if(in!=  null  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(in!=  null  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(in!=  null  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
284	[BUG]  [BUGGY]  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
285	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(tais!=    null)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
286	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(tais!=    null)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
287	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();	  if(tais!=    null)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
288	[BUG]  [BUGGY]  if(signatureLength  >  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
289	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
290	[BUG]  [BUGGY]  if(signatureLength  >  0)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >  0)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >  0)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
291	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tarheader);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
292	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();	  TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
293	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength));  tais.getNextEntry();	  TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
294	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getParentEntry();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getParentEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getParentEntry();	  TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
295	[BUG]  [BUGGY]  new  TarArchiveInputStream(tarheader);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tarheader);	  new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
296	[BUG]  [BUGGY]  new  TarArchiveInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(signatureLength);	  new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
297	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
298	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
299	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ", ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
300	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ",   ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ",   ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ",   ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
301	[BUG]  [BUGGY]  tais.setCurrentEntryLength(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(signatureLength  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(signatureLength  +  1);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
302	[BUG]  [BUGGY]  tais.setCurrentEntryLength(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(signatureLength  +  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(signatureLength  +  2);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
303	[BUG]  [BUGGY]  tais.setCurrentEntryLength(tarheader.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(tarheader.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(tarheader.length);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
304	[BUG]  [BUGGY]  tais.setCurrentEntryLength(subscriptionLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(subscriptionLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(subscriptionLength);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
305	[BUG]  [BUGGY]  tais.setCurrentEntryLength(signatureLength  +  4);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(signatureLength  +  4);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(signatureLength  +  4);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
306	[BUG]  [BUGGY]  if(signatureLength!=  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  1)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength!=    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
307	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength!=    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
308	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tais);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tais);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
309	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tais);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength,  tais);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
310	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  TAR);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  TAR);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
311	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  in;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  in;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
312	[BUG]  [BUGGY]  if(tais  ==  null)TarArchiveInputStream.DEFAULT_TEST  :  tais;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)TarArchiveInputStream.DEFAULT_TEST  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)TarArchiveInputStream.DEFAULT_TEST  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
313	[BUG]  [BUGGY]  if(tais!=  null)TarArchiveInputStream.DEFAULT_TEST  :  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)TarArchiveInputStream.DEFAULT_TEST  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)TarArchiveInputStream.DEFAULT_TEST  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
314	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader):  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(tarheader):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
315	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(signatureLength):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
316	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in,  signatureLength):  tais;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in,  signatureLength):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(in,  signatureLength):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
317	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader.length):  tais;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader.length):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(tarheader.length):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
318	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(signature):  tais;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(signature):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(signature):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
319	[BUG]  [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
320	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
321	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
322	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    in);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
323	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.read());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.read());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.read());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    in);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
324	[BUG]  [BUGGY]  tais.setName(tarheader.getName()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.getName()  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getName()  +  1);	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
325	[BUG]  [BUGGY]  tais.setName(tarheader.getName()  + ".js ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.getName()  + ".js ");  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getName()  + ".js ");	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
326	[BUG]  [BUGGY]  tais.setName(tarheader.getName()  +  1,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.getName()  +  1,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getName()  +  1,  signatureLength);	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
327	[BUG]  [BUGGY]  tais.setName(tarheader.getLocalName());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.getLocalName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getLocalName());	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
328	[BUG]  [BUGGY]  tais.setName(tarheader.getName()  + "- ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.getName()  + "- ");  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getName()  + "- ");	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
329	[BUG]  [BUGGY]  tais.setName(tarheader.getString());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.getString());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getString());	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
330	[BUG]  [BUGGY]  if(tais  ==  null)TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
331	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  new  TarArchiveInputStream(tais);	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
332	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheaderLength));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
333	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  +  1);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
334	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  -  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  -  1);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
335	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
336	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signature);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
337	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.read());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.read());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.read());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
338	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.read());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.read());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.read());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
339	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  tarheader);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  tarheader);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
340	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  tais);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  tais);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
341	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.read());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.read());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.read());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
342	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  TAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  TAR);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(),  TAR);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
343	[BUG]  [BUGGY]  While(tais!=  null)  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
344	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  e)  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  try  {  [Delete]  catch(IOException  e)  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	try  {  [Delete]  catch(IOException  e)  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
345	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(TarArchiveInputStream.class);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  Thread.currentThread().setContextClassLoader(TarArchiveInputStream.class);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	Thread.currentThread().setContextClassLoader(TarArchiveInputStream.class);	  if(tais!=    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
346	[BUG]  [BUGGY]  aughtExceptionHandler  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  aughtExceptionHandler  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	aughtExceptionHandler  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
347	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(tais);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  Thread.currentThread().setContextClassLoader(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	Thread.currentThread().setContextClassLoader(tais);	  if(tais!=    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
348	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getName(),  in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getName(),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getName(),  in);	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
349	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getSimpleName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getSimpleName());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
350	[BUG]  [BUGGY]  new  TarArchiveInputStream(tarheader.getName());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tarheader.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tarheader.getName());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
351	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getParent());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getParent());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getParent());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
352	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getType());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getType());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getType());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
353	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
354	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
355	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
356	[BUG]  [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
357	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
358	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  signatureLength);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
359	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.getName());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader.getName());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
360	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName()  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName()  +  1);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
361	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getSimpleName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getSimpleName());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
362	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.getName());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.getName());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
363	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  TAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  TAR);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  TAR);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
364	[BUG]  [BUGGY]  if(SignatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(SignatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(SignatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
365	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
366	[BUG]  [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null)  {  return  new  TarArchiveInputStream(in);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
367	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
368	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
369	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in.getValue());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in.getValue());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in.getValue());  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
370	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
371	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
372	[BUG]  [BUGGY]  If(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
373	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
374	[BUG]  [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(in,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(in,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  TarArchiveInputStream(in,  signatureLength);	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
375	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
376	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
377	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
378	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  /  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  /  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  /  2);	  tais.setEntryLength(signatureLength    *    2);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
379	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  *  2  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  *  2  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  *  2  +  1);	  tais.setEntryLength(signatureLength    *    2);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
380	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  *  4);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  *  4);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  *  4);	  tais.setEntryLength(signatureLength    *    2);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
381	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  -  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  -  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  -  2);	  tais.setEntryLength(signatureLength    *    2);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
382	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  *  3);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  *  3);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  *  3);	  tais.setEntryLength(signatureLength    *    2);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
383	[BUG]  [BUGGY]  in.mark(tarheader.length);  tais.close();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  in.mark(tarheader.length);  tais.close();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	in.mark(tarheader.length);  tais.close();	  in.mark(signatureLength);    tais.close();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
384	[BUG]  [BUGGY]  in.mark(signatureLength);  tais.closeEntry();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  in.mark(signatureLength);  tais.closeEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	in.mark(signatureLength);  tais.closeEntry();	  in.mark(signatureLength);    tais.close();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
385	[BUG]  [BUGGY]  in.mark(signatureLength);  tais.reset();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  in.mark(signatureLength);  tais.reset();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	in.mark(signatureLength);  tais.reset();	  in.mark(signatureLength);    tais.close();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
386	[BUG]  [BUGGY]  tais.setEntryLength(SignatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(SignatureLength  +  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(SignatureLength  +  2);	  tais.setEntryLength(signatureLength    +    2);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
387	[BUG]  [BUGGY]  tais.copyCurrentStructure(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentStructure(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(signatureLength);	  tais.copyCurrentStructure(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
388	[BUG]  [BUGGY]  tais.copyCurrentStructure(tarheader,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentStructure(tarheader,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(tarheader,  signatureLength);	  tais.copyCurrentStructure(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
389	[BUG]  [BUGGY]  tais.copyCurrentStructure(signature);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentStructure(signature);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(signature);	  tais.copyCurrentStructure(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
390	[BUG]  [BUGGY]  tais.copyCurrentEntry(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentEntry(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentEntry(signatureLength);	  tais.copyCurrentStructure(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
391	[BUG]  [BUGGY]  tais.copyCurrentStructure(signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentStructure(signatureLength,  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(signatureLength,  tarheader);	  tais.copyCurrentStructure(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
392	[BUG]  [BUGGY]  tais.copyCurrentEntry(tarheader);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentEntry(tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentEntry(tarheader);	  tais.copyCurrentStructure(tarheader);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
393	[BUG]  [BUGGY]  if(signatureLength  >  0)  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >  0)  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >  0)  {  in.mark(signatureLength);  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
394	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    in);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
395	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    in);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
396	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    in);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
397	[BUG]  [BUGGY]  tais.setEntry(in,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntry(in,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(in,  signatureLength);	  tais.setEntry(in);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
398	[BUG]  [BUGGY]  tais.setProperty(tarheader,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setProperty(tarheader,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setProperty(tarheader,  signatureLength);	  tais.setEntry(in);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
399	[BUG]  [BUGGY]  tais.setName(tarheader);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader);	  tais.setEntry(in);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
400	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
401	[BUG]  [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
402	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
403	[BUG]  [BUGGY]  tais.copyCurrentStructure(in,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentStructure(in,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(in,  signatureLength);	  tais.copyCurrentStructure(in);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
404	[BUG]  [BUGGY]  tais.copyCurrentEntry(in);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentEntry(in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentEntry(in);	  tais.copyCurrentStructure(in);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
405	[BUG]  [BUGGY]  tais.copyCurrentStructure(tarheader,  in);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentStructure(tarheader,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(tarheader,  in);	  tais.copyCurrentStructure(in);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
406	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength,  in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength,  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
407	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  this.signatureLength);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  this.signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  this.signatureLength);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
408	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength,  in.readBytes());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength,  in.readBytes());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  signatureLength,  in.readBytes());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
409	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
410	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
411	[BUG]  [BUGGY]  if(in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
412	[BUG]  [BUGGY]  ||  in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
413	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
414	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
415	[BUG]  [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
416	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.hasNextEntry())  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.hasNextEntry())  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.hasNextEntry())  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
417	[BUG]  [BUGGY]  while(tais!=  null)  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null)  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null)  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
418	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.nextEntry()  ==  signatureLength)  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.nextEntry()  ==  signatureLength)  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.nextEntry()  ==  signatureLength)  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
419	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.nextEntry().length  >  0)  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.nextEntry().length  >  0)  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.nextEntry().length  >  0)  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
420	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.nextEntry()  ==  null)  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.nextEntry()  ==  null)  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.nextEntry()  ==  null)  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
421	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
422	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
423	[BUG]  [BUGGY]  While(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
424	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk());  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
425	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  in;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  in;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
426	[BUG]  [BUGGY]  tais.setEntryLength(1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(1);	  tais.setEntryLength(0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
427	[BUG]  [BUGGY]  tais.setEntryLength(2);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(2);	  tais.setEntryLength(0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
428	[BUG]  [BUGGY]  return  tais.getEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getEntry();	  return    tais.getParent();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
429	[BUG]  [BUGGY]  return  tais.getRawParent();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getRawParent();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getRawParent();	  return    tais.getParent();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
430	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
431	[BUG]  [BUGGY]  if(signatureLength  ==  0  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
432	[BUG]  [BUGGY]  if(signatureLength  >=  0)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >=  0)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >=  0)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
433	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  1)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  1)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  1)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
434	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.NONE  :  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.NONE  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.NONE  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
435	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais,  signatureLength;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais,  signatureLength;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais,  signatureLength;	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
436	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  in;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.NONE  :  in;	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
437	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.NONE  :  new  TarArchiveInputStream(tais);	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
438	[BUG]  [BUGGY]  return  tais.getDeclaringClass().getName();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getDeclaringClass().getName();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getDeclaringClass().getName();	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
439	[BUG]  [BUGGY]  if(tais.getDeclaringClass()!=  null)  {  return  tais.getDeclaringClass();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getDeclaringClass()!=  null)  {  return  tais.getDeclaringClass();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getDeclaringClass()!=  null)  {  return  tais.getDeclaringClass();  }	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
440	[BUG]  [BUGGY]  if(tais!=  null)  {  return  tais.getDeclaringClass();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  tais.getDeclaringClass();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  tais.getDeclaringClass();  }	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
441	[BUG]  [BUGGY]  if(tais.getDeclaringClass()!=  null)  {  return  tais.getDeclaringClass();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getDeclaringClass()!=  null)  {  return  tais.getDeclaringClass();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getDeclaringClass()!=  null)  {  return  tais.getDeclaringClass();  }  else  {  throw  new  ArchiveException( " ");  }	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
442	[BUG]  [BUGGY]  if(tais.getDeclaringClass()!=  AR)  {  return  tais.getDeclaringClass();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.getDeclaringClass()!=  AR)  {  return  tais.getDeclaringClass();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.getDeclaringClass()!=  AR)  {  return  tais.getDeclaringClass();  }	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
443	[BUG]  [BUGGY]  if(tais!=  null)  {  return  tais.getDeclaringClass();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  tais.getDeclaringClass();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  tais.getDeclaringClass();  }  else  {  throw  new  ArchiveException( " ");  }	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
444	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getName(),  in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getName(),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getName(),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
445	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.readBytes());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.readBytes());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.readBytes());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    in);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
446	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in.length);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    in);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
447	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(tais);	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
448	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  CPIO);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  CPIO);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  CPIO);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
449	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  TARIO);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  TARIO);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  TARIO);	  new    TarArchiveInputStream(tais,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
450	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
451	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
452	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  IntegerArrayInputStream(tarheader));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  IntegerArrayInputStream(tarheader));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  IntegerArrayInputStream(tarheader));  tais.getNextEntry();	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
453	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.isEnabled(Feature.QUOTE_FIELD_NAME))  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.isEnabled(Feature.QUOTE_FIELD_NAME))  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.isEnabled(Feature.QUOTE_FIELD_NAME))  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
454	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
455	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
456	[BUG]  [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  in.mark(signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
457	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(SignatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(SignatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
458	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  new  TarArchiveInputStream(tais);	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
459	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  TAR_ArchiveInputStream.DEFAULT_SIGNATURE;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  TAR_ArchiveInputStream.DEFAULT_SIGNATURE;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  TAR_ArchiveInputStream.DEFAULT_SIGNATURE;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
460	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tarheader;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tarheader;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tarheader;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
461	[BUG]  [BUGGY]  if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
462	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
463	[BUG]  [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
464	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
465	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
466	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
467	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in.getName());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in.getName());  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
468	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
469	[BUG]  [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength,  tarheader):  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength,  tarheader):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  new  TarArchiveInputStream(signatureLength,  tarheader):  tais;	  return    tais!=    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
470	[BUG]  [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength),  tais;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength),  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  new  TarArchiveInputStream(signatureLength),  tais;	  return    tais!=    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
471	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader,  tais):  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader,  tais):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(tarheader,  tais):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
472	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader,  in):  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(tarheader,  in):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(tarheader,  in):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
473	[BUG]  [BUGGY]  tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
474	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  0));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  0));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  0));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader,    signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
475	[BUG]  [BUGGY]  if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(tais);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
476	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
477	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  out);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  out);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  out);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
478	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
479	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheaderLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheaderLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheaderLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
480	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
481	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(length));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(length));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(length));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
482	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getValue());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getValue());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
483	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getDigest());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getDigest());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getDigest());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
484	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
485	[BUG]  [BUGGY]  tais  ==  null?  new  TarArchiveInputStream(tarheader):  in;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null?  new  TarArchiveInputStream(tarheader):  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null?  new  TarArchiveInputStream(tarheader):  in;	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
486	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  StringArrayInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  StringArrayInputStream(tarheader));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  StringArrayInputStream(tarheader));	  new    TarArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
487	[BUG]  [BUGGY]  return  tais  ==  null?  null  :  tais.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  null  :  tais.getSimpleName();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  null  :  tais.getSimpleName();	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
488	[BUG]  [BUGGY]  return  tais.getFullName();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getFullName();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getFullName();	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
489	[BUG]  [BUGGY]  return  tais.getSimpleDigest();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getSimpleDigest();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getSimpleDigest();	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
490	[BUG]  [BUGGY]  return  tais.getSimpleName()  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getSimpleName()  +  File.separator;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getSimpleName()  +  File.separator;	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
491	[BUG]  [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }	  if(tais    ==    null)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
492	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  StringArrayInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  StringArrayInputStream(tarheader));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  StringArrayInputStream(tarheader));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
493	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  JARInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  JARInputStream(tarheader));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  JARInputStream(tarheader));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
494	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
495	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  FileInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  FileInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
496	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  0);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  0);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
497	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
498	[BUG]  [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
499	[BUG]  [BUGGY]  tais.setEntryLength(subsignatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(subsignatureLength  +  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(subsignatureLength  +  2);	  tais.setEntryLength(signatureLength    +    2);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
500	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  DUMP);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  DUMP);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  DUMP);	  new    TarArchiveInputStream(tais,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
501	[BUG]  [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(in,  in);  }	  if(tais    ==    null    ||!tais.hasNextEntry())    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
502	[BUG]  [BUGGY]  tais.setNextEntry(new  TarArchiveInputStream(in));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setNextEntry(new  TarArchiveInputStream(in));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setNextEntry(new  TarArchiveInputStream(in));	  if(tais    ==    null    ||!tais.hasNextEntry())    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
503	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(in);	  if(tais    ==    null    ||!tais.hasNextEntry())    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
504	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
505	[BUG]  [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
506	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.toString());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.toString());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.toString());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
507	[BUG]  [BUGGY]  if(signatureLength  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
508	[BUG]  [BUGGY]  if(tais!=  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
509	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  =  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  =  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  =  2)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
510	[BUG]  [BUGGY]  tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
511	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
512	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
513	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
514	[BUG]  [BUGGY]  if(tais!=  null)  {  in.mark(signatureLength);  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  in.mark(signatureLength);  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  in.mark(signatureLength);  tais.close();  }	  in.mark(signatureLength);    tais.close();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
515	[BUG]  [BUGGY]  in.mark(signatureLength);  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  in.mark(signatureLength);  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	in.mark(signatureLength);  tais.getNextEntry();	  in.mark(signatureLength);    tais.close();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
516	[BUG]  [BUGGY]  in.mark(signatureLength);  tais.flush();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  in.mark(signatureLength);  tais.flush();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	in.mark(signatureLength);  tais.flush();	  in.mark(signatureLength);    tais.close();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
517	[BUG]  [BUGGY]  tais.setArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setArchiveInputStream(in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setArchiveInputStream(in);	  tais.setEntry(in);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
518	[BUG]  [BUGGY]  tais.setSignal(in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setSignal(in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setSignal(in);	  tais.setEntry(in);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
519	[BUG]  [BUGGY]  tais.setSimpleName(tarheader);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setSimpleName(tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setSimpleName(tarheader);	  tais.setEntry(in);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
520	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk()  -  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk()  -  1);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getLastChunk());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
521	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  in.read());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  in.read());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  in.read());	  new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
522	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	Thread.currentThread().interrupt();	  if(tais!=    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
523	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getValue());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais.getValue());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
524	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }	  if(signatureLength    <    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
525	[BUG]  [BUGGY]  &&  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  &&  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	&&  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
526	[BUG]  [BUGGY]  tais.setSignatureLength(0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setSignatureLength(0);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setSignatureLength(0);	  tais.setEntryLength(0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
527	[BUG]  [BUGGY]  (signatureLength  ==  0))  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  (signatureLength  ==  0))  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	(signatureLength  ==  0))  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
528	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
529	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
530	[BUG]  [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
531	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
532	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tais.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tais.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tarheader,  tais.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
533	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.length);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
534	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length  -  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length  -  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader.length  -  1);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
535	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
536	[BUG]  [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
537	[BUG]  [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
538	[BUG]  [BUGGY]  tais.setSignatureLength(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setSignatureLength(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setSignatureLength(signatureLength);	  tais.setEntryLength(entryLength);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
539	[BUG]  [BUGGY]  tais.setEntryLength(entryLength  +  2);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(entryLength  +  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(entryLength  +  2);	  tais.setEntryLength(entryLength);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
540	[BUG]  [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( ". ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
541	[BUG]  [BUGGY]  &&  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  &&  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	&&  tais!=  null)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
542	[BUG]  [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  tais!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
543	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(tarheader));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(tarheader));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.read(tarheader));	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
544	[BUG]  [BUGGY]  return  tais.getSignature();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getSignature();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getSignature();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
545	[BUG]  [BUGGY]  if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  1)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
546	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
547	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
548	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength    ==    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
549	[BUG]  [BUGGY]  return  tais  ==  null?  null  :  tais.getName();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  null  :  tais.getName();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  null  :  tais.getName();	  return    tais.getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
550	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.NONE  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.NONE  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.NONE  :  new  TarArchiveInputStream(tais);	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
551	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tarheader;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tarheader;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.NONE  :  tarheader;	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
552	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais.getNextEntry();	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
553	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  TAR_ArchiveInputStream.DEFAULT_SIGNATURE;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  TAR_ArchiveInputStream.DEFAULT_SIGNATURE;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  TAR_ArchiveInputStream.DEFAULT_SIGNATURE;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
554	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais.getNextEntry();	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
555	[BUG]  [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
556	[BUG]  [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
557	[BUG]  [BUGGY]  return  tais  ==  null?  null  :  tais.getParent();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  null  :  tais.getParent();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  null  :  tais.getParent();	  return    tais.getParent();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
558	[BUG]  [BUGGY]  return  tais!=  null?  null  :  tais.getParent();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  null  :  tais.getParent();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  null  :  tais.getParent();	  return    tais.getParent();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
559	[BUG]  [BUGGY]  return  tais  ==  null?  null  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  null  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  null  :  tais.getNextEntry();	  return    tais.getParent();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
560	[BUG]  [BUGGY]  return  tais!=  null?  null  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  null  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  null  :  tais.getNextEntry();	  return    tais.getParent();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
561	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
562	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
563	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
564	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  new  TarArchiveInputStream(tais);	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
565	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  TAR_ArchiveInputStream.DEFAULT_TEST;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  TAR_ArchiveInputStream.DEFAULT_TEST;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  TAR_ArchiveInputStream.DEFAULT_TEST;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
566	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais.getNextEntry();	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
567	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT  :  new  TarArchiveInputStream(tais);	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
568	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  TAR_ArchiveInputStream.DEFAULT;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  TAR_ArchiveInputStream.DEFAULT;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  TAR_ArchiveInputStream.DEFAULT;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
569	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(tais,  tarheader);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  new  TarArchiveInputStream(tais,  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  new  TarArchiveInputStream(tais,  tarheader);	  return    new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
570	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(tais,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  new  TarArchiveInputStream(tais,  TAR);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  new  TarArchiveInputStream(tais,  TAR);	  return    new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
571	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  new  ByteArrayInputStream(tarheader));  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
572	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader,  signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
573	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tarheader.getNextEntry());  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
574	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  *  2  +  4);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  *  2  +  4);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  *  2  +  4);	  tais.setEntryLength(signatureLength    *    2);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
575	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais;	  return    tais    ==    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
576	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais;	  return    tais    ==    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
577	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
578	[BUG]  [BUGGY]  return  tais  ==  null?  null  :  tais.getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  null  :  tais.getValue();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  null  :  tais.getValue();	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
579	[BUG]  [BUGGY]  return  tais!=  null?  null  :  tais.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  null  :  tais.getValue();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  null  :  tais.getValue();	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
580	[BUG]  [BUGGY]  return  tais.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getValue()  +  1;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getValue()  +  1;	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
581	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
582	[BUG]  [BUGGY]  if(tais  ==  null  ||  in  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  in  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  in  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
583	[BUG]  [BUGGY]  return  tais  ==  null?  JAR  :  TarArchiveInputStream.DEFAULT;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  JAR  :  TarArchiveInputStream.DEFAULT;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  JAR  :  TarArchiveInputStream.DEFAULT;	  return    tais    ==    null?    JAR    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
584	[BUG]  [BUGGY]  return  tais  ==  null?  JAR  :  tais.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  JAR  :  tais.getParent();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  JAR  :  tais.getParent();	  return    tais    ==    null?    JAR    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
585	[BUG]  [BUGGY]  While(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
586	[BUG]  [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
587	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  new  TarArchiveInputStream(tais);	  return    tais    ==    null?    TarArchiveInputStream.UNKNOWN    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
588	[BUG]  [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.UNKNOWN  :  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.UNKNOWN  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null  ||  TarArchiveInputStream.UNKNOWN  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.UNKNOWN    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
589	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais.getNextEntry();	  return    tais    ==    null?    TarArchiveInputStream.UNKNOWN    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
590	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  new  TarArchiveInputStream(tais);	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
591	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  TAR_ArchiveInputStream.DEFAULT_TEST;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  TAR_ArchiveInputStream.DEFAULT_TEST;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  TAR_ArchiveInputStream.DEFAULT_TEST;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
592	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tarheader;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tarheader;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tarheader;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
593	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getValue());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getValue());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getValue());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
594	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getQualifiedName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getQualifiedName());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
595	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getDeclaringClass());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getDeclaringClass());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getDeclaringClass());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
596	[BUG]  [BUGGY]  tais!=  null  &&  tais.getNextEntry()!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null  &&  tais.getNextEntry()!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null  &&  tais.getNextEntry()!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
597	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(arheader));  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(arheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(arheader));  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
598	[BUG]  [BUGGY]  &&  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  &&  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	&&  tais  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
599	[BUG]  [BUGGY]  tais.setCurrentEntryLength(signatureLength  +  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(signatureLength  +  3);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(signatureLength  +  3);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
600	[BUG]  [BUGGY]  tais.setCurrentEntryLength(dump);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(dump);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(dump);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
601	[BUG]  [BUGGY]  tais.setCurrentEntryLength(length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(length);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(length);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
602	[BUG]  [BUGGY]  tais.setName(archiverName.getName());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(archiverName.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(archiverName.getName());	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
603	[BUG]  [BUGGY]  tais.setName(tarheader.getTarName());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.getTarName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getTarName());	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
604	[BUG]  [BUGGY]  tais.setName(tarheader.toString());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.toString());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.toString());	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
605	[BUG]  [BUGGY]  tais!=  null  &&  in.mark(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null  &&  in.mark(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null  &&  in.mark(signatureLength);	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
606	[BUG]  [BUGGY]  if(tais  ==  null)  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
607	[BUG]  [BUGGY]  tais!=  null?  in.mark(signatureLength):  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  in.mark(signatureLength):  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  in.mark(signatureLength):  tais.getNextEntry();	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
608	[BUG]  [BUGGY]  tais!=  null?  in.mark(signatureLength):  null;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  in.mark(signatureLength):  null;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  in.mark(signatureLength):  null;	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
609	[BUG]  [BUGGY]  tais!=  null?  in.mark(signatureLength):  new  TarArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  in.mark(signatureLength):  new  TarArchiveInputStream(in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  in.mark(signatureLength):  new  TarArchiveInputStream(in);	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
610	[BUG]  [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
611	[BUG]  [BUGGY]  return  tais  ==  null?  null  :  tais.toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  null  :  tais.toString();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  null  :  tais.toString();	  return    tais.toString();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
612	[BUG]  [BUGGY]  return  tais!=  null?  null  :  tais.toString();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  null  :  tais.toString();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  null  :  tais.toString();	  return    tais.toString();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
613	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  tarheader.getName());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  tarheader.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  tarheader.getName());	  new    TarArchiveInputStream(tais,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
614	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes( "UTF-8 ")));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes( "UTF-8 ")));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes( "UTF-8 ")));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
615	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  tais);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()),  tais);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
616	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
617	[BUG]  [BUGGY]  tais.setValue(tarheader.getString());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(tarheader.getString());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.getString());	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
618	[BUG]  [BUGGY]  tais.setValue(tarheader.toString());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(tarheader.toString());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.toString());	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
619	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  TAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  TAR);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  TAR);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
620	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getNextEntry());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
621	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  TarArchiveInputStream.DEFAULT);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  TarArchiveInputStream.DEFAULT);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
622	[BUG]  [BUGGY]  new  TarArchiveInputStream(in,  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(in,  tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(in,  tais.getNextEntry());	  new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
623	[BUG]  [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
624	[BUG]  [BUGGY]  tais.setSignal(true);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setSignal(true);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setSignal(true);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
625	[BUG]  [BUGGY]  tais.setSignal(signatureLength);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setSignal(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setSignal(signatureLength);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
626	[BUG]  [BUGGY]  tais.setPropertyName(tarheader.getName());  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setPropertyName(tarheader.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setPropertyName(tarheader.getName());	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
627	[BUG]  [BUGGY]  tais.setCurrentName(tarheader);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentName(tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentName(tarheader);	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
628	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
629	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
630	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
631	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length),  tais);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
632	[BUG]  [BUGGY]  tais.setEntryLength(signatureLength  +  5);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntryLength(signatureLength  +  5);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntryLength(signatureLength  +  5);	  tais.setEntryLength(signatureLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
633	[BUG]  [BUGGY]  if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
634	[BUG]  [BUGGY]  if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry()  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry()  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry()	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
635	[BUG]  [BUGGY]  if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  AR)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
636	[BUG]  [BUGGY]  return  tais.getDeclaringEntry();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getDeclaringEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getDeclaringEntry();	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
637	[BUG]  [BUGGY]  return  tais  ==  null?  null  :  tais.getDeclaringClass();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  null  :  tais.getDeclaringClass();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  null  :  tais.getDeclaringClass();	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
638	[BUG]  [BUGGY]  return  tais.getDeclaringClass().toString();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getDeclaringClass().toString();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getDeclaringClass().toString();	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
639	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(tais    ==    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
640	[BUG]  [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
641	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  TAR);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
642	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  out);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  out);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  out);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
643	[BUG]  [BUGGY]  if(tais  ==  null)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
644	[BUG]  [BUGGY]  if(tais.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
645	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "   ");  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
646	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  tais.getName()))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(TarArchiveInputStream.matches(tarheader,  tais.getName()))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(TarArchiveInputStream.matches(tarheader,  tais.getName()))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
647	[BUG]  [BUGGY]  if(tais  ==  null)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  if(TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( "	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
648	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
649	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  0)  {  return  new  TarArchiveInputStream(tais);  }  else  {  in.mark(signatureLength);  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
650	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }	  if(signatureLength    ==    0)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
651	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry();  }	  if(signatureLength!=    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
652	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  InputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  InputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();	  if(signatureLength!=    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
653	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  0);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  0);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
654	[BUG]  [BUGGY]  tais.setSubscriptionLength(subscriptionLength  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setSubscriptionLength(subscriptionLength  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setSubscriptionLength(subscriptionLength  +  1);	  tais.setEntryLength(subscriptionLength);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
655	[BUG]  [BUGGY]  return  tais!=  null?  null  :  tais.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  null  :  tais.getSimpleName();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  null  :  tais.getSimpleName();	  return    tais.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
656	[BUG]  [BUGGY]  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  ||    tais!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
657	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength,  tais):  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(signatureLength,  tais):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(signatureLength,  tais):  tais;	  return    tais    ==    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
658	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
659	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  2));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  2));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  2));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
660	[BUG]  [BUGGY]  if(tais!=  null  ||  tais.getName()!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null  ||  tais.getName()!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null  ||  tais.getName()!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
661	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	try  {  [Delete]  catch(IOException  e)  {  return  new  TarArchiveInputStream(in,  tais.getName());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
662	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName(),  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName(),  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getName(),  signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
663	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  [Delete]  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	[Delete]	  if(tais    ==    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
664	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	try  {  [Delete]  catch(IOException  ioe)  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
665	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(tarheader);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(tarheader);	  if(tais    ==    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
666	[BUG]  [BUGGY]  try  ==  null)  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  try  ==  null)  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	try  ==  null)  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
667	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(tais);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  Thread.currentThread().getContextClassLoader().process(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	Thread.currentThread().getContextClassLoader().process(tais);	  if(tais    ==    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
668	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
669	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais,  in);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais,  in);	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
670	[BUG]  [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT_TEST  =  tais;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT_TEST  =  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT_TEST  =  tais;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
671	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk()  +  1);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChunk()  +  1);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getLastChunk());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
672	[BUG]  [BUGGY]  if(signatureLength  ==  2  &&  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2  &&  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2  &&  TarArchiveInputStream.matches(tarheader,  signatureLength))  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
673	[BUG]  [BUGGY]  tais.closeArchiveInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.closeArchiveInputStream();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.closeArchiveInputStream();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
674	[BUG]  [BUGGY]  tais.closeArchive();  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.closeArchive();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.closeArchive();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
675	[BUG]  [BUGGY]  tais.closePath();  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.closePath();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.closePath();	  tais.close();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
676	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength))  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength))  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength))  :  tais.getNextEntry();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
677	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getNextEntry();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
678	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader))  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader))  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader))  :  tais.getNextEntry();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
679	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream()  :  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream()  :  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream()  :  tais.getNextEntry();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
680	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais.getNextEntry();	  return    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
681	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
682	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
683	[BUG]  [BUGGY]  tais.setName(tarheader.getAbsolutePath());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setName(tarheader.getAbsolutePath());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setName(tarheader.getAbsolutePath());	  tais.setName(tarheader.getName());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
684	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength,  in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength,  in);	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
685	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength  +  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength  +  2);	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
686	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength,  in.readBytes());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength,  in.readBytes());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength,  in.readBytes());	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
687	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(signatureLength);	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
688	[BUG]  [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(in,  tais);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(in,  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(in,  tais);	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
689	[BUG]  [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(in,  tais);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(in,  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(in,  tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
690	[BUG]  [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.setNextEntry(in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.setNextEntry(in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.setNextEntry(in);	  TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
691	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  +  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(signatureLength  +  2);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
692	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais,  in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.NONE  :  tais,  in);	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
693	[BUG]  [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.NONE  =  tais;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.NONE  =  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null  ||  TarArchiveInputStream.NONE  =  tais;	  return    tais    ==    null?    TarArchiveInputStream.NONE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
694	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
695	[BUG]  [BUGGY]  if(in!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(in!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(in!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  else  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
696	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
697	[BUG]  [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
698	[BUG]  [BUGGY]  if(signatureLength  >  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  >  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  >  0)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
699	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
700	[BUG]  [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(tarheader);  tais.getNextEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  InputStream  in  =  new  ByteArrayInputStream(tarheader);  tais.getNextEntry();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	InputStream  in  =  new  ByteArrayInputStream(tarheader);  tais.getNextEntry();	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
701	[BUG]  [BUGGY]  tais  ==  in)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  in)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  in)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
702	[BUG]  [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT  :  tais;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT  :  tais;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
703	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais,  in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT  :  tais,  in);	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
704	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
705	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.readLine());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.readLine());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in.readLine());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
706	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.read());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.read());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.read());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
707	[BUG]  [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
708	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signature));  }  else  {  throw  new  ArchiveException( " ");  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signature));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
709	[BUG]  [BUGGY]  new  TarArchiveInputStream(in,  tais.getName());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(in,  tais.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(in,  tais.getName());	  new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
710	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
711	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
712	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  >  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  >  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  >  0)  {  return  new  TarArchiveInputStream(in,  signatureLength);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
713	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  TAR_DUMP);  }  else  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  TAR_DUMP);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  TAR_DUMP);  }  else  {  in.mark(signatureLength);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
714	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
715	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
716	[BUG]  [BUGGY]  in.mark(signatureLength);  tais.finish();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  in.mark(signatureLength);  tais.finish();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	in.mark(signatureLength);  tais.finish();	  in.mark(signatureLength);    tais.close();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
717	[BUG]  [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
718	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
719	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
720	[BUG]  [BUGGY]  return  tais.toByteArray();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.toByteArray();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.toByteArray();	  return    tais.toString();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
721	[BUG]  [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
722	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.setNextEntry(in);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.setNextEntry(in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  tais.setNextEntry(in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
723	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length  +  1),  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length  +  1),  tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length  +  1),  tais.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
724	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  0)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
725	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  tarheader);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in,  tarheader);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    tarheader);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
726	[BUG]  [BUGGY]  return  tais  ==  null?  JAR  :  tais.toString();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  JAR  :  tais.toString();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  JAR  :  tais.toString();	  return    tais    ==    null?    JAR    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
727	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  archiverName,  tarheader);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  archiverName,  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  archiverName,  tarheader);	  new    TarArchiveInputStream(tais,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
728	[BUG]  [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
729	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
730	[BUG]  [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.length));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.length));    tais.getNextEntry();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
731	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader,  tais);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader,  tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tarheader,  tais);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tarheader);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
732	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(signatureLength!=    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
733	[BUG]  [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(in):  tais.getParent();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(in):  tais.getParent();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  new  TarArchiveInputStream(in):  tais.getParent();	  return    tais.getParent();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
734	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getParent();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getParent();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getParent();	  return    tais.getParent();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
735	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getNextEntry());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
736	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  this.signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  this.signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  this.signatureLength);	  new    TarArchiveInputStream(tais,    signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
737	[BUG]  [BUGGY]  return  tais!=  null?  null  :  tais.getDeclaringClass();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  null  :  tais.getDeclaringClass();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  null  :  tais.getDeclaringClass();	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
738	[BUG]  [BUGGY]  return  tais.getDeclaringClass().getSimpleName();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais.getDeclaringClass().getSimpleName();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais.getDeclaringClass().getSimpleName();	  return    tais.getDeclaringClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
739	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getSignatureLength());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getSignatureLength());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tais.getSignatureLength());  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
740	[BUG]  [BUGGY]  tais  ==  null?  new  TarArchiveInputStream(in):  in;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null?  new  TarArchiveInputStream(in):  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null?  new  TarArchiveInputStream(in):  in;	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
741	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in.getBytes()):  in;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in.getBytes()):  in;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(in.getBytes()):  in;	  tais!=    null?    new    TarArchiveInputStream(in):    in;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
742	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  in,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  in,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  in,  signatureLength);	  new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
743	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  in.getName());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  in.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  in.getName());	  new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
744	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais,  in.getValue());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais,  in.getValue());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais,  in.getValue());	  new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
745	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }	  if(signatureLength    <    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
746	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(signatureLength    <    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
747	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getValue(),  in);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getValue(),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getValue(),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getValue());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
748	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getValue());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getValue());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getValue());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
749	[BUG]  [BUGGY]  if(signatureLength!=  1)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength!=  1)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength!=  1)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    0)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
750	[BUG]  [BUGGY]  tais.setCurrentEntryLength(0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(0);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(0);	  tais.setEntryLength(0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
751	[BUG]  [BUGGY]  tais.setString( "ArchiveInputStream ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setString( "ArchiveInputStream ");  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setString( "ArchiveInputStream ");	  tais.setEntryLength(0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
752	[BUG]  [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in.read());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null)  {  return  new  TarArchiveInputStream(in.read());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null)  {  return  new  TarArchiveInputStream(in.read());  }	  tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
753	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getValue();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(in):  tais.getValue();	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
754	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais.getValue();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(tarheader,  signatureLength):  tais.getValue();	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
755	[BUG]  [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais.getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais.getValue();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  new  TarArchiveInputStream(tarheader):  tais.getValue();	  return    tais.getValue();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
756	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
757	[BUG]  [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  if(signatureLength!=    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
758	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  in.read());  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
759	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( ", ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( ", ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
760	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais,  in);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_TEST  :  tais,  in);	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
761	[BUG]  [BUGGY]  return  tais!=  null  &&  TarArchiveInputStream.DEFAULT_TEST  :  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null  &&  TarArchiveInputStream.DEFAULT_TEST  :  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null  &&  TarArchiveInputStream.DEFAULT_TEST  :  tais;	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_TEST    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
762	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  return  new  TarArchiveInputStream(tais);  }	  if(tais    ==    null    ||    signatureLength    <    2)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
763	[BUG]  [BUGGY]  tais.setValue(tarheader.getBytes());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setValue(tarheader.getBytes());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setValue(tarheader.getBytes());	  tais.setValue(tarheader.getValue());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
764	[BUG]  [BUGGY]  While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
765	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais,  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.UNKNOWN  :  tais,  in);	  return    tais    ==    null?    TarArchiveInputStream.UNKNOWN    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
766	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getName());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getName());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
767	[BUG]  [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
768	[BUG]  [BUGGY]  While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
769	[BUG]  [BUGGY]  if(tais!=  null)  {  in.mark(tarheader.length);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  in.mark(tarheader.length);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  in.mark(tarheader.length);  }	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
770	[BUG]  [BUGGY]  if(in!=  null)  {  in.mark(signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(in!=  null)  {  in.mark(signatureLength);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(in!=  null)  {  in.mark(signatureLength);  }	  if(tais!=    null)    {    in.mark(signatureLength);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
771	[BUG]  [BUGGY]  if(tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in,  in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    in);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
772	[BUG]  [BUGGY]  if(tais  ==  null  ||  in  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  in  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  in  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in,    in);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
773	[BUG]  [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(signatureLength  <  2)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();  }  else  {  throw  new  ArchiveException( " ");  }	  if(signatureLength    ==    2)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
774	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( ", ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( ", ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
775	[BUG]  [BUGGY]  tais.copyCurrentStructure(in,  in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.copyCurrentStructure(in,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.copyCurrentStructure(in,  in);	  tais.copyCurrentStructure(in);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
776	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getAbsolutePath());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getAbsolutePath());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getAbsolutePath());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
777	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  tarheader);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  tarheader);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getName(),  tarheader);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
778	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.toString());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.toString());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.toString());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
779	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getTarName());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getTarName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getTarName());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
780	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getDestination());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getDestination());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais.getDestination());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
781	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.getAbsolutePath());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.getAbsolutePath());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.getAbsolutePath());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
782	[BUG]  [BUGGY]  new  TarArchiveInputStream(tais.toString());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  new  TarArchiveInputStream(tais.toString());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	new  TarArchiveInputStream(tais.toString());	  new    TarArchiveInputStream(tais.getName());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
783	[BUG]  [BUGGY]  tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
784	[BUG]  [BUGGY]  if(in  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(in  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(in  ==  null  ||  in!=  null)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
785	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength!=  2)  {  return  new  TarArchiveInputStream(in);  }	  if(tais    ==    null    ||    in!=    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
786	[BUG]  [BUGGY]  While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null  &&  tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
787	[BUG]  [BUGGY]  While(tais!=  null  &&  tais.getNextEntry()!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( "  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null  &&  tais.getNextEntry()!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( "  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null  &&  tais.getNextEntry()!=  null)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  else  {  throw  new  ArchiveException( "	  if(tais!=    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getNextEntry());    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
788	[BUG]  [BUGGY]  if(tais.matches(signatureLength,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais.matches(signatureLength,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais.matches(signatureLength,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ");  }	  if(TarArchiveInputStream.matches(tarheader,    signatureLength))    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
789	[BUG]  [BUGGY]  try  ==  null  ||  tais!=  null)  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  try  ==  null  ||  tais!=  null)  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	try  ==  null  ||  tais!=  null)  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
790	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setSimpleName( "ArchiveInputStream ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  Thread.currentThread().getContextClassLoader().setSimpleName( "ArchiveInputStream ");  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	Thread.currentThread().getContextClassLoader().setSimpleName( "ArchiveInputStream ");	  if(tais!=    null)    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
791	[BUG]  [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getNextEntry());  }	  if(tais    ==    null)    {    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    tais.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
792	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( ". ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais);  }  else  {  throw  new  ArchiveException( ". ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
793	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  else  {  throw  new  ArchiveException( " ".   ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
794	[BUG]  [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( ". ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  in);  }  else  {  throw  new  ArchiveException( ". ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    else    {    throw    new    ArchiveException(   ".   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
795	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
796	[BUG]  [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  While(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	While(tais!=  null)  {  return  new  TarArchiveInputStream(in);  }	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
797	[BUG]  [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getParent());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getParent());  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	If(tais  ==  null)  {  return  new  TarArchiveInputStream(in,  tais.getParent());  }	  If(tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
798	[BUG]  [BUGGY]  try  {  if(tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  try  {  if(tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	try  {  if(tais!=  null)  {  return  new  TarArchiveInputStream(tais);  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
799	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(tais,  in.read());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  new  TarArchiveInputStream(tais,  in.read());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  new  TarArchiveInputStream(tais,  in.read());	  return    new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
800	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(tais,  in.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  new  TarArchiveInputStream(tais,  in.getValue());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  new  TarArchiveInputStream(tais,  in.getValue());	  return    new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
801	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(tais,  in.getName());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  new  TarArchiveInputStream(tais,  in.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  new  TarArchiveInputStream(tais,  in.getName());	  return    new    TarArchiveInputStream(tais,    in);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
802	[BUG]  [BUGGY]  return  tais!=  null?  null  :  tais.getName();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  null  :  tais.getName();  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  null  :  tais.getName();	  return    tais.getName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
803	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getSimpleName(),  in);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getSimpleName(),  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getSimpleName(),  in);	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
804	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChild());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChild());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader),  tais.getLastChild());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader),    tais.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
805	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais,  signatureLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais,  signatureLength);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
806	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.getName());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.getName());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  tais.getName());	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
807	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  name);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  name);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(tais,  name);	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(in,    tais);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
808	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes(PRINT_SIGNATURE)));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes(PRINT_SIGNATURE)));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes(PRINT_SIGNATURE)));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
809	[BUG]  [BUGGY]  tais.setCurrentEntryLength(signatureLength  *  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setCurrentEntryLength(signatureLength  *  2);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setCurrentEntryLength(signatureLength  *  2);	  tais.setCurrentEntryLength(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
810	[BUG]  [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength));	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
811	[BUG]  [BUGGY]  static  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  static  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	static  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));	  final    TarArchiveInputStream    in    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
812	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  TAR);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  TAR);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  TAR);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
813	[BUG]  [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais!=  null)  {  return  new  TarArchiveInputStream(in,  tarheader.length);  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais!=    null)    {    return    new    TarArchiveInputStream(in,    tais);    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
814	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength,  TarArchiveInputStream));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength,  TarArchiveInputStream));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength,  TarArchiveInputStream));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader,    signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
815	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength  +  1));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader,  signatureLength  +  1));	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader,    signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
816	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.getNextEntry()!=  null)  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.getNextEntry()!=  null)  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.getNextEntry()!=  null)  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
817	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.close())  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.close())  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.close())  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
818	[BUG]  [BUGGY]  while(tais!=  null  &&  tais.isOpen())  {  tais.close();  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null  &&  tais.isOpen())  {  tais.close();  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null  &&  tais.isOpen())  {  tais.close();  }	  if(tais!=    null)    {    tais.close();    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
819	[BUG]  [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
820	[BUG]  [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||  signatureLength  <  2)  {  return  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  }  else  {  throw  new  ArchiveException( " ");  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    }    else    {    throw    new    ArchiveException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
821	[BUG]  [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength,  tais):  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  new  TarArchiveInputStream(signatureLength,  tais):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  new  TarArchiveInputStream(signatureLength,  tais):  tais;	  return    tais!=    null?    new    TarArchiveInputStream(signatureLength):    tais;    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
822	[BUG]  [BUGGY]  tais  ==  null?  new  TarArchiveInputStream(in):  tais;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  ==  null?  new  TarArchiveInputStream(in):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  ==  null?  new  TarArchiveInputStream(in):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
823	[BUG]  [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in,  file):  tais;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais!=  null?  new  TarArchiveInputStream(in,  file):  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais!=  null?  new  TarArchiveInputStream(in,  file):  tais;	  tais!=    null?    new    TarArchiveInputStream(in):    tais;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
824	[BUG]  [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	if(tais  ==  null  ||!tais.hasNextEntry())  {  return  new  TarArchiveInputStream(tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
825	[BUG]  [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(tais);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(tais);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(tais);	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
826	[BUG]  [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(tais);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(tais);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	while(tais!=  null)  {  tais  =  new  TarArchiveInputStream(tais);  }	  if(tais    ==    null)    {    return    new    TarArchiveInputStream(tais);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
827	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1),  tais.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1),  tais.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength  +  1),  tais.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
828	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getTarEntry());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getTarEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  tais.getTarEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
829	[BUG]  [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in.getNextEntry());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in.getNextEntry());  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(signatureLength),  in.getNextEntry());	  tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(signatureLength),    tais.getNextEntry());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
830	[BUG]  [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	final  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader.getBytes()));	  final    TarArchiveInputStream    tais    =    new    TarArchiveInputStream(new    ByteArrayInputStream(tarheader));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
831	[BUG]  [BUGGY]  ||  in  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  ||  in  ==  null)  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	||  in  ==  null)  {  return  new  TarArchiveInputStream(in);  }	  ||    tais    ==    null)    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
832	[BUG]  [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais,  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais!=  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais,  in);	  return    tais!=    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
833	[BUG]  [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais,  in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais,  in);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null?  TarArchiveInputStream.DEFAULT_SIGNATURE  :  tais,  in);	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
834	[BUG]  [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT_SIGNATURE  =  tais;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT_SIGNATURE  =  tais;  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	return  tais  ==  null  ||  TarArchiveInputStream.DEFAULT_SIGNATURE  =  tais;	  return    tais    ==    null?    TarArchiveInputStream.DEFAULT_SIGNATURE    :    tais;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
835	[BUG]  [BUGGY]  tais.setEntry(entryLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntry(entryLength);  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(entryLength);	  tais.setEntry(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
836	[BUG]  [BUGGY]  tais.setEntry(new  String(signatureLength));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      in.mark(tarheader.length);  signatureLength  =  in.read(tarheader);  in.reset();  if  (TarArchiveInputStream.matches(tarheader,  signatureLength))  {  return  new  TarArchiveInputStream(in);  }  try  {  TarArchiveInputStream  tais  =  new  TarArchiveInputStream(new  ByteArrayInputStream(tarheader));  tais.getNextEntry();      [BUGGY]  tais.setEntry(new  String(signatureLength));  [BUGGY]      }  catch  (Exception  e)  {  //  NOPMD    }  }  catch  (IOException  e)  {  throw  new  ArchiveException(     "Could  not  use  reset  and  mark  operations.     ",  e);  }  throw  new  ArchiveException(     "No  Archiver  found  for  the  stream  signature     ");  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	243	243	1	replace	tais.setEntry(new  String(signatureLength));	  tais.setEntry(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
