bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  in.mark(signature.length  +  11);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  +  11);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  +  11);	  in.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  in.mark(signature.length  +  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  +  2);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  +  2);	  in.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  in.mark(signature.length  /  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  /  1);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  /  1);	  in.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  in.mark(signature.length  +  6);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  +  6);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  +  6);	  in.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  in.mark(signature.length  +  3);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  +  3);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  +  3);	  in.mark(signature.length    +    12);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[12];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  final  byte[]  signature  =  new  byte[12];  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	final  byte[]  signature  =  new  byte[12];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  final  int  signatureLength  =  in.read(signature);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	final  int  signatureLength  =  in.read(signature);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  final  byte[]  dumpsig  =  new  byte[12];  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  final  byte[]  dumpsig  =  new  byte[12];  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	final  byte[]  dumpsig  =  new  byte[12];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  byte[]  dumpsig  =  new  byte[12];  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  byte[]  dumpsig  =  new  byte[12];  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	byte[]  dumpsig  =  new  byte[12];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[6];  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  final  byte[]  signature  =  new  byte[6];  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	final  byte[]  signature  =  new  byte[6];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[10];  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  final  byte[]  signature  =  new  byte[10];  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	final  byte[]  signature  =  new  byte[10];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  final  byte[]  signature  =  new  byte[16];  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  final  byte[]  signature  =  new  byte[16];  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	final  byte[]  signature  =  new  byte[16];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  in.mark(signature.length  -  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  -  3);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  -  3);	  in.mark(signature.length    -    12);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  in.mark(signature.length  -  4);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  -  4);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  -  4);	  in.mark(signature.length    -    12);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  in.mark(signature.length  -  10);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  -  10);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  -  10);	  in.mark(signature.length    -    12);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  in.mark(signature.length  -  6);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  -  6);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  -  6);	  in.mark(signature.length    -    12);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  tais.mark(signature.length  +  12);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  tais.mark(signature.length  +  12);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	tais.mark(signature.length  +  12);	  tais.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  tais.mark(signature.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  tais.mark(signature.length  +  1);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	tais.mark(signature.length  +  1);	  tais.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  TarArchiveInputStream.mark(signature.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  TarArchiveInputStream.mark(signature.length);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	TarArchiveInputStream.mark(signature.length);	  tais.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  tais.mark(signature.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  tais.mark(signature.length  -  1);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	tais.mark(signature.length  -  1);	  tais.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  tais.mark(signature.getBytes());  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  tais.mark(signature.getBytes());  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	tais.mark(signature.getBytes());	  tais.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  tais.mark(signature);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  tais.mark(signature);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	tais.mark(signature);	  tais.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  in.mark(signature.length  -  11);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  -  11);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  -  11);	  in.mark(signature.length    -    2);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  InputStream  in  =  tais.getInputStream();  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	InputStream  in  =  tais.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  InputStream  in  =  tais.readIn();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  InputStream  in  =  tais.readIn();  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	InputStream  in  =  tais.readIn();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  InputStream  in  =  tais.read(signature);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  InputStream  in  =  tais.read(signature);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	InputStream  in  =  tais.read(signature);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  InputStream  in  =  getInputStream();  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  InputStream  in  =  getInputStream();  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	InputStream  in  =  getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  tais.mark(signature.toByteArray());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  tais.mark(signature.toByteArray());  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	tais.mark(signature.toByteArray());	  tais.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  in.mark(signature.length  +  4);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  +  4);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  +  4);	  in.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  in.mark(signature.length  /  12);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  /  12);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  /  12);	  in.mark(signature.length    +    12);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  in.mark(signature.length  +  13);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.mark(signature.length  +  13);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.mark(signature.length  +  13);	  in.mark(signature.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  byte[]  dumpsig  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  byte[]  dumpsig  =  in.read(signature);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	byte[]  dumpsig  =  in.read(signature);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.close();  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.close();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  byte[]  dumpsignature  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  byte[]  dumpsignature  =  in.read(signature);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	byte[]  dumpsignature  =  in.read(signature);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  in.read();  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.read();  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.read();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  in.defaultReader().write(signature);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  in.defaultReader().write(signature);  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	in.defaultReader().write(signature);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  tais.mark(signature.toString());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];    [BUGGY]  tais.mark(signature.toString());  [BUGGY]    try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	208	208	1	replace	tais.mark(signature.toString());	  tais.mark(signature.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
