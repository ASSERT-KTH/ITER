projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){signatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.mark(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getAbsolutePath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)+2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=in.length){signatureLength=in.read(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=in.length){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+dumpsig.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getPath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)+512;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)+4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)+2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)+3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,archiverName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){signatureLength=in.read();}else{thrownewIOException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.mark(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){SignatureInputStreamin=newTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader.length);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)-1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){returnin.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(signature);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(signature);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(signature);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(signature);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(signature);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(signature);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.tarheader.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)/1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,100);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getPath()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(archiverName.getPath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getCanonicalPath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getPath(),TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(file.getPath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read(tarheader,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader,0,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=tarheader.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read()+tarheader.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234||signatureLength!=0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=0;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234||signatureLength==0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,archiverName.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,DUMP);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,TAR_SIZE);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getAbsolutePath()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(archiverName.getAbsolutePath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getAbsolutePath(),TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getAbsolutePath()+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbytesignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbytesignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalStringsignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finallongsignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(signature);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(signature);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){signatureLength=in.read();}else{thrownewIOException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length!=in.read()){signatureLength=in.read();}else{thrownewIOException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){SignatureLength=in.read();}else{thrownewIOException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length!=in.read()){SignatureLength=in.read();}else{thrownewIOException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234semnLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,0,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,1024);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,16);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,100);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getBytes("UTF-8"));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(archiverName.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getBytes(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getBytes()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getBytes(),512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getBytes(),256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.mark(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.mark(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.mark(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.mark(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.mark(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+tarheader.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)/dumpsig.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read()+tarheader.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+cacherName.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+signatureLength;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=tarheader.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalSignatureLengthsignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,100);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,0,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.readFully(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.readFully(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,0,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader.length,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234semnLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.read();signatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.readFully(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.readFully(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.readFully(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader,0,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=1){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)+2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)/1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)+4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)+3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)+6;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes("UTF-8"));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes(256));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes(),512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes(64));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){returnin.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){returnin.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234||signatureLength!=0){returnin.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=1){returnin.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234while(signatureLength!=0){in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=TarArchiveInputStream.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=tarheader.read(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,100);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.readByte(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)/2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)+512;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)+4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)+3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)+256;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=4){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234TarArchiveInputStreamin=newTarArchiveInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]signature=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.readByte(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.length){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(signature);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(dumpsig,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=tarheader.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalSignatureLengthsignatureLength=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)/1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+512;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader)+512;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)+1024;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length!=in.read()){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){SignatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length!=in.read()){SignatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234||signatureLength!=0){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234||signatureLength==0){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.tarheader.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=this.tarheader.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.tarheader.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader)+2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.readFully(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader)+4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read()+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader)+1L;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader.length);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.readFully(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)-2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read()-1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader),signatureLength-1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,10);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,1024);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,10000);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,4192);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.readFully(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalStringsignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(256,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(64);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(256-tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(256)+tarheader.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(signature);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==0){signatureLength=in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==0){signatureLength=in.read(signature);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(tarheader,TAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(tarheader,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.mark(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.mark(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){in.mark(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.mark(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)/2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)/4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)/2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)/1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)/3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==0){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==0){signatureLength=in.read(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=2){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureInputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){SignatureInputStreamin=newTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){SignatureInputStreamin=newTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){SignatureInputStreamin=newTarArchiveInputStream(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){SignatureInputStreamin=newTarArchiveInputStream(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length!=in.read()){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){SignatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length!=in.read()){SignatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){signLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read(tarheader.length)+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read(tarheader.length),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.readFully(tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read(tarheader.length+1));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(signature);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signature);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){if(signatureLength==0){signatureLength=in.read(signature);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){if(signatureLength==0){signatureLength=in.read(signature);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=4){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(signature);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(tarheader);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)-1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234TarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,0,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=null){signatureLength=in.read(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=null){signatureLength=in.read(signature);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readFully(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readFully(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,0,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,10000);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,1024);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,4192);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,4096L);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbytesignatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,0,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalStringsignatureLength=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=tarheader.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,JAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,AR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader.length,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)+2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)+512;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)/1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)+4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)+3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)+256;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.length){signatureLength=in.read(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]tarheader=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read(tarheader,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read(tarheader,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]signature=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==0){signatureLength=in.read(tarheader);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read(tarheader);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader==null){signatureLength=in.read(tarheader);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read(signature);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,TARIO);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(signature,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength!=in.length){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=tarheader.length){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==tarheader.length){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength!=tarheader.length){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,64);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234(signatureLength==0)){in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read(tarheader,0,signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader).read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>=0){returnin.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234returnin.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){returnin.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.mark(tarheader,signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=Integer.parseInt(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.archiverName.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=TarArchiveInputStream.read(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)/1024;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)/8;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)/4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,TAR_SIGNATURE_LENGTH);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,TAR_SIGNATURE);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader==null){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read(signature);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader)/1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader)+256;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readFully(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readFully(tarheader).length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader).read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readByte(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,500);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheaderLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){SignatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=1){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==1){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader,null);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234byte[]dumpsig=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getBytes(JAR));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(ArchiveInputStream.getBytes(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=tarheader.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==null){signatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=null){signatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader==null){signatureLength=in.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==null){signatureLength=in.read(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.tarheader.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.tarheader.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader==null){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+buffer.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+dumpsig.length+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read()+dumpsig.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+TarArchiveInputStream.DEFAULT;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength!=0){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength!=0){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader==null){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read(signature);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(tarheader,archiverName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturesignatureLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==in.read()){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==in.read()){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){signatureLength=in.read();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=in.read(tarheader,100);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){signatureLength=in.read();}else{thrownewIOException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader==null){if(signatureLength==0){signatureLength=in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader==null){signatureLength=in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==1){signatureLength=in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.mark(tarheader.length);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.mark(tarheader.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.mark(tarheader.length);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,archiverName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,cacherName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(dumpsig,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.readFully(tarheader,0,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)+128;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)+5;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(SignatureInputStream.matches(tarheader,signatureLength)){SignatureInputStreamin=newTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){SignatureInputStreamin=newTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,16);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}else{thrownewIllegalStateException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)+6;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader,archiverName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader,TAR_SIZE);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader).read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read(tarheader.length);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader,0,tarheader.length);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==0){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){if(signatureLength==0){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader==null){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=in.read()){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader.length==in.read()){signatureLength=in.read();}else{thrownewIllegalStateException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=1){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==1){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){thrownewIllegalStateException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,16);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,500);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{System.arraycopy(tarheader,0,signatureLength,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{System.arraycopy(tarheader,0,signatureLength,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]signatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)-4;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)-3;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.read(tarheader)+1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.archiverName.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getFile());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes(512));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader,0,tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read(tarheader,0,tarheader.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read(tarheader.length)-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader,100);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=archiverName.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=this.tarheader.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=tarheader.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader).read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=tarheader.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.set(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setSignalLength(in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setIsArchive();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader,archiverName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(tarheader!=null){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getAbsolutePath()+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234in.read(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read(tarheader)+dumpsig.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=in.read(tarheader,0,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.length+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=Integer.parseInt(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader).read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){signatureLength=in.read(tarheader.length);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){returnin.read(tarheader);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.readFully(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.readFully(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.readFully(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader)+6;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=this.in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=null){signatureLength=in.read(signatureLength);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234IntegersignatureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalintsignatureLength=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){returnin.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(zipsig.getAbsolutePath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.length-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(signature,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}else{returnnewTarArchiveInputStream(in,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(signature,256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader,128);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==1){signatureLength=in.read(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(in!=null){in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(in!=null){in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(in!=null){in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignaturetarheaderLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,2096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader,400);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signature);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){signatureLength=in.read(signature);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read(signature);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234thrownewIllegalStateException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234while(signatureLength!=0){returnin.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(tarheader)+6;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)+512;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234char[]signatureLength=in.read(tarheader)+512;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234IntegersignatureLength=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(zipsig.getPath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]dumpsig=this.tarheader.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){tarheader=in.read(signature);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read(signature);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signature);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){returnin.read(signature);}else{System.arraycopy(tarheader,0,tarheader,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234signatureLength=in.read(tarheader)+5;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(signature,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signature);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){signatureLength=in.read(signature);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read(signature);}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){returnin.read();}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.readFully(tarheader);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=in.read()){signatureLength=in.read();}else{thrownewIOException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){thrownewIOException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){dumpsig=in.read();}else{thrownewIOException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=in.read()){signatureLength=in.read();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(zipsig.getBytes());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newFileInputStream(tarheader.getBytes(PRINT_SIGNATURE));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLength=in.read(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader)/2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.read(tarheader)/2;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.setLength(in.read(tarheader)/1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader)/1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader.length,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(signature);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234nisipLength=in.read(tarheader,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signature);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){signatureLength=in.read(signature);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read(tarheader);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(signature,archiverName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(tarheader);}else{thrownewIllegalStateException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}else{thrownewIllegalStateException(".");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength>0){signatureLength=in.read(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read(tarheader,0,tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=this.in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){SignatureTraversal.traverse(tarheader,in);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=null){signatureLength=in.read(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==null){signatureLength=in.read(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthtarheaderLength=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.mark(signatureLength);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader.length=in.read(tarheader).length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234finalbyte[]tarheader=in.read(tarheader)+dumpsig.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newByteArrayInputStream(tarheader.getBytes(JAR));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,400);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheader=in.read(tarheader,2096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(strategy);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=0){signatureLength=in.read(signature);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(signature);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){signatureLength=in.read();}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.read(signature);}else{thrownewJARException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){in.mark(tarheader.length);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){in.mark(tarheader.length);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){in.mark(tarheader.length);}else{in.mark(signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){in.mark(tarheader.length);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){signatureLength=in.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){returnin.read(tarheader);}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengtht=in.read(tarheader,2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthsignatureLength=in.read(signature,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.length){signatureLength=in.read(tarheader.length);}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=in.length){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234SignatureLengthin=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=in.read()){signatureLength=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){dumpsig=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){signatureLength=in.read();}else{thrownewIllegalArgumentException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readFully(tarheader,1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=in.readFully(tarheader,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234tarheaderLength=this.tarheader.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength<2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength!=in.read()){signatureLength=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){dumpsig=in.read();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==in.read()){signatureLength=in.read();}else{thrownewIllegalStateException("".);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(SignatureInputStream.matches(tarheader,SignatureLength)){SignatureInputStreamin=newTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==2){signatureLength=in.read(tarheader,null);}else{returnnewTarArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234InputStreamin=newBufferedInputStream(256);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234Signaturesignature=this.tarheader.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java234if(signatureLength==0){returnin.read(tarheader);}else{returnnewTarArchiveInputStream(in);}
