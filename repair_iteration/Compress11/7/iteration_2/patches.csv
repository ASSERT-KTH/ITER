bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  tarheader))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
2	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  12))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  12))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
3	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SignatureLength))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
4	[BUG]  [BUGGY]  if(signatureLength  ==  10  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  10  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  10  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    14    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
5	[BUG]  [BUGGY]  if(signatureLength  ==  16  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  16  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  16  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    14    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
6	[BUG]  [BUGGY]  if(signatureLength!=  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    12    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
7	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SignatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    SignatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
8	[BUG]  [BUGGY]  if(signatureLength!=  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    &&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
9	[BUG]  [BUGGY]  if(signatureLength  ==  12  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  12  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  12  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    &&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
10	[BUG]  [BUGGY]  if(signatureLength  ==  1  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  1  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  1  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    &&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
11	[BUG]  [BUGGY]  if(signatureLength  ==  4  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  4  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  4  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    &&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
12	[BUG]  [BUGGY]  if(in.markSupported()  ||  JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported()  ||  JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported()  ||  JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
13	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
14	[BUG]  [BUGGY]  if(!JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(!JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(!JARArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
15	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
16	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LAST)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LAST)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LAST)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
17	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEFAULT)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
18	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LONG)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LONG)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LONG)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
19	[BUG]  [BUGGY]  if(tarheader.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  signatureLength))  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
20	[BUG]  [BUGGY]  if(tarheader.matches(signature,  tarheaderLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  tarheaderLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  tarheaderLength))  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
21	[BUG]  [BUGGY]  if(ArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ArchiveInputStream.matches(signature,  signatureLength))  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
22	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tais.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tais.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tais.markSupported())  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
23	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
24	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
25	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  archiverName!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  archiverName!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  archiverName!=  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
26	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
27	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheader)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
29	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
30	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
31	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LENGTH)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    LENGTH)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
32	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    LENGTH)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
33	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SHORT)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SHORT)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SHORT)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    LENGTH)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
34	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
35	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
36	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
37	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  12))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  12))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    12))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  1))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    12))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.defaultReader().write(signatureLength,  tarheader);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.defaultReader().write(signatureLength,  tarheader);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
40	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.defaultReader().write(signatureLength  +  12);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.defaultReader().write(signatureLength  +  12);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
41	[BUG]  [BUGGY]  in.write(signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.write(signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.write(signatureLength);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
42	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.defaultReader().write(signatureLength  -  1);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.defaultReader().write(signatureLength  -  1);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
43	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.defaultReader().write(signatureLength  +  1);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.defaultReader().write(signatureLength  +  1);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
44	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength,  zip);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.defaultReader().write(signatureLength,  zip);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.defaultReader().write(signatureLength,  zip);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
45	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader  ==  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
46	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais  ==  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
47	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream  ==  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
48	[BUG]  [BUGGY]  if(signatureLength!=  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    0    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
49	[BUG]  [BUGGY]  if(signatureLength  ==  0  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  0  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  0  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    0    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
50	[BUG]  [BUGGY]  if(signatureLength  ==  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  0  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {	  if(signatureLength    ==    0    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
51	[BUG]  [BUGGY]  if(signatureLength  ==  32  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  32  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  32  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    32    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
52	[BUG]  [BUGGY]  if(signatureLength  ==  31  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  31  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  31  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    32    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
53	[BUG]  [BUGGY]  if(signatureLength!=  32  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  32  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  32  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    32    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
54	[BUG]  [BUGGY]  tais.skipChildren();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  tais.skipChildren();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	tais.skipChildren();	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  in.skipChildren(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.skipChildren(signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.skipChildren(signatureLength);	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  in.markSupported();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.markSupported();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.markSupported();	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  2))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  2))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length  +  2))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    2))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBoolean(signature.length  +  2))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBoolean(signature.length  +  2))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBoolean(signature.length  +  2))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    2))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  11))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  11))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  11))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    2))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
60	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)&&  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)&&  tarheader!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SignatureLength)&&  tarheader!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    SignatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
61	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
62	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
63	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  10)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
64	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  32)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  32)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  32)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
65	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  signature)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  signature)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength,  signature)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
66	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
67	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  tais.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
68	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
69	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
70	[BUG]  [BUGGY]  if(tarheader.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
71	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.mark())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.mark())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.mark())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
72	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.mark(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.mark(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.mark(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
73	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.mark())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.mark())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.mark())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
74	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.mark())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.mark())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.mark())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
75	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.length);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  in.length);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
76	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  signatureLength);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
77	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  1);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.read()  +  1);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
78	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  4096);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  4096);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  4096);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
79	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  12);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  12);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.read()  +  12);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
80	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readLine());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readLine());  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.readLine());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
81	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  10)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)&&  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)&&  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)&&  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signature.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signature.length  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signature.length  +  1))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isEmpty(signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tais!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tais!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tais!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tais!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
87	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  1))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    1))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBoolean(signature.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBoolean(signature.length  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBoolean(signature.length  +  1))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    1))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    DEFAULT_SIGNATURE)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
90	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    DEFAULT_SIGNATURE)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
91	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
92	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
93	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheader)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
94	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
95	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LENGTH)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
96	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  10)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
97	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
98	[BUG]  [BUGGY]  if(StringUtils.isEmpty(signature.length)||  JarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(StringUtils.isEmpty(signature.length)||  JarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(StringUtils.isEmpty(signature.length)||  JarArchiveInputStream.matches(signature,  signatureLength))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  if(VarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(VarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(VarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
100	[BUG]  [BUGGY]  in.mark(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.mark(signatureLength  +  12);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.mark(signatureLength  +  12);	  in.mark(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
101	[BUG]  [BUGGY]  in.mark(signature.length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.mark(signature.length);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.mark(signature.length);	  in.mark(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
102	[BUG]  [BUGGY]  in.mark(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.mark(signatureLength  -  1);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.mark(signatureLength  -  1);	  in.mark(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
103	[BUG]  [BUGGY]  in.mark(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.mark(signatureLength  +  1);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.mark(signatureLength  +  1);	  in.mark(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
104	[BUG]  [BUGGY]  in.mark(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.mark(signatureLength  -  12);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.mark(signatureLength  -  12);	  in.mark(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
105	[BUG]  [BUGGY]  in.mark(signatureLength  +  11);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.mark(signatureLength  +  11);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.mark(signatureLength  +  11);	  in.mark(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
106	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
107	[BUG]  [BUGGY]  if(in.markSupported()  ||  zipArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported()  ||  zipArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported()  ||  zipArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
108	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
109	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  in.mark())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  in.mark())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  in.mark())  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  zipArchiveInputStream!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  zipArchiveInputStream!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  zipArchiveInputStream!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
111	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  signatureLength!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  signatureLength!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  signatureLength!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
112	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  zipArchiveInputStream!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  zipArchiveInputStream!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SignatureLength)||  zipArchiveInputStream!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
113	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.isSupported(signature))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.isSupported(signature))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.isSupported(signature))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
114	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)&&  tarheader!=  null)  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
115	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  tarheader  ==  null)  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
116	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
117	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  tais!=  null)  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
118	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  12))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  12))  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
119	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  tarheader))  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
120	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
121	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
122	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  DUMP))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  DUMP))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  DUMP))  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
123	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
124	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  2))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  2))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  2))  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
125	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  JAR)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  JAR)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  JAR)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
126	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LAST)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LAST)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LAST)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
127	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LONG)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LONG)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LONG)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
128	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
129	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.tarheader!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.tarheader!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
130	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream!=  null)  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
131	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  0)  {	  if(signatureLength    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
132	[BUG]  [BUGGY]  if(signatureLength  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  1)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  1)  {	  if(signatureLength    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
133	[BUG]  [BUGGY]  if(signatureLength  ==  12)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  12)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  12)  {	  if(signatureLength    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
134	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  2)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  2)  {	  if(signatureLength    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
135	[BUG]  [BUGGY]  if(signatureLength  ==  4)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  4)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  4)  {	  if(signatureLength    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
136	[BUG]  [BUGGY]  if(signatureLength  ==  2  ||  signatureLength  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  2  ||  signatureLength  ==  2)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  2  ||  signatureLength  ==  2)  {	  if(signatureLength    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
137	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)&&  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
138	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)&&  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
139	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheader)&&  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
140	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  TarArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
141	[BUG]  [BUGGY]  while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength!=    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
142	[BUG]  [BUGGY]  while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength!=    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
143	[BUG]  [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength!=    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
144	[BUG]  [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  >=  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength!=    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
145	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	throw  new  IllegalArgumentException( " ");	  if(signatureLength!=    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
146	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  10)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    12)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
147	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  32)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  32)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  32)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    12)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
148	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  10)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    12)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
149	[BUG]  [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
150	[BUG]  [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
151	[BUG]  [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
152	[BUG]  [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  ==  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
153	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  +  12);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  +  12);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signatureLength  +  12);	  InputStream    in    =    new    ZipInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
154	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  +  1);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signatureLength  +  1);	  InputStream    in    =    new    ZipInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
155	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  -  1);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signatureLength  -  1);	  InputStream    in    =    new    ZipInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
156	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signature.length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(signature.length);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signature.length);	  InputStream    in    =    new    ZipInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
157	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  +  2);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  +  2);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signatureLength  +  2);	  InputStream    in    =    new    ZipInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
158	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isBlank(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isBlank(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isBlank(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isBlank(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
159	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isBlank(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isBlank(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12)||  StringUtils.isBlank(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isBlank(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
160	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isBlank(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
161	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  2))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  2))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  2))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isBlank(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
162	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  StringUtils.isBlank(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  StringUtils.isBlank(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)||  StringUtils.isBlank(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isBlank(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
163	[BUG]  [BUGGY]  if(tarheader.matches(signature,  tarheader)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  tarheader)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  tarheader)&&  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
164	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  tarheader)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  tarheader)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength,  tarheader)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
165	[BUG]  [BUGGY]  if(signatureLength!=  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    1    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
166	[BUG]  [BUGGY]  if(signatureLength  >=  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  >=  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  >=  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    1    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
167	[BUG]  [BUGGY]  if(signatureLength  ==  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  1  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {	  if(signatureLength    ==    1    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
168	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  12))  {	  if(ZipArchiveInputStream.matches(signatureLength,    signature))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
169	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  12))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength,  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength,  12))  {	  if(ZipArchiveInputStream.matches(signatureLength,    signature))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
170	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheader))  {	  if(ZipArchiveInputStream.matches(signatureLength,    signature))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
171	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  10))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  10))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  10))  {	  if(zipArchiveInputStream.matches(signature,    12))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
172	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  10))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  10))  {	  if(zipArchiveInputStream.matches(signature,    12))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
173	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes());  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
174	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getRawClass());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getRawClass());  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getRawClass());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
175	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in,  signatureLength);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
176	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  tarheader);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in,  tarheader);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
177	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getValue());  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getValue());  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getValue());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
178	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getVersion());  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getVersion());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
179	[BUG]  [BUGGY]  if(signatureLength!=  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {	  if(signatureLength!=    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
180	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signatureLength,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signatureLength,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signatureLength,  tarheader))  {	  if(zipArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
181	[BUG]  [BUGGY]  if(tarheader.matches(signature,  zipArchiveInputStream))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  zipArchiveInputStream))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  zipArchiveInputStream))  {	  if(zipArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
182	[BUG]  [BUGGY]  if(tarheader.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  tarheader))  {	  if(zipArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
183	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.matches(signature,  tarheader))  {	  if(zipArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
184	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  tarheader);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  tarheader);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  tarheader);	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
185	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  1));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  1));  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  1));	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
186	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  2));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  2));  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  2));	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
187	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength)+  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength)+  1);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength)+  1);	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
188	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  TAR);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  TAR);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  TAR);	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
189	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  in.length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  in.length);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength),  in.length);	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
190	[BUG]  [BUGGY]  if(RBArchiveInputStream.matches(signature,  12))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(RBArchiveInputStream.matches(signature,  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(RBArchiveInputStream.matches(signature,  12))  {	  if(RBArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
191	[BUG]  [BUGGY]  if(RBArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(RBArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(RBArchiveInputStream.matches(signature,  tarheader))  {	  if(RBArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
192	[BUG]  [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength)||  RBArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength)||  RBArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(RBArchiveInputStream.matches(signature,  signatureLength)||  RBArchiveInputStream.matches(signature,  signatureLength))  {	  if(RBArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
193	[BUG]  [BUGGY]  if(RBArchiveInputStream.matches(signature,  tarheaderLength))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(RBArchiveInputStream.matches(signature,  tarheaderLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(RBArchiveInputStream.matches(signature,  tarheaderLength))  {	  if(RBArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
194	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  32)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  32)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  32)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    12)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
195	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  1)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  1)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  1)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    12)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
196	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  tarheader))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
197	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  12))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  12))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
198	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader  ==  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    tarheader    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
199	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais  ==  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    tarheader    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
200	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  archiverName  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  archiverName  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  archiverName  ==  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    tarheader    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
201	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
202	[BUG]  [BUGGY]  if(StringUtils.isEmpty(signature.length)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(StringUtils.isEmpty(signature.length)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(StringUtils.isEmpty(signature.length)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
203	[BUG]  [BUGGY]  if(CircularArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(CircularArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(CircularArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
204	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
205	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
206	[BUG]  [BUGGY]  if(in.markSupported()  ||  TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported()  ||  TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported()  ||  TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
207	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
208	[BUG]  [BUGGY]  if(!TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(!TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(!TarArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
209	[BUG]  [BUGGY]  if(signatureLength  ==  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  2  &&  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength    +    1))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
210	[BUG]  [BUGGY]  if(signatureLength  ==  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  2))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  2))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  2  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  2))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength    +    1))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
211	[BUG]  [BUGGY]  if(signatureLength  ==  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  12  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {	  if(signatureLength    ==    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength    +    1))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
212	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tais.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tais.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  tais.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
213	[BUG]  [BUGGY]  if(tarheader.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
214	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEFAULT)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
215	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LUMP)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LUMP)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LUMP)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
216	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LAST)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LAST)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LAST)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
217	[BUG]  [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  >  2)  {  throw  new  IllegalStateException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
218	[BUG]  [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  >  2)  {  throw  new  IllegalStateException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  >  2)  {  throw  new  IllegalStateException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
219	[BUG]  [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  >=  2)  {  throw  new  IllegalStateException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
220	[BUG]  [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
221	[BUG]  [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  >=  2)  {  throw  new  IllegalStateException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  >=  2)  {  throw  new  IllegalStateException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
222	[BUG]  [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  ==  2)  {  throw  new  IllegalStateException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
223	[BUG]  [BUGGY]  if(signature.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signature.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signature.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(in.markSupported()    ||    ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
224	[BUG]  [BUGGY]  if(in.markSupported()  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported()  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported()  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(in.markSupported()    ||    ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
225	[BUG]  [BUGGY]  if(!in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(!in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(!in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(in.markSupported()    ||    ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
226	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(in.markSupported()    ||    ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
227	[BUG]  [BUGGY]  if(!in.markSupported()  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(!in.markSupported()  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(!in.markSupported()  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(in.markSupported()    ||    ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
228	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  zipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  zipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  zipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
229	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.reset())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.reset())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.reset())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
230	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.isSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.isSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.isSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
231	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)&&  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
232	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  12)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
233	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
234	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
235	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
236	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  tais.getInputStream(signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  tais.getInputStream(signatureLength);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
237	[BUG]  [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  this.tais.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
238	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  this.tarheader.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
239	[BUG]  [BUGGY]  InputStream  in  =  TarArchiveInputStream.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  TarArchiveInputStream.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  TarArchiveInputStream.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
240	[BUG]  [BUGGY]  InputStream  in  =  tais.readInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  tais.readInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  tais.readInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
241	[BUG]  [BUGGY]  InputStream  in  =  ZipArchiveInputStream.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  ZipArchiveInputStream.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  ZipArchiveInputStream.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
242	[BUG]  [BUGGY]  if(in.markSupported()  ||  JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported()  ||  JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported()  ||  JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
243	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
244	[BUG]  [BUGGY]  if(!JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(!JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(!JARArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
245	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LENGTH)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    LENGTH)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
246	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SHORT)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  SHORT)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  SHORT)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    LENGTH)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
247	[BUG]  [BUGGY]  if(in.markSupported())  {  in.close();  }  else  if(in.markSupported())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported())  {  in.close();  }  else  if(in.markSupported())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported())  {  in.close();  }  else  if(in.markSupported())  {  throw  new  IllegalArgumentException( " ");  }	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
248	[BUG]  [BUGGY]  if(in.markSupported())  {  in.close();  }  else  if(!in.markSupported())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported())  {  in.close();  }  else  if(!in.markSupported())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported())  {  in.close();  }  else  if(!in.markSupported())  {  throw  new  IllegalArgumentException( " ");  }	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
249	[BUG]  [BUGGY]  if(in.markSupported())  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported())  {  in.close();  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported())  {  in.close();  }	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
250	[BUG]  [BUGGY]  if(in.markSupported())  {  in.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported())  {  in.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported())  {  in.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
251	[BUG]  [BUGGY]  if(in.markSupported())  {  in.close();  }  else  if(in.markSupported())  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported())  {  in.close();  }  else  if(in.markSupported())  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported())  {  in.close();  }  else  if(in.markSupported())  {  throw  new  IllegalArgumentException( " ".);  }	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
252	[BUG]  [BUGGY]  if(in.markSupported())  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  0,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported())  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  0,  signatureLength);  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported())  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  0,  signatureLength);  }	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
253	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  tarheader)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
254	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
255	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  tais.getInputStream(in.getVersion());  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  tais.getInputStream(in.getVersion());	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
256	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  tais.getInputStream(in);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  tais.getInputStream(in);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
257	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  tarheaderLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  tarheaderLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  tarheaderLength))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
258	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  100))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  100))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  100))  {	  if(zipArchiveInputStream.matches(signature,    12))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
259	[BUG]  [BUGGY]  in.copyCurrentStructure(signature);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.copyCurrentStructure(signature);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.copyCurrentStructure(signature);	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
260	[BUG]  [BUGGY]  in.copyCurrentStructure(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.copyCurrentStructure(signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.copyCurrentStructure(signatureLength);	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
261	[BUG]  [BUGGY]  in.setChildren(signatureLength);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.setChildren(signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.setChildren(signatureLength);	  in.skipChildren();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
262	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
263	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
264	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
265	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
266	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
267	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  12))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
268	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
269	[BUG]  [BUGGY]  if(!TarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(!TarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(!TarArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
270	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  tais.markSupported())  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
271	[BUG]  [BUGGY]  if(tarheaderLength!=  zipArchiveInputStream.length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheaderLength!=  zipArchiveInputStream.length)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheaderLength!=  zipArchiveInputStream.length)  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
272	[BUG]  [BUGGY]  if(tarheaderLength  ==  zipArchiveInputStream.length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheaderLength  ==  zipArchiveInputStream.length)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheaderLength  ==  zipArchiveInputStream.length)  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
273	[BUG]  [BUGGY]  if(signatureLength  ==  32  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  32  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  32  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    32    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
274	[BUG]  [BUGGY]  if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  tarheader))  {	  if(zipArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
275	[BUG]  [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(RBArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
276	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEPRECATED)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEPRECATED)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEPRECATED)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
277	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  zipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  zipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)||  zipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
278	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)&&  tais.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)&&  tais.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheader)&&  tais.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
279	[BUG]  [BUGGY]  if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  tarheader)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  tarheader)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  tarheader)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
280	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheader)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheader)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
281	[BUG]  [BUGGY]  if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  signatureLength)||  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
282	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEPRECATED)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEPRECATED)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEPRECATED)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
283	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signatureLength,  AR))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signatureLength,  AR))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)||  ZipArchiveInputStream.matches(signatureLength,  AR))  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
284	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  2)  {  throw  new  IllegalStateException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
285	[BUG]  [BUGGY]  nisipLength  ==  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  nisipLength  ==  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	nisipLength  ==  2)  {  throw  new  IllegalStateException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
286	[BUG]  [BUGGY]  nisipLength  <  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  nisipLength  <  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	nisipLength  <  2)  {  throw  new  IllegalStateException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
287	[BUG]  [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  <  2)  {  throw  new  IllegalStateException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
288	[BUG]  [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalStateException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  <  2)  {  throw  new  IllegalStateException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
289	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	throw  new  IllegalStateException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
290	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(signatureLength));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(signatureLength));  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.read(signatureLength));	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
291	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(signature.length));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(signature.length));  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.read(signature.length));	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
292	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
293	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  100)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  100)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  100)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    12)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
294	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  0)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  0)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  0)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    12)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
295	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  12))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length  +  12))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isBlank(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
296	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isBlank(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
297	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isBlank(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isBlank(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
298	[BUG]  [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(RBArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
299	[BUG]  [BUGGY]  if(signatureLength  ==  14  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  14  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  14  ||  ZipArchiveInputStream.matches(signature,  signatureLength  +  1))  {	  if(signatureLength    ==    14    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
300	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  100)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  100)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  100)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
301	[BUG]  [BUGGY]  in.flush();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.flush();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.flush();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
302	[BUG]  [BUGGY]  tais.close();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  tais.close();  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	tais.close();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
303	[BUG]  [BUGGY]  in.defaultReader().write(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.defaultReader().write(signatureLength  -  12);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.defaultReader().write(signatureLength  -  12);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
304	[BUG]  [BUGGY]  in.defaultReader().write(signature,  0,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.defaultReader().write(signature,  0,  signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.defaultReader().write(signature,  0,  signatureLength);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
305	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signatureLength,  DEFAULT_PROTOTYPE))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signatureLength,  DEFAULT_PROTOTYPE))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)||  ZipArchiveInputStream.matches(signatureLength,  DEFAULT_PROTOTYPE))  {	  if(ZipArchiveInputStream.matches(signature,    DEFAULT_SIGNATURE)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
306	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)&&  ZipArchiveInputStream.matches(signatureLength,  DEFAULT_SIGNATURE))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)&&  ZipArchiveInputStream.matches(signatureLength,  DEFAULT_SIGNATURE))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEFAULT_SIGNATURE)&&  ZipArchiveInputStream.matches(signatureLength,  DEFAULT_SIGNATURE))  {	  if(ZipArchiveInputStream.matches(signature,    DEFAULT_SIGNATURE)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
307	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.mark(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.mark(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)&&  ZipArchiveInputStream.mark(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
308	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
309	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
310	[BUG]  [BUGGY]  if(signatureLength  ==  ZipArchiveInputStream.SIGNATURE  ||  in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  ZipArchiveInputStream.SIGNATURE  ||  in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  ZipArchiveInputStream.SIGNATURE  ||  in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(in.markSupported()    ||    ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
311	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  1))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  1))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  1))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    1))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
312	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signatureLength,  12))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signatureLength,  12))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LENGTH)||  ZipArchiveInputStream.matches(signatureLength,  12))  {	  if(ZipArchiveInputStream.matches(signature,    LENGTH)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
313	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZIPArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZIPArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZIPArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signatureLength,    signature))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
314	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signatureLength,    signature))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
315	[BUG]  [BUGGY]  in.skip(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.skip(signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.skip(signatureLength);	  in.mark(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
316	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  32)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  32)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  32)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
317	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  100)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  100)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  100)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
318	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DUMP)&&  tarheader.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DUMP)&&  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
319	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEPRECATED)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DEPRECATED)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DEPRECATED)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
320	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  tarheaderLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  tarheaderLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  tarheaderLength))  {	  if(JARArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
321	[BUG]  [BUGGY]  if(signatureLength!=  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength!=    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
322	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  2)  {  throw  new  IllegalArgumentException( " ".);  }	  if(signatureLength!=    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
323	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength,  tarheader);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength,  tarheader);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signatureLength,  tarheader);	  InputStream    in    =    new    ZipInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
324	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  -  12);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  -  12);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signatureLength  -  12);	  InputStream    in    =    new    ZipInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
325	[BUG]  [BUGGY]  if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader!=  null  &&  ZipArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
326	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)&&  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
327	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)&&  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
328	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheaderLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  tarheaderLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  tarheaderLength)&&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
329	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  12));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  12));  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  +  12));	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
330	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZIPArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZIPArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZIPArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
331	[BUG]  [BUGGY]  nisipLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  nisipLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	nisipLength  ==  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
332	[BUG]  [BUGGY]  nisipLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  nisipLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	nisipLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
333	[BUG]  [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
334	[BUG]  [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	while(signatureLength  <  2)  {  throw  new  IllegalArgumentException( " ");	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
335	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  tarheaderLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  tarheaderLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  tarheaderLength))  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
336	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  signatureLength)||  tarheader!=  null)  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
337	[BUG]  [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  TARArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZarArchiveInputStream.matches(signature,  signatureLength)||  TARArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZarArchiveInputStream.matches(signature,  signatureLength)||  TARArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
338	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in,  TAR);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
339	[BUG]  [BUGGY]  if(signatureLength  ==  10  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  10  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  10  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    &&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
340	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
341	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  SignatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  SignatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  signatureLength)||  ZipArchiveInputStream.matches(signature,  SignatureLength))  {	  if(TarArchiveInputStream.matches(signature,    signatureLength)||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
342	[BUG]  [BUGGY]  nisipLength  =  in.read(signatureLength);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  nisipLength  =  in.read(signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	nisipLength  =  in.read(signatureLength);	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
343	[BUG]  [BUGGY]  nisipLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  nisipLength  =  in.read(signature);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	nisipLength  =  in.read(signature);	  if(signatureLength    ==    2)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
344	[BUG]  [BUGGY]  if(signatureLength  ==  14  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  14  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  14  &&  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    2    &&    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
345	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  zipArchiveInputStream.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    zipArchiveInputStream.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
346	[BUG]  [BUGGY]  if(tarheader.matches(signature,  signatureLength)||  tarheader!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  signatureLength)||  tarheader!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  signatureLength)||  tarheader!=  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    tarheader!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
347	[BUG]  [BUGGY]  if(in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported())  {	  if(JARArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
348	[BUG]  [BUGGY]  if(tarheader.matches(signature,  signatureLength)||  tarheader  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  signatureLength)||  tarheader  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  signatureLength)||  tarheader  ==  null)  {	  if(zipArchiveInputStream.matches(signature,    signatureLength)||    tarheader    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
349	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  SignatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  SignatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  SignatureLength))  {	  if(zipArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
350	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  DUMP))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  DUMP))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  DUMP))  {	  if(zipArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
351	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LONG)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LONG)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LONG)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
352	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  length)||  StringUtils.isEmpty(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  length)||  StringUtils.isEmpty(signature.length))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  length)||  StringUtils.isEmpty(signature.length))  {	  if(ZipArchiveInputStream.matches(signature,    12)||    StringUtils.isEmpty(signature.length))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
353	[BUG]  [BUGGY]  if(signatureLength!=  2  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  2  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  2  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength!=    2    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
354	[BUG]  [BUGGY]  if(tarheader.matches(signature,  tarheader)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  tarheader)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  tarheader)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    tarheader)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
355	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LONG)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LONG)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LONG)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
356	[BUG]  [BUGGY]  in.setLength(signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.setLength(signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.setLength(signatureLength);	  in.mark(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
357	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readUTF());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readUTF());  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.readUTF());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
358	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)||  in.markSupported())  {	  if(JarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
359	[BUG]  [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  TARArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JarArchiveInputStream.matches(signature,  signatureLength)||  TARArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JarArchiveInputStream.matches(signature,  signatureLength)||  TARArchiveInputStream.matches(signature,  signatureLength))  {	  if(JarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
360	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getValue(),  signatureLength);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getValue(),  signatureLength);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getValue(),  signatureLength);	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
361	[BUG]  [BUGGY]  if(signatureLength!=  12)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength!=  12)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength!=  12)  {  throw  new  IllegalArgumentException( " ");  }	  if(signatureLength!=    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
362	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getPath());	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
363	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  tais.getInputStream( "UTF-8 ");	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
364	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
365	[BUG]  [BUGGY]  InputStream  in  =  tais.readFully(signature);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  tais.readFully(signature);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  tais.readFully(signature);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
366	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(64);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  tais.getInputStream(64);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  tais.getInputStream(64);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
367	[BUG]  [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength)||  RBArchiveInputStream.matches(signature.length,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(RBArchiveInputStream.matches(signature,  signatureLength)||  RBArchiveInputStream.matches(signature.length,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(RBArchiveInputStream.matches(signature,  signatureLength)||  RBArchiveInputStream.matches(signature.length,  signatureLength))  {	  if(RBArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
368	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  -  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  -  1));  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(signatureLength  -  1));	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
369	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readBytes(signatureLength));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readBytes(signatureLength));  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(in.readBytes(signatureLength));	  InputStream    in    =    new    ZipInputStream(in.getBytes(signatureLength));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
370	[BUG]  [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(TarArchiveInputStream.matches(signature,  signatureLength)||  StringUtils.isEmpty(signature.length  +  2))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    StringUtils.isEmpty(signature.length    +    2))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
371	[BUG]  [BUGGY]  if(signatureLength  ==  12  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  12  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  12  ||  zipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    12    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
372	[BUG]  [BUGGY]  if(tarheaderLength.matches(signature,  tarheaderLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheaderLength.matches(signature,  tarheaderLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheaderLength.matches(signature,  tarheaderLength))  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
373	[BUG]  [BUGGY]  if(tarheader.matches(signature,  tarLength))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  tarLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  tarLength))  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
374	[BUG]  [BUGGY]  if(tais.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tais.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tais.matches(signature,  signatureLength))  {	  if(zipArchiveInputStream.matches(signature,    tarheaderLength))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
375	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DECISION)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  DECISION)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  DECISION)&&  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    LENGTH)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
376	[BUG]  [BUGGY]  nisipLength  =  Integer.parseInt(signature.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  nisipLength  =  Integer.parseInt(signature.length);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	nisipLength  =  Integer.parseInt(signature.length);	  if(signatureLength    ==    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
377	[BUG]  [BUGGY]  if(signatureLength  ==  64  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  64  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  64  ||  ZipArchiveInputStream.matches(signature,  signatureLength))  {	  if(signatureLength    ==    32    ||    ZipArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
378	[BUG]  [BUGGY]  if(signatureLength  ==  ZipArchiveInputStream.JAR  ||  in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(signatureLength  ==  ZipArchiveInputStream.JAR  ||  in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(signatureLength  ==  ZipArchiveInputStream.JAR  ||  in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)&&  in.markSupported())  {	  if(in.markSupported()    ||    ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
379	[BUG]  [BUGGY]  if(in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)/&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)/&  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(in.markSupported()  ||  ZipArchiveInputStream.matches(signature,  signatureLength)/&  in.markSupported())  {	  if(in.markSupported()    ||    ZipArchiveInputStream.matches(signature,    signatureLength)&&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
380	[BUG]  [BUGGY]  in.defaultReader().write(signature.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  in.defaultReader().write(signature.length);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	in.defaultReader().write(signature.length);	  in.defaultReader().write(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
381	[BUG]  [BUGGY]  if(tarheader.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  signatureLength)||  tarheader.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  signatureLength)||  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
382	[BUG]  [BUGGY]  if(tarheader.matches(signature,  signatureLength)&&  tarheader.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(tarheader.matches(signature,  signatureLength)&&  tarheader.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(tarheader.matches(signature,  signatureLength)&&  tarheader.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)&&    tarheader.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
383	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  +  11);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  InputStream  in  =  new  ZipInputStream(signatureLength  +  11);  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	InputStream  in  =  new  ZipInputStream(signatureLength  +  11);	  InputStream    in    =    new    ZipInputStream(signatureLength);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
384	[BUG]  [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(JARArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(JARArchiveInputStream.matches(signature,  signatureLength)||  TarArchiveInputStream.matches(signature,  signatureLength))  {	  if(ZipArchiveInputStream.matches(signature,    signatureLength)||    TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
385	[BUG]  [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LUMP)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(ZipArchiveInputStream.matches(signature,  LUMP)||  in.markSupported())  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(ZipArchiveInputStream.matches(signature,  LUMP)||  in.markSupported())  {	  if(ZipArchiveInputStream.matches(signature,    DUMP)||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
386	[BUG]  [BUGGY]  if(zipArchiveInputStream.matches(signature,  LAST_VALID))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!in.markSupported())  {  throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();      [BUGGY]  if(zipArchiveInputStream.matches(signature,  LAST_VALID))  {  [BUGGY]      return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);  }  else  if  (CpioArchiveInputStream.matches(signature,  signatureLength))  {  return  new  CpioArchiveInputStream(in);  }    [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	212	212	1	replace	if(zipArchiveInputStream.matches(signature,  LAST_VALID))  {	  if(zipArchiveInputStream.matches(signature,    12))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
