bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(signature!=  null  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(signature!=  null  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(signature!=  null  ||!in.markSupported())  {	  if(signature    ==    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  if  (in.markSupported()  &&!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in.markSupported()  &&!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  &&!in.markSupported())  {	  if    (!in.markSupported()    &&!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
5	[BUG]  [BUGGY]  if  (!isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WRITE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WRITE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WRITE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
8	[BUG]  [BUGGY]  if(in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  if(in.mark()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.mark()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.mark()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getRawInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getRawInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getRawInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
11	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getArchiveInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getArchiveInputStream(in.getVersion());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getArchiveInputStream(in.getVersion());	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
12	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getRandomArchiveInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getRandomArchiveInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getRandomArchiveInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
13	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getClass().getResourceAsStream( "ArchiveInputStream ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getClass().getResourceAsStream( "ArchiveInputStream ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getClass().getResourceAsStream( "ArchiveInputStream ");	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
14	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getInternalInputStream();  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getInternalInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getInternalInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
15	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getArchiveInputStream(in);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getArchiveInputStream(in);	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  if(in!=  null  ||!in.isSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  ||!in.isSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||!in.isSupported())  {	  if(in    ==    null    ||!in.isSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
17	[BUG]  [BUGGY]  if(signature  ==  null  ||!in.isSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(signature  ==  null  ||!in.isSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(signature  ==  null  ||!in.isSupported())  {	  if(in    ==    null    ||!in.isSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
18	[BUG]  [BUGGY]  if(in  ==  null  ||  in.isSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.isSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.isSupported())  {	  if(in    ==    null    ||!in.isSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
19	[BUG]  [BUGGY]  if(in  ==  null  ||!in.isStream())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||!in.isStream())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||!in.isStream())  {	  if(in    ==    null    ||!in.isSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
20	[BUG]  [BUGGY]  if  (in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!in.markSupported()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
21	[BUG]  [BUGGY]  if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {	  if(!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    signatureLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
22	[BUG]  [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  12)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  12)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  12)  {	  if(!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    signatureLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
23	[BUG]  [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  2)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  2)  {	  if(!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    signatureLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
24	[BUG]  [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  ==  0)  {	  if(!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    signatureLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
25	[BUG]  [BUGGY]  if  (in.mark(signature.length)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in.mark(signature.length)||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.mark(signature.length)||  in.markSupported())  {	  if    (in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if  (in.markSupported()  ||  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in.markSupported()  ||  in.markSupported()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  ||  in.markSupported()  ||  in.markSupported())  {	  if    (in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  if  (in.mark()  ||  in.mark())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in.mark()  ||  in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.mark()  ||  in.mark())  {	  if    (in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  4096);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  4096);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  4096);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
29	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  File.separator);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read()  +  File.separator);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
30	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readLine());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readLine());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.readLine());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
31	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readUTF());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readUTF());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.readUTF());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
32	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read()  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read()  +  1);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
33	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  file);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  file);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  file);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
34	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getRawClass());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getRawClass());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getRawClass());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
35	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion()  +  1);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion()  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion()  +  1);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
36	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  this);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  this);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  this);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
37	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  file);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  file);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  file);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
38	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  4096);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  4096);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  4096);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
39	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getAbsolutePath());  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getAbsolutePath());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getAbsolutePath());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
40	[BUG]  [BUGGY]  if(in  >=  null  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  >=  null  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  >=  null  ||  in.markSupported())  {	  if(in!=    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  if(signature!=  null  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(signature!=  null  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(signature!=  null  ||  in.markSupported())  {	  if(in!=    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  if(in  >>  null  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  >>  null  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  >>  null  ||  in.markSupported())  {	  if(in!=    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  if(in.markSupported()  &&  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  &&  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  &&  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  if(in.markSupported()  ||  in.enabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  in.enabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  in.enabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  if(in  ==  null  ||  in.mark()  ||!in.mark())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.mark()  ||!in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.mark()  ||!in.mark())  {	  if(in    ==    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
49	[BUG]  [BUGGY]  if(in  ==  null  ||  in.mark()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.mark()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.mark()  ||!in.markSupported())  {	  if(in    ==    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
50	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markInt()  ||!in.markInt())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markInt()  ||!in.markInt())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markInt()  ||!in.markInt())  {	  if(in    ==    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
51	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markBytes()  ||!in.markBytes())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markBytes()  ||!in.markBytes())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markBytes()  ||!in.markBytes())  {	  if(in    ==    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
52	[BUG]  [BUGGY]  While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  	41	None	replace
53	[BUG]  [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [CE]  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  	41	None	replace
54	[BUG]  [BUGGY]  aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
55	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
56	[BUG]  [BUGGY]  if(!in.markSupported()  &&  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  &&  in.markSupported()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  &&  in.markSupported()  ||  in.markSupported())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
57	[BUG]  [BUGGY]  if(!in.mark()  ||  in.mark()  ||  in.mark())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.mark()  ||  in.mark()  ||  in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.mark()  ||  in.mark()  ||  in.mark())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
58	[BUG]  [BUGGY]  if(in.mark()  ||  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.mark()  ||  in.markSupported()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.mark()  ||  in.markSupported()  ||  in.markSupported())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
59	[BUG]  [BUGGY]  if(!in.markSupported()  ||  in.markSupported()  ||  in.reset())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  ||  in.markSupported()  ||  in.reset())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  ||  in.markSupported()  ||  in.reset())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
60	[BUG]  [BUGGY]  if(in.mark()  ||  in.mark()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.mark()  ||  in.mark()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.mark()  ||  in.mark()  ||  in.markSupported())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
61	[BUG]  [BUGGY]  if  (!in.markSupported()  &&  in.printSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.markSupported()  &&  in.printSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&  in.printSupported())  {	  if    (!in.markSupported()    ||    in.printSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
62	[BUG]  [BUGGY]  if  (in.markSupported()  ||  in.printSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in.markSupported()  ||  in.printSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  ||  in.printSupported())  {	  if    (!in.markSupported()    ||    in.printSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
63	[BUG]  [BUGGY]  if  (!in.markSupported()  ||  in.printSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.markSupported()  ||  in.printSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  ||  in.printSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    ||    in.printSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
64	[BUG]  [BUGGY]  if(in!=  null  ||  in.mark()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  ||  in.mark()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  in.mark()  ||!in.markSupported())  {	  if(in!=    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
65	[BUG]  [BUGGY]  if(in  >=  null  ||  in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  >=  null  ||  in.markSupported()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  >=  null  ||  in.markSupported()  ||!in.markSupported())  {	  if(in!=    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
66	[BUG]  [BUGGY]  if(in!=  null  ||  in.markInt()  ||!in.markInt())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  ||  in.markInt()  ||!in.markInt())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  in.markInt()  ||!in.markInt())  {	  if(in!=    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
67	[BUG]  [BUGGY]  InputStream  in  =  TarArchiveInputStream.getInputStream();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  TarArchiveInputStream.getInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  TarArchiveInputStream.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
68	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream( "UTF-8 ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  tais.getInputStream( "UTF-8 ");	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
69	[BUG]  [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.tais.getInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.tais.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
70	[BUG]  [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.tarheader.getInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.tarheader.getInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream(archiverName);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  tais.getInputStream(archiverName);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  InputStream  in  =  tais.readInputStream();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  tais.readInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  tais.readInputStream();	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
73	[BUG]  [BUGGY]  if  (!in.mark()  &&  in.mark())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.mark()  &&  in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.mark()  &&  in.mark())  {	  if    (!in.mark()    ||    in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
74	[BUG]  [BUGGY]  if  (!in.mark()  ||  in.mark()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.mark()  ||  in.mark()  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.mark()  ||  in.mark()  <  =  0)  {	  if    (!in.mark()    ||    in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
75	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	18	None	replace
76	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  if  (!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
79	[BUG]  [BUGGY]  While(in!=  null)  {  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [CE]  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  	44	None	replace
80	[BUG]  [BUGGY]  While(in!=  null)  {  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  else  {  in.close();  }  [CE]  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  else  {  in.close();  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  else  {  in.close();  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  	44	None	replace
81	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
82	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  else  {  in.close();  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  else  {  in.close();  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
83	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
84	[BUG]  [BUGGY]  if(!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
85	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
86	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
87	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
88	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.WRITE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.WRITE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.WRITE_FIELD_NAMES))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
89	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_SIGNATURES))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_SIGNATURES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_SIGNATURES))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
90	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_FACTOR))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
91	[BUG]  [BUGGY]  final  byte  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  byte  signatureLength  =  in.read(signature);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  byte  signatureLength  =  in.read(signature);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
92	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature.length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  int  signatureLength  =  in.read(signature.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read(signature.length);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
93	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  int  signatureLength  =  in.read();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read();	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
94	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(in.mark(signature.length));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  int  signatureLength  =  in.read(in.mark(signature.length));  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read(in.mark(signature.length));	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature,  tarheader);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  int  signatureLength  =  in.read(signature,  tarheader);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read(signature,  tarheader);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
96	[BUG]  [BUGGY]  final  String  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  String  signatureLength  =  in.read(signature);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  String  signatureLength  =  in.read(signature);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
97	[BUG]  [BUGGY]  if  (in.markSupported()  &&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in.markSupported()  &&  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  &&  in.markSupported())  {	  if    (!in.markSupported()    &&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  tarheader);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  tarheader);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in,  tarheader);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
99	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getBytes());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getBytes());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getBytes());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
100	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  4096);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  4096);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in,  4096);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
101	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.readLine());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.readLine());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.readLine());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
102	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  this.tarheader);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  this.tarheader);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in,  this.tarheader);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
103	[BUG]  [BUGGY]  While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  	40	None	replace
104	[BUG]  [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  	40	None	replace
105	[BUG]  [BUGGY]  aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
106	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.openStream();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.openStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.openStream();	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
107	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.getInputStream( "UTF-8 ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.getInputStream( "UTF-8 ");	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
108	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.toInputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.toInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.toInputStream();	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
109	[BUG]  [BUGGY]  InputStream  in  =  archiverName.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  archiverName.getInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  archiverName.getInputStream();	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
110	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.toByteArray();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.toByteArray();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.toByteArray();	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
111	[BUG]  [BUGGY]  if(in.mark()  ||!in.mark()  ||!in.mark())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.mark()  ||!in.mark()  ||!in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.mark()  ||!in.mark()  ||!in.mark())  {	  if(in.mark()    ||!in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
112	[BUG]  [BUGGY]  if(in.mark()  >  0  ||!in.mark())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.mark()  >  0  ||!in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.mark()  >  0  ||!in.mark())  {	  if(in.mark()    ||!in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
113	[BUG]  [BUGGY]  if(in.mark())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.mark())  {	  if(in.mark()    ||!in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
114	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
115	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
116	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
117	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL))  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
118	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||  in.markSupported())  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
119	[BUG]  [BUGGY]  if  (!in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
120	[BUG]  [BUGGY]  if(in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
121	[BUG]  [BUGGY]  if(in.markSupported()  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in.markSupported()    ||!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
122	[BUG]  [BUGGY]  if(in.markSupported()  ||!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in.markSupported()    ||!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
123	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in.markSupported()    ||!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
124	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.read());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.read());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.read());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
125	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.length);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.length);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
126	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.readUTF());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.readUTF());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.readUTF());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
127	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read()  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read()  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.read()  +  1);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
128	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read()  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read()  +  File.separator);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.read()  +  File.separator);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  if  (in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
130	[BUG]  [BUGGY]  InputStream  in  =  getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream( "UTF-8 ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream( "UTF-8 ");	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
131	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(IResource.DEPRECATED);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(IResource.DEPRECATED);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream(IResource.DEPRECATED);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
132	[BUG]  [BUGGY]  InputStream  in  =  getOutputStream();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getOutputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getOutputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
133	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(IResource.DEFAULT_VERSION);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(IResource.DEFAULT_VERSION);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream(IResource.DEFAULT_VERSION);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
134	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(IResource.DEFAULT_SIZE);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(IResource.DEFAULT_SIZE);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream(IResource.DEFAULT_SIZE);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
135	[BUG]  [BUGGY]  InputStream  in  =  this.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.getInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.getInputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
136	[BUG]  [BUGGY]  if(in.markSupported()  ||  in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  in.markSupported()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  in.markSupported()  ||!in.markSupported())  {	  if(in.markSupported()    ||!in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
137	[BUG]  [BUGGY]  if(!in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {	  if(in.markSupported()    ||!in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
138	[BUG]  [BUGGY]  if(in.markInt()  ||!in.markInt()  ||!in.markInt())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markInt()  ||!in.markInt()  ||!in.markInt())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markInt()  ||!in.markInt()  ||!in.markInt())  {	  if(in.markSupported()    ||!in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
139	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(64);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(64);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(64);	  ArchiveInputStream    in    =    new    ArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
140	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(0);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(0);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(0);	  ArchiveInputStream    in    =    new    ArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
141	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(System.err);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(System.err);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(System.err);	  ArchiveInputStream    in    =    new    ArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(System.out);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(System.out);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(System.out);	  ArchiveInputStream    in    =    new    ArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
143	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(System.in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(System.in);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(System.in);	  ArchiveInputStream    in    =    new    ArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
144	[BUG]  [BUGGY]  if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
145	[BUG]  [BUGGY]  While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [CE]  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  	42	None	replace
146	[BUG]  [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [CE]  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  	42	None	replace
147	[BUG]  [BUGGY]  aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [CE]  not  a  statement  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	aughtExceptionHandler  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
148	[BUG]  [BUGGY]  if  (!in.mark()  &&!in.mark())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.mark()  &&!in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.mark()  &&!in.mark())  {	  if    (!in.mark()    ||!in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
149	[BUG]  [BUGGY]  if  (!in.mark()  ||!in.mark()  ||!in.mark())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.mark()  ||!in.mark()  ||!in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.mark()  ||!in.mark()  ||!in.mark())  {	  if    (!in.mark()    ||!in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
150	[BUG]  [BUGGY]  if  (!in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
151	[BUG]  [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  	40	None	replace
152	[BUG]  [BUGGY]  While(in  ==  null)  {  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in  ==  null)  {  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in  ==  null)  {  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  	40	None	replace
153	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getZipArchiveInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getZipArchiveInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getZipArchiveInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
154	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getCurrentInputStream();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getCurrentInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getCurrentInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
155	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getResourceInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getResourceInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getResourceInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
156	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getRandomInputStream();  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getRandomInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getRandomInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
157	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream(this.tarheader);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.getInputStream(this.tarheader);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.getInputStream(this.tarheader);	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
158	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {	  if(in.markSupported()    ||!in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
159	[BUG]  [BUGGY]  if(in.markSupported()  ||!in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||!in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||!in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {	  if(in.markSupported()    ||!in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
160	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(in.getVersion());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream(in.getVersion());	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
161	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(in);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream(in);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
162	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(archiverName);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream(archiverName);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
163	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(in.readLine());  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(in.readLine());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream(in.readLine());	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
164	[BUG]  [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  1)  {	  if(!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    signatureLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
165	[BUG]  [BUGGY]  if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {	  if(!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME)&&    signatureLength    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
166	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  Integer.MAX_VALUE);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  Integer.MAX_VALUE);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
167	[BUG]  [BUGGY]  if  (!in.markSupported()  ||  in.printInput())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.markSupported()  ||  in.printInput())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  ||  in.printInput())  {	  if    (!in.markSupported()    ||    in.printSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
168	[BUG]  [BUGGY]  if(in!=  null  ||  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  ||  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
169	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
170	[BUG]  [BUGGY]  if(in!=  null  ||  in.mark()  ||!in.mark())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  ||  in.mark()  ||!in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  in.mark()  ||!in.mark())  {	  if(in.mark()    ||!in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
171	[BUG]  [BUGGY]  if(in  ==  null  ||!in.isInput())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||!in.isInput())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||!in.isInput())  {	  if(in    ==    null    ||!in.isSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
172	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(tarheader);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  int  signatureLength  =  in.read(tarheader);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read(tarheader);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
173	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(dump);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  int  signatureLength  =  in.read(dump);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read(dump);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
174	[BUG]  [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [CE]  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  	44	None	replace
175	[BUG]  [BUGGY]  While(in!=  null)  {  final  in  =  in.read();  if(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [CE]  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  final  in  =  in.read();  if(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  final  in  =  in.read();  if(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  	44	None	replace
176	[BUG]  [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read();  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [CE]  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read();  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  final  int  signatureLength  =  in.read();  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  	44	None	replace
177	[BUG]  [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  return  new  ZipArchiveInputStream(in);  }  [CE]  ';'  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  return  new  ZipArchiveInputStream(in);  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  ';'  expected	44	None	replace
178	[BUG]  [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.n ");  }  [CE]  [FE]                                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.n ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.n ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  	44	None	replace
179	[BUG]  [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [CE]  [FE]                                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  if(signatureLength  ==  0)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.   ");    }    else    {    in.close();    }    	non-compiled	[CE]  	44	None	replace
180	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME)))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME)))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAME  ||  isEnabled(Feature.QUOTE_FIELD_NAME)))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
181	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_LITERAL_NAME))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_LITERAL_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_LITERAL_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
182	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_RANGE))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_RANGE))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_RANGE))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
183	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_FILENAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.isEnabled(Feature.QUOTE_FIELD_FILENAME))  {	  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
184	[BUG]  [BUGGY]  if(signature!=  null  ||  in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(signature!=  null  ||  in.markSupported()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(signature!=  null  ||  in.markSupported()  ||!in.markSupported())  {	  if(in!=    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
185	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markBytes())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markBytes())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markBytes())  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
186	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markDigits())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markDigits())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markDigits())  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
187	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markFull())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markFull())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markFull())  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
188	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markInvalid())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markInvalid())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markInvalid())  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
189	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markTransient())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markTransient())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markTransient())  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
190	[BUG]  [BUGGY]  if(in  >=  null  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  >=  null  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  >=  null  ||!in.markSupported())  {	  if(in!=    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
191	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  TarArchiveInputStream.DEFAULT);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in,  TarArchiveInputStream.DEFAULT);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
192	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  this);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in,  this);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in,  this);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
193	[BUG]  [BUGGY]  if  (!in.markSupported()  &&!in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.markSupported()  &&!in.markSupported()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&!in.markSupported()  ||!in.markSupported())  {	  if    (!in.markSupported()    &&!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
194	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  Integer.MAX_VALUE);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  Integer.MAX_VALUE);	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
195	[BUG]  [BUGGY]  if(in!=  null  &&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  &&  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  &&  in.markSupported())  {	  if(in!=    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
196	[BUG]  [BUGGY]  if(in  ==  null  ||  in!=  null.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in!=  null.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in!=  null.markSupported())  {	  if(in!=    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
197	[BUG]  [BUGGY]  if(in!=  null  ||  out.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  ||  out.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  out.markSupported())  {	  if(in!=    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
198	[BUG]  [BUGGY]  if(in  ==  null  ||!in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||!in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||!in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
199	[BUG]  [BUGGY]  if(in!=  null  ||  in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  ||  in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in.markSupported()    ||!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
200	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in.markSupported()    ||!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
201	[BUG]  [BUGGY]  if  (!in.mark()  ||!in.reset())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.mark()  ||!in.reset())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.mark()  ||!in.reset())  {	  if    (!in.mark()    ||!in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
202	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader());	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
203	[BUG]  [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null.. ");  }  [CE]  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null.. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null.. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  	42	None	replace
204	[BUG]  [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  final  int  signatureLength  =  in.read(signature);	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  ';'  expected	42	None	replace
205	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
206	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_SIGNATURES))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_SIGNATURES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_SIGNATURES))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
207	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FACTOR))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
208	[BUG]  [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null.. ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null.. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	While(in!=  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null.. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  	41	None	replace
209	[BUG]  [BUGGY]  if  (!in.mark()  ||  in.mark(signature.length))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.mark()  ||  in.mark(signature.length))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.mark()  ||  in.mark(signature.length))  {	  if    (!in.mark()    ||    in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
210	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.readBytes());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.readBytes());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.readBytes());	  ArchiveInputStream    in    =    new    ArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
211	[BUG]  [BUGGY]  if(!in.markSupported()  &&  in.markSupported()  &&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  &&  in.markSupported()  &&  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  &&  in.markSupported()  &&  in.markSupported())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
212	[BUG]  [BUGGY]  if(!in.read()  ||  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.read()  ||  in.markSupported()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.read()  ||  in.markSupported()  ||  in.markSupported())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
213	[BUG]  [BUGGY]  if(!in.mark()  ||  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.mark()  ||  in.markSupported()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.mark()  ||  in.markSupported()  ||  in.markSupported())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
214	[BUG]  [BUGGY]  if  (in!=  null  ||  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (in!=  null  ||  in.markSupported()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in!=  null  ||  in.markSupported()  ||  in.markSupported())  {	  if    (in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
215	[BUG]  [BUGGY]  if(in!=  null  ||  in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  ||  in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
216	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  TarArchiveInputStream.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  TarArchiveInputStream.DEFAULT);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  TarArchiveInputStream.DEFAULT);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
217	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(tarheader));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(tarheader));  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read(tarheader));	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
218	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.read());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  in.read());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  in.read());	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
219	[BUG]  [BUGGY]  if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported())  {	  if    (!in.markSupported()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
220	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  getInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
221	[BUG]  [BUGGY]  ArchiveInputStream  in  =  createArchiveInputStream();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  createArchiveInputStream();  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  createArchiveInputStream();	  ArchiveInputStream    in    =    getArchiveInputStream();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
222	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  tais.getInputStream(PRINT_SIGNATURE);	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
223	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream( "jAR ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  tais.getInputStream( "jAR ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  tais.getInputStream( "jAR ");	  InputStream    in    =    tais.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
224	[BUG]  [BUGGY]  if(in  ==  null  ||  in!=  null  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in!=  null  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in!=  null  ||  in.markSupported())  {	  if(in!=    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
225	[BUG]  [BUGGY]  if(signature  ==  null  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(signature  ==  null  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(signature  ==  null  ||  in.markSupported())  {	  if(in!=    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
226	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
227	[BUG]  [BUGGY]  if(in  ==  null  ||!in.markSupported()  &&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||!in.markSupported()  &&  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||!in.markSupported()  &&  in.markSupported())  {	  if    (!in.markSupported()    &&    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
228	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markDigits()  ||!in.markDigits())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markDigits()  ||!in.markDigits())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markDigits()  ||!in.markDigits())  {	  if(in    ==    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
229	[BUG]  [BUGGY]  if  (!in.markSupported()  ||  in.printSurrogate())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  (!in.markSupported()  ||  in.printSurrogate())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  ||  in.printSurrogate())  {	  if    (!in.markSupported()    ||    in.printSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
230	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  JAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read(),  JAR);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read(),  JAR);	  InputStream    in    =    new    ZipInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
231	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.available());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.available());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.read(),  in.available());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.read());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
232	[BUG]  [BUGGY]  if(in  ==  null  ||!in.isInputStream())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||!in.isInputStream())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||!in.isInputStream())  {	  if(in    ==    null    ||!in.isSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
233	[BUG]  [BUGGY]  if(in.mark()  ==  0  ||!in.mark())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.mark()  ==  0  ||!in.mark())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.mark()  ==  0  ||!in.mark())  {	  if(in.mark()    ||!in.mark())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
234	[BUG]  [BUGGY]  if(in!=  null  &&  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  &&  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  &&  in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
235	[BUG]  [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  signatureLength  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  signatureLength  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  signatureLength  >  0)  {	  if(in.markSupported()    ||    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
236	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  in.readUTF());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  in.readUTF());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  in.readUTF());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
237	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  in.readBytes());  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  in.readBytes());  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion(),  in.readBytes());	  ArchiveInputStream    in    =    new    ArchiveInputStream(in.getVersion());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
238	[BUG]  [BUGGY]  if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {	  if    (in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
239	[BUG]  [BUGGY]  if  ((  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if  ((  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  ((  in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
240	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  [Delete]  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	[Delete]	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
241	[BUG]  [BUGGY]  }  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  }  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	}  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
242	[BUG]  [BUGGY]  }  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.. ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  }  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	}  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
243	[BUG]  [BUGGY]  }  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ".);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  }  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ".);  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	}  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ".);  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
244	[BUG]  [BUGGY]  aughtExceptionHandler(in, "Mark  is  not  supported. ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  aughtExceptionHandler(in, "Mark  is  not  supported. ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	aughtExceptionHandler(in, "Mark  is  not  supported. ");	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    is    not    supported.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
245	[BUG]  [BUGGY]  >>  [Delete]  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  >>  [Delete]  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	>>  [Delete]  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
246	[BUG]  [BUGGY]  }  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  }  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	}  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
247	[BUG]  [BUGGY]  aughtException( "Mark  must  be  null. ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  aughtException( "Mark  must  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	aughtException( "Mark  must  be  null. ");	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
248	[BUG]  [BUGGY]  >>  [Delete]  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null.. ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  >>  [Delete]  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null.. ");  }  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	>>  [Delete]  else  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null.. ");  }	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
249	[BUG]  [BUGGY]  if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  in.markSupported())  {	  if    (in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
250	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.startsWith( "Archive ")?  this.archiverName.getInputStream()  :  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.startsWith( "Archive ")?  this.archiverName.getInputStream()  :  null;  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.startsWith( "Archive ")?  this.archiverName.getInputStream()  :  null;	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
251	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.startsWith( "ArchiveInputStream ")?  this.archiverName.getInputStream()  :  null;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.startsWith( "ArchiveInputStream ")?  this.archiverName.getInputStream()  :  null;  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.startsWith( "ArchiveInputStream ")?  this.archiverName.getInputStream()  :  null;	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
252	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.startsWith( "/ ")?  this.archiverName.getInputStream()  :  null;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  this.archiverName.startsWith( "/ ")?  this.archiverName.getInputStream()  :  null;  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.startsWith( "/ ")?  this.archiverName.getInputStream()  :  null;	  InputStream    in    =    this.archiverName.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
253	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( "Mark  must  not  be  null. ");  [CE]  [FE]                        AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( "Mark  must  not  be  null. ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( "Mark  must  not  be  null. ");	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  	41	None	replace
254	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().loadClass( "org.apache.jdk.internal.ArchiveInputStream ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().loadClass( "org.apache.jdk.internal.ArchiveInputStream ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	Thread.currentThread().getContextClassLoader().loadClass( "org.apache.jdk.internal.ArchiveInputStream ");	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
255	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().loadClass( "org.apache.commons.core.ArchiveInputStream ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().loadClass( "org.apache.commons.core.ArchiveInputStream ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	Thread.currentThread().getContextClassLoader().loadClass( "org.apache.commons.core.ArchiveInputStream ");	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
256	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( "Mark  must  not  be  null. "));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( "Mark  must  not  be  null. "));  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( "Mark  must  not  be  null. "));	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
257	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName( "ArchiveInputStream ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName( "ArchiveInputStream ");  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName( "ArchiveInputStream ");	  if(in    ==    null)    {    throw    new    IllegalArgumentException(   "Mark    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
258	[BUG]  [BUGGY]  if(signature  ==  null  ||  in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(signature  ==  null  ||  in.markSupported()  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(signature  ==  null  ||  in.markSupported()  ||!in.markSupported())  {	  if(in!=    null    ||    in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
259	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
260	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature,  4096);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  int  signatureLength  =  in.read(signature,  4096);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read(signature,  4096);	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
261	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature)+  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  final  int  signatureLength  =  in.read(signature)+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read(signature)+  1;	  final    int    signatureLength    =    in.read(signature);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
262	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(JAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  InputStream  in  =  getInputStream(JAR);  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream(JAR);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
263	[BUG]  [BUGGY]  if(signature.length  ==  0  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(signature.length  ==  0  ||!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(signature.length  ==  0  ||!in.markSupported())  {	  if(signature    ==    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
264	[BUG]  [BUGGY]  if(in!=  null  &&!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in!=  null  &&!in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  &&!in.markSupported())  {	  if(in!=    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
265	[BUG]  [BUGGY]  if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  in.markSupported())  {	  if    (!in.markSupported()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
266	[BUG]  [BUGGY]  if(!in.isBridge()  ||  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(!in.isBridge()  ||  in.markSupported()  ||  in.markSupported())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.isBridge()  ||  in.markSupported()  ||  in.markSupported())  {	  if(!in.markSupported()    ||    in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
267	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  in.close())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(     "Stream  must  not  be  null.     ");  }      [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||  in.close())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Mark  is  not  supported.     ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||  in.close())  {	  if(in    ==    null    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
