bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!in.markSupported()  &&!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.markSupported()  &&!in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&!in.markSupported())  {	  if    (!in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  if  (!in.mark()  ||!in.mark())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.mark()  ||!in.mark())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.mark()  ||!in.mark())  {	  if    (!in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  if  (in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (in.markSupported()  ||  in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  ||  in.markSupported())  {	  if    (in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  if  (in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  if  (in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  if(in!=  null  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in!=  null  ||!in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||!in.markSupported())  {	  if(in    ==    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in  ==  null  ||  in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported())  {	  if(in    ==    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  if(signature  ==  null  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(signature  ==  null  ||!in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(signature  ==  null  ||!in.markSupported())  {	  if(in    ==    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  if(in!=  null  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in!=  null  ||  in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  in.markSupported())  {	  if(in    ==    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  if  (!in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  if(in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  if  (!in.markSupported()  &&  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.markSupported()  &&  in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&  in.markSupported())  {	  if    (!in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  if  (!in.mark()  ||  in.mark())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.mark()  ||  in.mark())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.mark()  ||  in.mark())  {	  if    (!in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.read());  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.read());	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  InputStream  in  =  tais.getInputStream();  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  tais.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  this.archiverName.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in);  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  InputStream  in  =  getInputStream();  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  InputStream  in  =  getInputStream();  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  ArchiveInputStream  in  =  getArchiveInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  ArchiveInputStream  in  =  getArchiveInputStream();  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  getArchiveInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion());  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion());  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream(in.getVersion());	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  if(in.mark()  ||!in.mark())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in.mark()  ||!in.mark())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.mark()  ||!in.mark())  {	  if(in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  if(in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||!in.markSupported()  ||!in.markSupported())  {	  if(in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  if(in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.markSupported()  ||!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  if  (!in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!in.markSupported()    &&    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (!in.markSupported()    &&    in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in  ==  null  ||  in.markSupported()  ||!in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||  in.markSupported()  ||!in.markSupported())  {	  if(in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  if(in!=  null  ||  in.markSupported()  ||!in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in!=  null  ||  in.markSupported()  ||!in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in!=  null  ||  in.markSupported()  ||!in.markSupported())  {	  if(in.markSupported()    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  if  (!in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  ||!in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if    (!in.markSupported()    ||!in.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  InputStream  in  =  new  ZipInputStream(in.read());  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	InputStream  in  =  new  ZipInputStream(in.read());	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  ArchiveInputStream  in  =  new  ArchiveInputStream();  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	ArchiveInputStream  in  =  new  ArchiveInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  if  (!in.markSupported()  ||  in.printSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if  (!in.markSupported()  ||  in.printSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if  (!in.markSupported()  ||  in.printSupported())  {	  if    (!in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  if(in  ==  null  ||!in.isSupported())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in  ==  null  ||!in.isSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null  ||!in.isSupported())  {	  if(in    ==    null    ||!in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  if(!in.markSupported()  ||  in.markSupported()  ||  in.markSupported())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(!in.markSupported()  ||  in.markSupported()  ||  in.markSupported())  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  ||  in.markSupported()  ||  in.markSupported())  {	  if    (!in.markSupported()    ||    in.markSupported())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(!in.markSupported()  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  signatureLength  >  0)  {	  if    (!in.markSupported()    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.   ");  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  not  be  null. ");  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  must  be  null. ");  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  final  int  signatureLength  =  in.read(signature);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  final  int  signatureLength  =  in.read(signature);  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	final  int  signatureLength  =  in.read(signature);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  else  {  in.close();  }  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  else  {  in.close();  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.. ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    throws  ArchiveException  {  if  (in  ==  null)  {  throw  new  IllegalArgumentException(   "Stream  must  not  be  null.   ");  }    [BUGGY]  if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.. ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Mark  is  not  supported.   ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	203	203	1	replace	if(in  ==  null)  {  throw  new  IllegalArgumentException( "Mark  is  not  supported.. ");  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
