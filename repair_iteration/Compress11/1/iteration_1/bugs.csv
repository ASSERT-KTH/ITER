bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in  ==  null  ||  in.markSupported())  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	add	if  (in  ==  null  ||  in.markSupported())  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	2	1	replace
2	[BUG]  [BUGGY]  if  (in  ==  null  ||  in.markSupported())  {  [FE]  IllegalArgumentException  [FE]    AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in  ==  null  ||  in.markSupported())  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	replace	if  (in  ==  null  ||  in.markSupported())  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	2	1	replace
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in!=  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	add	if  (in!=  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	2	1	replace
4	[BUG]  [BUGGY]  if  (in!=  null)  {  [FE]  IllegalArgumentException  [FE]      AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in!=  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	replace	if  (in!=  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	2	1	replace
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  ((  in  ==  null)||(in.markSupported()))  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	add	if  ((  in  ==  null)||(in.markSupported()))  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	2	1	replace
6	[BUG]  [BUGGY]  if  ((  in  ==  null)||(in.markSupported()))  {  [FE]  IllegalArgumentException  [FE]        AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  ((  in  ==  null)||(in.markSupported()))  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	replace	if  ((  in  ==  null)||(in.markSupported()))  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	2	1	replace
7	[BUG]  [BUGGY]  if  (in  ==  null  ||  in.getClass()!=  getClass())  {  [CE]  incomparable  types:  Class<CAP#1>  and  Class<CAP#2>  [FE]          AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in  ==  null  ||  in.getClass()!=  getClass())  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	replace	if  (in  ==  null  ||  in.getClass()!=  getClass())  {	if  (in  ==  null)  {  	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  Class<CAP#2>	2	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	replace	  	if  (in  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in  ==  null  ||  in  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	add	if  (in  ==  null  ||  in  ==  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  AssertionError  	2	1	replace
10	[BUG]  [BUGGY]  if  (in  ==  null  ||  in  ==  null)  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in  ==  null  ||  in  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	replace	if  (in  ==  null  ||  in  ==  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  AssertionError  	2	1	replace
11	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in  ==  null  ||  in!=  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	add	if  (in  ==  null  ||  in!=  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	2	1	replace
12	[BUG]  [BUGGY]  if  (in  ==  null  ||  in!=  null)  {  [FE]  IllegalArgumentException  [FE]      AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if  (in  ==  null  ||  in!=  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	replace	if  (in  ==  null  ||  in!=  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	2	1	replace
13	[BUG]  [BUGGY]  if(in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]    AssertionError  [CONTEXT]  throws  ArchiveException  {  [BUGGY]  if(in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	199	199	1	replace	if(in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	if  (in  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
