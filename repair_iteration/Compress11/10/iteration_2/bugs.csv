bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dumpsig,  32))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dumpsig,  32))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(dumpsig,  32))  {	  }    else    if(CpioArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(in,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(in,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(in,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signatureLength,  dumpsig))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signatureLength,  dumpsig))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(signatureLength,  dumpsig))  {	  }    else    if(CpioArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  null))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  null))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(signature,  null))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    32))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  DUMP))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  DUMP))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(signature,  DUMP))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    32))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(tarheader,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(tarheader,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(tarheader,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dirty,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(var,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(var,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(var,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dirty,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dirty,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dirty,  tarheader))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(dirty,  tarheader))  {	  }    else    if(CpioArchiveInputStream.matches(dirty,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  in.read();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  in.read();  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	in.read();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  InputStream  in  =  new  ArArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  InputStream  in  =  new  ArArchiveInputStream(in);  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	InputStream  in  =  new  ArArchiveInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  InputStream  in  =  tais.getInputStream();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  InputStream  in  =  tais.getInputStream();  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	InputStream  in  =  tais.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  in.skipChildren();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  in.skipChildren();  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	in.skipChildren();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  in.readFully(tarheader);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  in.readFully(tarheader);  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	in.readFully(tarheader);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  InputStream  in  =  new  ArArchiveInputStream(in.read());  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  InputStream  in  =  new  ArArchiveInputStream(in.read());  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	InputStream  in  =  new  ArArchiveInputStream(in.read());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  InputStream  in  =  in.readInt();  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  InputStream  in  =  in.readInt();  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	InputStream  in  =  in.readInt();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(tarheader,  signature))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(tarheader,  signature))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(tarheader,  signature))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  }  else  if(TarArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(TarArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(TarArchiveInputStream.matches(signature,  tarheader))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dumpsig,  SignatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dumpsig,  SignatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(dumpsig,  SignatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    SignatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  }  else  if(ArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(ArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(ArchiveInputStream.matches(signature,  signatureLength))  {	  }    else    if(ArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  }  else  if(ZipArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(ZipArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(ZipArchiveInputStream.matches(signature,  signatureLength))  {	  }    else    if(ArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  }  else  if(ArchiveInputStream.matches(pio,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(ArchiveInputStream.matches(pio,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(ArchiveInputStream.matches(pio,  signatureLength))  {	  }    else    if(ArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  }  else  if(ArArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(ArArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(ArArchiveInputStream.matches(signature,  signatureLength))  {	  }    else    if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  }  else  if(TarArchiveInputStream.matches(dumpsig,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(TarArchiveInputStream.matches(dumpsig,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(TarArchiveInputStream.matches(dumpsig,  signatureLength))  {	  }    else    if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  }  else  if(cpioArchiveInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(cpioArchiveInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(cpioArchiveInputStream.matches(signature,  signatureLength))  {	  }    else    if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  }  else  if(Character.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(Character.matches(signature,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(Character.matches(signature,  signatureLength))  {	  }    else    if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(file,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(file,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(file,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dir,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dirty,  DUMP))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dirty,  DUMP))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(dirty,  DUMP))  {	  }    else    if(CpioArchiveInputStream.matches(dirty,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(zipsig,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(zipsig,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(zipsig,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dirty,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dump,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dump,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(dump,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dumpsig,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dumpsig,  tarheader))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(dumpsig,  tarheader))  {	  }    else    if(CpioArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  }  else  if(CpioInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioInputStream.matches(signature,  signatureLength))  {	  }    else    if(ArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dumpsig,  DUMP))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dumpsig,  DUMP))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(dumpsig,  DUMP))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    32))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(tarheader,  32))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(tarheader,  32))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(tarheader,  32))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    32))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  }  else  if(CpioInputStream.matches(dumpsig,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioInputStream.matches(dumpsig,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioInputStream.matches(dumpsig,  signatureLength))  {	  }    else    if(TarArchiveInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dir,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(dir,  tarheader))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(dir,  tarheader))  {	  }    else    if(CpioArchiveInputStream.matches(dir,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(zip,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(zip,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(zip,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dir,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  InputStream  in  =  new  CpioInputStream(in);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  InputStream  in  =  new  CpioInputStream(in);  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	InputStream  in  =  new  CpioInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  InputStream  in  =  new  CpioArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  InputStream  in  =  new  CpioArchiveInputStream(in);  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	InputStream  in  =  new  CpioArchiveInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  in.mark(dumpsig.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  in.mark(dumpsig.length);  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	in.mark(dumpsig.length);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	InputStream  in  =  this.archiverName.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  InputStream  in  =  tais.readIn();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  InputStream  in  =  tais.readIn();  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	InputStream  in  =  tais.readIn();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  }  else  if(tarheader.matches(signature,  CpioArchiveInputStream))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(tarheader.matches(signature,  CpioArchiveInputStream))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(tarheader.matches(signature,  CpioArchiveInputStream))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  }  else  if(TaisArchiveInputStream.matches(signature,  tarheader))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(TaisArchiveInputStream.matches(signature,  tarheader))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(TaisArchiveInputStream.matches(signature,  tarheader))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    tarheader))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signatureLength,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signatureLength,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(signatureLength,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dirty,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(darheader,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(darheader,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(darheader,  signatureLength))  {	  }    else    if(CpioArchiveInputStream.matches(dirty,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  new  CpioArchiveInputStream(in)))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  new  CpioArchiveInputStream(in)))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(signature,  new  CpioArchiveInputStream(in)))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    32))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  tarheaderLength))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  tarheaderLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(signature,  tarheaderLength))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    32))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  in.close();  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	in.close();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  }  else  if(CpioInternal.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioInternal.matches(signature,  signatureLength))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioInternal.matches(signature,  signatureLength))  {	  }    else    if(ArchiveInputStream.matches(dumpsig,    signatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
50	[BUG]  [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  DEPRECATED))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  in.read(signature);  in.reset();  if  (ZipArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ZipArchiveInputStream(in);  }  else  if  (JarArchiveInputStream.matches(signature,  signatureLength))  {  return  new  JarArchiveInputStream(in);  }  else  if  (ArArchiveInputStream.matches(signature,  signatureLength))  {  return  new  ArArchiveInputStream(in);    [BUGGY]  }  else  if(CpioArchiveInputStream.matches(signature,  DEPRECATED))  {  [BUGGY]    return  new  CpioArchiveInputStream(in);  }  final  byte[]  dumpsig  =  new  byte[32];  in.mark(dumpsig.length);  signatureLength  =  in.read(dumpsig);  in.reset();  if  (DumpArchiveInputStream.matches(dumpsig,  signatureLength))  {  return  new  DumpArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  InputStream  in  [VARIABLES]  byte[]  dumpsig  signature  tarheader  TarArchiveInputStream  tais  boolean  InputStream  in  String  AR  CPIO  DUMP  JAR  TAR  ZIP  archiverName  IOException  e  int  signatureLength  Exception  e  	projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	1.0	218	218	1	replace	}  else  if(CpioArchiveInputStream.matches(signature,  DEPRECATED))  {	  }    else    if(CpioArchiveInputStream.matches(signature,    SignatureLength))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
