projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(strategy.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarhead);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsigLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(dump);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.flush();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(dump);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==2){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{System.arraycopy(signature,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{returnnewArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(true);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.readLine());
