projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signature.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(strategy.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarhead);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.mark(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsigLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(dump);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.flush();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(dump);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==2){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==2){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{System.arraycopy(signature,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{returnnewArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(true);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.readLine());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,cacherName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,dumpsigLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig.length,signatureLength-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicateLength,dumpsig.length-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,signatureLength-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,signatureLength-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,signatureLength-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signature,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.read(),dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.read(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.readLine());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.read()+dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.readInt());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.read()+dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(tarsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength,tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.readFully(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.getValue()-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()*1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.getValue()-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=TarArchiveInputStream.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.tais.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.tarArchiveInputStream.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream("UTF-8");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dupsig.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dupsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength,cacherName.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,4096);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,cacherName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.readLine());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.readLine(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.readLine()+dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.readLine()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.readLine()-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dirsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226System.arraycopy(tarsig,0,dumpsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}else{System.arraycopy(dumpsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}else{System.arraycopy(tarsig,0,dumpsig,1,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarheader.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signature,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tarheader.set(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.getValue(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signature,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.getValue()+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setValue(dumpsig,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.getValue(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{returnnewArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength,cacherName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarheader.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicateLength,dumpsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig.length,signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength+3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength/1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength+32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()/1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setValue(signatureLength,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.mark(dumpsigLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsigLength,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.mark(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.mark(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.mark(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.mark(signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226nisipLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226while(signatureLength==2){thrownewIllegalStateException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226nisipLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226while(signatureLength>=2){thrownewIllegalStateException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226while(signatureLength!=2){thrownewIllegalStateException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226thrownewIllegalStateException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226nisipLength=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signature,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,tar);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.readUTF();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.in.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.readFully();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.readInt()-dumpsig.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.readInt()-1;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(dirty);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(strategy);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length+3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length/2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length+32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.copyCurrentStructure(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(signature,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength-3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length/1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signature.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(strategy.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-6);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signature.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(strategy.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){if(in!=null){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){if(in!=null){System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){if(in!=null){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){if(in!=null){returnnewArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){if(in!=null){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){if(in==null){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.copyCurrentStructure(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tarsig.copyCurrentStructure(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarhead,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarhead,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarhead)+dumpsig.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tar);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-1,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarheader,in.read(signatureLength));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarheader,in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(tarheader),tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(tarheader),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tarheader.set(signatureLength,in.read(tarheader));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in.read(),dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in.read(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in.readLine());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in.read(dumpsig));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in.read(tarsig));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(false);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(true,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(false,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(true,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.setChildren(true);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.flush();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.flush();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.flush();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.flush();}else{System.arraycopy(dumpsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.flush();}else{System.arraycopy(signature,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.flush();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read()-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(dumpsig));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read()+dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signature,in.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.skipChildren();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.readInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.in.readInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=archiverName.getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.getInputStream(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.getInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.getInputStream(),dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.openStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,tarsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarsig.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tarsig.set(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-dumpsig.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicateLength-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig.length-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-dumpsig.length+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-dumpsig.length+32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(declarationLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length,512);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length,2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()-dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()*dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,in.getValue()-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicateLength,in.getValue()-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicateLength,in.getValue()-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue()/dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){dumpsig.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){dumpsig=in.read();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.readValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signature,dumpsig.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(dumpsig.length));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(dumpsig.length),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.set(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(in,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(dupsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=TarArchiveInputStream.createInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(dumpsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(signature,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tarheader.set(signatureLength,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226while(signatureLength==2){thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226while(signatureLength>=2){thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226while(signatureLength!=2){thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226thrownewIllegalArgumentException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){if(in!=null){System.arraycopy(signature,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheader,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheader,cacherName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheader)+dumpsig.length;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheader,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.setChildren(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.closeArchiveInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.seek(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.reset();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.closeArchiver();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength+3);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength+4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength/1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength+32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.flush();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.write(tarsig,0,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.set(signatureLength,TarArchiveInputStream.DEFAULT);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.setArchive(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.set(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signature,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dirsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,in.getValue(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue(),dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue(),dumpsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.getValue(),cacherName.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicateLength,in.getValue(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.tais.readInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readFileInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream(file);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(strategy);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength/2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.read(),dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.read(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.read()+dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.readLine());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.read()+dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{System.arraycopy(dumpsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{System.arraycopy(tarsig,0,dumpsig,1,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(buffered);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.setArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.setCurrentName(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.close(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.init(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dirsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.readLine()-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(tarheader!=null){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(tarheader!=null){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicatesig,in.getValue()-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,in.getValue()-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,in.getValue()-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in,zip.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in,archiverName.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dupsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(dirty);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.createInputStream(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.seek(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,dumpsig.length+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,signatureLength+2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(tarsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(discardsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dirsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(dumpsig,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(dumpsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226safeInputStream(){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226while(signatureLength!=2){thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226natureLength=in.read(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarhead)+dumpsig;
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarhead,cacherName);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig.length-signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig.length-dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-dumpsig.length,32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,signatureLength-2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{System.arraycopy(dumpsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){in.close();}else{System.arraycopy(signature,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){in.close();}else{System.arraycopy(dumpsig,0,signatureLength,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readFully(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream(DEPRECATED);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(dumpsig,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarheader,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarheader.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tars);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(discardsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dunksig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,dumpsig.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(in,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){dumpsig.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){dumpsig.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226safeInputStream(){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226natureLength=in.read(dump);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226nisipLength=in.read(dump);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength*2);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarheader,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarheader,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(dumpsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarsig,tarsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(tarsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){dumpsig.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){dumpsig.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicatesig,in.getValue(),signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=null){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){dumpsig.close();}else{thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=null){in.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(dump));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(dirty));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tarsig.readInt();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,signatureLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,dumpsig.length+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.copyCurrentStructure(tarsig,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(dump);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(dump,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(tarsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.read(dumps);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(zipsig.getAbsolutePath());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in.readInt());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(zipsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,dumpsig.length-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-16);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicatesig,signatureLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tarheader.set(signatureLength,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=null){in.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){dumpsig.close();}else{thrownewIllegalStateException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream(DEPRECATED);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream(dirty);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream(code);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(tarsig,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(tarsig,tarheader);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,dumpsig.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarsig.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig,signatureLength.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dupsig,in.getValue());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.read(dumpsig));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.setSignatureLength(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.put(tarheader,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(true,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.setChildren(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.copyCurrentStructure(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.openArchive();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.openArchiveInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.getInputStream(dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(dumpsig,dumpsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.read(dumpsig));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=null){in.close();}else{returnnewArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.set(signatureLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=null){dumpsig.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readFully(signatureLength,tarheader.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read()-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream(JAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.getInputStream(DEFAULT_TEST_NAME);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(dumpsigLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength-dumpsig.length-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(dumpsig.getValue()));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength,tarsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(declarationLength,dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readIO();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream(DEFAULT_TEST_VERSION);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readInputStream(jAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newbyte[signatureLength];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newbyte[in.read(signatureLength)];
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,cachedSignatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=null){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.readCurrentStructure(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarheader,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(tarheader),tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=this.tarheader.read(tarhead);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarhead).read();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=in.readIO();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,tais);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signatureLength-4);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){thrownewIllegalArgumentException("");}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){dumpsig.close();}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalbyte[]tarheader=in.read(tarheaders);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=2){in.close();}else{System.arraycopy(tarsig,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,signatureDuplicateLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=0){System.arraycopy(signature,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength!=null){in.close();}else{System.arraycopy(signature,0,dumpsig,0,signatureLength);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,cacherName.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin.close();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.startArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.write(dumpsig,0,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.startArchiveInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226tais.closeArchiveInputStream(in);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(declarationLength-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226natureLength=in.read(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(tarsig,0);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in,this.archiverName.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamReader(in,tais.read());
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signature,in.getValue(),dumpsig.length);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(cpioLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.setChildren(true,dumpsigLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newbyte[signatureLength].getInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.copyCurrentStructure(dupsig);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStreamInputStream(in.read(),dumpsigLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(signature.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(strategy.length,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(strategyLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsigLength+1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.openInputStream();
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.archiverName.getInputStream(JAR);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.mark(dumpsig.length/1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,dumpsig.length-31);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(duplicatesig,signatureLength-32);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,tarsig.length-1);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(signatureLength,in.read(signature));
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.throwAsIOException("");
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226natureLength=in.read(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(signatureLength==0){in.close();}else{returnnewArchiveInputStream(in);}
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readFully(signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=tais.readFully(signature);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.set(dirty,signatureLength);
projects/Compress11/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newInputStream(in.read(),dumpsigLength);
