bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    while(t0  >  maxCheckInterval)  {  handler  =  handler.next;  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0  >  maxCheckInterval)  {  handler  =  handler.next;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0  >  maxCheckInterval)  {  handler  =  handler.next;		non-compiled	[CE]  illegal  start  of  expression	20	None	add
2	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    pendingEventTime  =  EventHandler.CONTINUE;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	add	    pendingEventTime  =  EventHandler.CONTINUE;		compilable	  [FE]  MathRuntimeException$4  closeEvents	20	1
3	[BUG]  [BUGGY]    pendingEventTime  =  EventHandler.CONTINUE;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    pendingEventTime  =  EventHandler.CONTINUE;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    pendingEventTime  =  EventHandler.CONTINUE;		compilable	  [FE]  MathRuntimeException$4  closeEvents	20	1	add
3	[BUG]  [BUGGY]    while(t0  >  maxCheckInterval)  {  t0  =  handler.next;  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0  >  maxCheckInterval)  {  t0  =  handler.next;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0  >  maxCheckInterval)  {  t0  =  handler.next;		non-compiled	[CE]  illegal  start  of  expression	20	None	add
4	[BUG]  [BUGGY]    while(t0  >  maxIterationCount)  {  t0  =  handler.next;  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0  >  maxIterationCount)  {  t0  =  handler.next;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0  >  maxIterationCount)  {  t0  =  handler.next;		non-compiled	[CE]  illegal  start  of  expression	20	None	add
5	[BUG]  [BUGGY]    while(t0  >  maxCheckInterval)  {  t0  =  handler.next();  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0  >  maxCheckInterval)  {  t0  =  handler.next();  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0  >  maxCheckInterval)  {  t0  =  handler.next();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
12	[BUG]  [BUGGY]  this.convergence  =  Math.abs(convergence,  maxCheckInterval);  [CE]  no  suitable  method  found  for  abs(double,double)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence,  maxCheckInterval);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	this.convergence  =  Math.abs(convergence,  maxCheckInterval);	this.convergence  =  Math.abs(convergence);  	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	7	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence  -  1);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	add	this.convergence  =  Math.abs(convergence  -  1);	this.convergence  =  Math.abs(convergence);  	compilable	  [FE]  AssertionFailedError  closeEvents	7	1
14	[BUG]  [BUGGY]  this.convergence  =  Math.abs(convergence  -  1);  [FE]  AssertionFailedError  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence  -  1);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	this.convergence  =  Math.abs(convergence  -  1);	this.convergence  =  Math.abs(convergence);  	compilable	  [FE]  AssertionFailedError  closeEvents	7	1	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence  +  1);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	add	this.convergence  =  Math.abs(convergence  +  1);	this.convergence  =  Math.abs(convergence);  	compilable	  [FE]  AssertionFailedError  closeEvents	7	1
15	[BUG]  [BUGGY]  this.convergence  =  Math.abs(convergence  +  1);  [FE]  AssertionFailedError  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence  +  1);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	this.convergence  =  Math.abs(convergence  +  1);	this.convergence  =  Math.abs(convergence);  	compilable	  [FE]  AssertionFailedError  closeEvents	7	1	replace
15	[BUG]  [BUGGY]    [CE]  variable  convergence  might  not  have  been  initialized  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	  	this.convergence  =  Math.abs(convergence);  	non-compiled	[CE]  variable  convergence  might  not  have  been  initialized	7	None	replace
22	[BUG]  [BUGGY]  timeout  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  int  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	add	final  int  convergence,  final  int  maxIterationCount)  {	final  double  convergence,  final  int  maxIterationCount)  {  	compilable	timeout	1	1
23	[BUG]  [BUGGY]  final  int  convergence,  final  int  maxIterationCount)  {  timeout  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  int  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	final  int  convergence,  final  int  maxIterationCount)  {	final  double  convergence,  final  int  maxIterationCount)  {  	compilable	timeout	1	1	replace
23	[BUG]  [BUGGY]  timeout  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  Double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	add	final  Double  convergence,  final  int  maxIterationCount)  {	final  double  convergence,  final  int  maxIterationCount)  {  	compilable	timeout	1	1
24	[BUG]  [BUGGY]  final  Double  convergence,  final  int  maxIterationCount)  {  timeout  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  Double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	final  Double  convergence,  final  int  maxIterationCount)  {	final  double  convergence,  final  int  maxIterationCount)  {  	compilable	timeout	1	1	replace
24	[BUG]  [BUGGY]  static  final  double  convergence,  final  int  maxIterationCount)  {  [CE]  modifier  static  not  allowed  here  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  static  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	static  final  double  convergence,  final  int  maxIterationCount)  {	final  double  convergence,  final  int  maxIterationCount)  {  	non-compiled	[CE]  modifier  static  not  allowed  here	1	None	replace
25	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	  	final  double  convergence,  final  int  maxIterationCount)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]    this.nextAction  =  Math.abs(convergence);  [CE]  possible  loss  of  precision  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.nextAction  =  Math.abs(convergence);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.nextAction  =  Math.abs(convergence);		non-compiled	[CE]  possible  loss  of  precision	8	None	add
33	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  Math.abs(convergence);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	add	    this.pendingEventTime  =  Math.abs(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	8	1
34	[BUG]  [BUGGY]    this.pendingEventTime  =  Math.abs(convergence);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  Math.abs(convergence);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.pendingEventTime  =  Math.abs(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	8	1	add
34	[BUG]  [BUGGY]    this.previousEventTime  =  Math.max(previousEventTime);  [CE]  no  suitable  method  found  for  max(double)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.previousEventTime  =  Math.max(previousEventTime);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.previousEventTime  =  Math.max(previousEventTime);		non-compiled	[CE]  no  suitable  method  found  for  max(double)	8	None	add
35	[BUG]  [BUGGY]    this.previousEventTime  =  Math.pow(previousEventTime);  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.previousEventTime  =  Math.pow(previousEventTime);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.previousEventTime  =  Math.pow(previousEventTime);		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	8	None	add
41	[BUG]  [BUGGY]    handler.getMethod());  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getMethod());  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getMethod());		non-compiled	[CE]  <identifier>  expected	2	None	add
42	[BUG]  [BUGGY]    handler.getLineno(),  handler.getCharno());  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getLineno(),  handler.getCharno());  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getLineno(),  handler.getCharno());		non-compiled	[CE]  <identifier>  expected	2	None	add
43	[BUG]  [BUGGY]    handler.getLineno(),  handler.getCharno()));  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getLineno(),  handler.getCharno()));  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getLineno(),  handler.getCharno()));		non-compiled	[CE]  <identifier>  expected	2	None	add
44	[BUG]  [BUGGY]    handler.getLineno(),  handler.getValue());  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getLineno(),  handler.getValue());  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getLineno(),  handler.getValue());		non-compiled	[CE]  <identifier>  expected	2	None	add
45	[BUG]  [BUGGY]    handler.getLineno(),  handler.getOffset()));  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getLineno(),  handler.getOffset()));  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getLineno(),  handler.getOffset()));		non-compiled	[CE]  <identifier>  expected	2	None	add
51	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  Math.abs(convergence);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	    this.pendingEventTime  =  Math.abs(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1
52	[BUG]  [BUGGY]    this.pendingEventTime  =  Math.abs(convergence);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  Math.abs(convergence);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEventTime  =  Math.abs(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1	add
52	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  Math.abs(previousEventTime);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	    this.pendingEventTime  =  Math.abs(previousEventTime);		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1
53	[BUG]  [BUGGY]    this.pendingEventTime  =  Math.abs(previousEventTime);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  Math.abs(previousEventTime);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEventTime  =  Math.abs(previousEventTime);		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1	add
53	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  Math.sin(previousEventTime);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	    this.pendingEventTime  =  Math.sin(previousEventTime);		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1
54	[BUG]  [BUGGY]    this.pendingEventTime  =  Math.sin(previousEventTime);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  Math.sin(previousEventTime);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEventTime  =  Math.sin(previousEventTime);		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1	add
54	[BUG]  [BUGGY]    this.pendingEvent  =  handler.getPreviousEvent();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEvent  =  handler.getPreviousEvent();  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEvent  =  handler.getPreviousEvent();		non-compiled	[CE]  cannot  find  symbol	6	None	add
55	[BUG]  [BUGGY]    this.pendingEvent  =  Math.abs(convergence);  [CE]  incompatible  types  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEvent  =  Math.abs(convergence);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEvent  =  Math.abs(convergence);		non-compiled	[CE]  incompatible  types	6	None	add
62	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount  -  1;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	add	this.maxIterationCount  =  maxIterationCount  -  1;	this.maxIterationCount  =  maxIterationCount;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	9	1
63	[BUG]  [BUGGY]  this.maxIterationCount  =  maxIterationCount  -  1;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount  -  1;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	this.maxIterationCount  =  maxIterationCount  -  1;	this.maxIterationCount  =  maxIterationCount;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	9	1	replace
63	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount  +  1;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	add	this.maxIterationCount  =  maxIterationCount  +  1;	this.maxIterationCount  =  maxIterationCount;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	9	1
64	[BUG]  [BUGGY]  this.maxIterationCount  =  maxIterationCount  +  1;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount  +  1;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	this.maxIterationCount  =  maxIterationCount  +  1;	this.maxIterationCount  =  maxIterationCount;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	9	1	replace
64	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount  *  2;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	add	this.maxIterationCount  =  maxIterationCount  *  2;	this.maxIterationCount  =  maxIterationCount;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	9	1
65	[BUG]  [BUGGY]  this.maxIterationCount  =  maxIterationCount  *  2;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount  *  2;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	this.maxIterationCount  =  maxIterationCount  *  2;	this.maxIterationCount  =  maxIterationCount;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	9	1	replace
65	[BUG]  [BUGGY]    [CE]  variable  maxIterationCount  might  not  have  been  initialized  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	  	this.maxIterationCount  =  maxIterationCount;  	non-compiled	[CE]  variable  maxIterationCount  might  not  have  been  initialized	9	None	replace
71	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    if(t0  >  maxIterationCount)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  nextAction  =  EventHandler.CONTINUE;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	    if(t0  >  maxIterationCount)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  nextAction  =  EventHandler.CONTINUE;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1
72	[BUG]  [BUGGY]    if(t0  >  maxIterationCount)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  nextAction  =  EventHandler.CONTINUE;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    if(t0  >  maxIterationCount)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  nextAction  =  EventHandler.CONTINUE;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    if(t0  >  maxIterationCount)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  nextAction  =  EventHandler.CONTINUE;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1	add
72	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    if(t0  >  maxCheckInterval)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	    if(t0  >  maxCheckInterval)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1
73	[BUG]  [BUGGY]    if(t0  >  maxCheckInterval)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    if(t0  >  maxCheckInterval)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    if(t0  >  maxCheckInterval)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1	add
73	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    if(t0  >  maxIterationCount)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	    if(t0  >  maxIterationCount)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1
74	[BUG]  [BUGGY]    if(t0  >  maxIterationCount)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    if(t0  >  maxIterationCount)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    if(t0  >  maxIterationCount)  {  g0Positive  =  false;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1	add
74	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    if(t0  >  maxCheckInterval)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	    if(t0  >  maxCheckInterval)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1
75	[BUG]  [BUGGY]    if(t0  >  maxCheckInterval)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    if(t0  >  maxCheckInterval)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    if(t0  >  maxCheckInterval)  {  g0Positive  =  true;  previousEventTime  =  Double.NaN;  pendingEventTime  =  EventHandler.CONTINUE;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1	add
75	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    g0  =  Math.sin(convergence);  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	    g0  =  Math.sin(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1
76	[BUG]  [BUGGY]    g0  =  Math.sin(convergence);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    g0  =  Math.sin(convergence);  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    g0  =  Math.sin(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1	add
82	[BUG]  [BUGGY]  if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  EventHandler  handler  =  handler.getEventHandler();  g0Positive=  true;  previousEventTime  =  Double.NaN;  priorEventTime  =  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  EventHandler  handler  =  handler.getEventHandler();  g0Positive=  true;  previousEventTime  =  Double.NaN;  priorEventTime  =  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  EventHandler  handler  =  handler.getEventHandler();  g0Positive=  true;  previousEventTime  =  Double.NaN;  priorEventTime  =	g0=  Double.NaN;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
83	[BUG]  [BUGGY]  if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  EventHandler  handler  =  handler.getEventHandler();  g0Positive=  true;  previousEventTime  =  Double.NaN;  nextAction  =  EventHandler.  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  EventHandler  handler  =  handler.getEventHandler();  g0Positive=  true;  previousEventTime  =  Double.NaN;  nextAction  =  EventHandler.  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  EventHandler  handler  =  handler.getEventHandler();  g0Positive=  true;  previousEventTime  =  Double.NaN;  nextAction  =  EventHandler.	g0=  Double.NaN;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
84	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0  =  Double.NaN;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0  =  Double.NaN;  }	g0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	13	1
85	[BUG]  [BUGGY]  if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0  =  Double.NaN;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0  =  Double.NaN;  }  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	if(t0  >  maxIterationCount)  {  g0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0  =  Double.NaN;  }	g0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	13	1	replace
85	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	  	g0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	13	1
86	[BUG]  [BUGGY]    [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	  	g0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	13	1	replace
91	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    pendingEvent=  false;  previousEventTime  =  Double.NaN;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	add	    pendingEvent=  false;  previousEventTime  =  Double.NaN;		compilable	  [FE]  MathRuntimeException$4  closeEvents	18	1
92	[BUG]  [BUGGY]    pendingEvent=  false;  previousEventTime  =  Double.NaN;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    pendingEvent=  false;  previousEventTime  =  Double.NaN;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    pendingEvent=  false;  previousEventTime  =  Double.NaN;		compilable	  [FE]  MathRuntimeException$4  closeEvents	18	1	add
92	[BUG]  [BUGGY]    while(t0  >  maxIterationCount)  {  pendingEvent  =  false;  previousEventTime  =  Double.NaN;  [CE]  illegal  start  of  expression  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    while(t0  >  maxIterationCount)  {  pendingEvent  =  false;  previousEventTime  =  Double.NaN;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    while(t0  >  maxIterationCount)  {  pendingEvent  =  false;  previousEventTime  =  Double.NaN;		non-compiled	[CE]  illegal  start  of  expression	18	None	add
93	[BUG]  [BUGGY]    while(t0  >  maxIterationCount)  {  pendingEvent  =  false;  [CE]  illegal  start  of  expression  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    while(t0  >  maxIterationCount)  {  pendingEvent  =  false;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    while(t0  >  maxIterationCount)  {  pendingEvent  =  false;		non-compiled	[CE]  illegal  start  of  expression	18	None	add
94	[BUG]  [BUGGY]    while(t0  >  maxIterationCount)  {  t0  =  handler.next;  [CE]  illegal  start  of  expression  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    while(t0  >  maxIterationCount)  {  t0  =  handler.next;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    while(t0  >  maxIterationCount)  {  t0  =  handler.next;		non-compiled	[CE]  illegal  start  of  expression	18	None	add
95	[BUG]  [BUGGY]    while(t0  >  maxIterationCount)  {  pendingEvent  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    while(t0  >  maxIterationCount)  {  pendingEvent  =  true;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    while(t0  >  maxIterationCount)  {  pendingEvent  =  true;		non-compiled	[CE]  illegal  start  of  expression	18	None	add
103	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  +  1;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	this.maxCheckInterval  =  maxCheckInterval  +  1;	this.maxCheckInterval=  maxCheckInterval;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	5	1
104	[BUG]  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  +  1;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  +  1;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	this.maxCheckInterval  =  maxCheckInterval  +  1;	this.maxCheckInterval=  maxCheckInterval;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	5	1	replace
104	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  -  convergence;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	this.maxCheckInterval  =  maxCheckInterval  -  convergence;	this.maxCheckInterval=  maxCheckInterval;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	5	1
105	[BUG]  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  -  convergence;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  -  convergence;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	this.maxCheckInterval  =  maxCheckInterval  -  convergence;	this.maxCheckInterval=  maxCheckInterval;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	5	1	replace
111	[BUG]  [BUGGY]    super(handler,  maxCheckInterval,  convergence,  maxIterationCount);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super(handler,  maxCheckInterval,  convergence,  maxIterationCount);  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super(handler,  maxCheckInterval,  convergence,  maxIterationCount);		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	4	None	add
112	[BUG]  [BUGGY]    handler  =  EventHandler.create(handler,  maxCheckInterval,  convergence,  maxIterationCount);  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    handler  =  EventHandler.create(handler,  maxCheckInterval,  convergence,  maxIterationCount);  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    handler  =  EventHandler.create(handler,  maxCheckInterval,  convergence,  maxIterationCount);		non-compiled	[CE]  cannot  find  symbol	4	None	add
113	[BUG]  [BUGGY]    handler  =  EventHandler.create(handler,  maxCheckInterval,  convergence,  maxIterationCount));  [CE]  ';'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    handler  =  EventHandler.create(handler,  maxCheckInterval,  convergence,  maxIterationCount));  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    handler  =  EventHandler.create(handler,  maxCheckInterval,  convergence,  maxIterationCount));		non-compiled	[CE]  ';'  expected	4	None	add
114	[BUG]  [BUGGY]    super(handler,  maxCheckInterval,  convergence,  maxIterationCount);  this.nextAction  =  nextAction;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super(handler,  maxCheckInterval,  convergence,  maxIterationCount);  this.nextAction  =  nextAction;  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super(handler,  maxCheckInterval,  convergence,  maxIterationCount);  this.nextAction  =  nextAction;		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	4	None	add
115	[BUG]  [BUGGY]    EventState  1  >>  EventState>  nextAction  =  handler.get();  [CE]  not  a  statement  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    EventState  1  >>  EventState>  nextAction  =  handler.get();  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    EventState  1  >>  EventState>  nextAction  =  handler.get();		non-compiled	[CE]  not  a  statement	4	None	add
123	[BUG]  [BUGGY]  if(t0  ==  0.0)  {  t0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0Positive=  false;  pendingEventTime  =  t0;  previousEventTime  =  t0;  }  [CE]  cannot  find  symbol  t0Positive  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]  if(t0  ==  0.0)  {  t0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0Positive=  false;  pendingEventTime  =  t0;  previousEventTime  =  t0;  }  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	if(t0  ==  0.0)  {  t0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0Positive=  false;  pendingEventTime  =  t0;  previousEventTime  =  t0;  }	t0=  Double.NaN;  	non-compiled	[CE]  cannot  find  symbol  t0Positive	11	None	replace
124	[BUG]  [BUGGY]  if(t0  ==  0.0)  {  t0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0Positive=  true;  pendingEventTime  =  t0;  previousEventTime  =  t0;  }  [CE]  cannot  find  symbol  t0Positive  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]  if(t0  ==  0.0)  {  t0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0Positive=  true;  pendingEventTime  =  t0;  previousEventTime  =  t0;  }  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	if(t0  ==  0.0)  {  t0=  Double.NaN;  }  else  {  t0  =  Double.NaN;  t0Positive=  true;  pendingEventTime  =  t0;  previousEventTime  =  t0;  }	t0=  Double.NaN;  	non-compiled	[CE]  cannot  find  symbol  t0Positive	11	None	replace
125	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	add	  	t0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	11	1
126	[BUG]  [BUGGY]    [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	  	t0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	11	1	replace
131	[BUG]  [BUGGY]    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  0)  {  nextAction  =  EventHandler.CONTINUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  0)  {  nextAction  =  EventHandler.CONTINUE;  }  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  0)  {  nextAction  =  EventHandler.CONTINUE;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
133	[BUG]  [BUGGY]    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  null)  {  nextAction  =  EventHandler.CONTINUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  null)  {  nextAction  =  EventHandler.CONTINUE;  }  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  null)  {  nextAction  =  EventHandler.CONTINUE;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
134	[BUG]  [BUGGY]    if(convergence  >  maxCheckInterval)  {  if(previousEventTime  ==  0)  {  nextAction  =  EventHandler.CONTINUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    if(convergence  >  maxCheckInterval)  {  if(previousEventTime  ==  0)  {  nextAction  =  EventHandler.CONTINUE;  }  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    if(convergence  >  maxCheckInterval)  {  if(previousEventTime  ==  0)  {  nextAction  =  EventHandler.CONTINUE;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
135	[BUG]  [BUGGY]    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  0)  {  nextAction  =  EventHandler.END;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  0)  {  nextAction  =  EventHandler.END;  }  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    if(convergence  >  maxCheckInterval)  {  if(previousEventTime!=  0)  {  nextAction  =  EventHandler.END;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
142	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  g0Positive=  false;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	g0Positive=  false;	g0Positive=  true;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	15	1
143	[BUG]  [BUGGY]  g0Positive=  false;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  g0Positive=  false;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	g0Positive=  false;	g0Positive=  true;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	15	1	replace
143	[BUG]  [BUGGY]  if(g0Positive=  true;  [CE]  ')'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(g0Positive=  true;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	if(g0Positive=  true;	g0Positive=  true;  	non-compiled	[CE]  ')'  expected	15	None	replace
144	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(g0Positive=  true);  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	if(g0Positive=  true);	g0Positive=  true;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	15	1
145	[BUG]  [BUGGY]  if(g0Positive=  true);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(g0Positive=  true);  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	if(g0Positive=  true);	g0Positive=  true;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	15	1	replace
153	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]  pendingEvent=  true;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	add	pendingEvent=  true;	pendingEvent=  false;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	17	1
154	[BUG]  [BUGGY]  pendingEvent=  true;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]  pendingEvent=  true;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	pendingEvent=  true;	pendingEvent=  false;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	17	1	replace
154	[BUG]  [BUGGY]  pendingEvent=  failed;  [CE]  cannot  find  symbol  failed  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]  pendingEvent=  failed;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	pendingEvent=  failed;	pendingEvent=  false;  	non-compiled	[CE]  cannot  find  symbol  failed	17	None	replace
162	[BUG]  [BUGGY]  this.handler  =  handler,  maxCheckInterval;  [CE]  ';'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler,  maxCheckInterval;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	this.handler  =  handler,  maxCheckInterval;	this.handler  =  handler;  	non-compiled	[CE]  ';'  expected	3	None	replace
163	[BUG]  [BUGGY]  this.handler  =  handler  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler  +  1;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	this.handler  =  handler  +  1;	this.handler  =  handler;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
173	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]  previousEventTime  =  Double.NaN;  [BUGGY]  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	add	previousEventTime  =  Double.NaN;	pendingEventTime=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	19	1
174	[BUG]  [BUGGY]  previousEventTime  =  Double.NaN;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]  previousEventTime  =  Double.NaN;  [BUGGY]  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	previousEventTime  =  Double.NaN;	pendingEventTime=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	19	1	replace
181	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  true;  previousEventTime  =  Double.NaN;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	    g0Positive=  true;  previousEventTime  =  Double.NaN;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1
182	[BUG]  [BUGGY]    g0Positive=  true;  previousEventTime  =  Double.NaN;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  true;  previousEventTime  =  Double.NaN;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    g0Positive=  true;  previousEventTime  =  Double.NaN;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1	add
182	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    t0  =  Math.abs(convergence);  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	    t0  =  Math.abs(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1
183	[BUG]  [BUGGY]    t0  =  Math.abs(convergence);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    t0  =  Math.abs(convergence);  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    t0  =  Math.abs(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1	add
183	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    t0  =  Math.sin(convergence);  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	    t0  =  Math.sin(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1
184	[BUG]  [BUGGY]    t0  =  Math.sin(convergence);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    t0  =  Math.sin(convergence);  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    t0  =  Math.sin(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1	add
184	[BUG]  [BUGGY]    t0  =  Math.pow(Math.exp(convergence));  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    t0  =  Math.pow(Math.exp(convergence));  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    t0  =  Math.pow(Math.exp(convergence));		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	14	None	add
185	[BUG]  [BUGGY]    t0  =  Math.pow(Math.abs(convergence));  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    t0  =  Math.pow(Math.abs(convergence));  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    t0  =  Math.pow(Math.abs(convergence));		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	14	None	add
191	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    this.pendingEventTime  =  EventHandler.CONTINUE;  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	add	    this.pendingEventTime  =  EventHandler.CONTINUE;		compilable	  [FE]  MathRuntimeException$4  closeEvents	10	1
192	[BUG]  [BUGGY]    this.pendingEventTime  =  EventHandler.CONTINUE;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    this.pendingEventTime  =  EventHandler.CONTINUE;  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    this.pendingEventTime  =  EventHandler.CONTINUE;		compilable	  [FE]  MathRuntimeException$4  closeEvents	10	1	add
192	[BUG]  [BUGGY]    handler  =  handler.getNext();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    handler  =  handler.getNext();  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    handler  =  handler.getNext();		non-compiled	[CE]  cannot  find  symbol	10	None	add
193	[BUG]  [BUGGY]    if(convergence  >  maxCheckInterval)  {  this.pendingEvent  =  handler.contains(convergence);  if(previousEventTime  ==  false)  {  nextAction  =  EventHandler.CONTINUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    if(convergence  >  maxCheckInterval)  {  this.pendingEvent  =  handler.contains(convergence);  if(previousEventTime  ==  false)  {  nextAction  =  EventHandler.CONTINUE;  }  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    if(convergence  >  maxCheckInterval)  {  this.pendingEvent  =  handler.contains(convergence);  if(previousEventTime  ==  false)  {  nextAction  =  EventHandler.CONTINUE;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
194	[BUG]  [BUGGY]    if(convergence  >  maxCheckInterval)  {  this.pendingEvent  =  handler.contains(convergence);  if(previousEventTime  ==  null)  {  nextAction  =  EventHandler.CONTINUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    if(convergence  >  maxCheckInterval)  {  this.pendingEvent  =  handler.contains(convergence);  if(previousEventTime  ==  null)  {  nextAction  =  EventHandler.CONTINUE;  }  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    if(convergence  >  maxCheckInterval)  {  this.pendingEvent  =  handler.contains(convergence);  if(previousEventTime  ==  null)  {  nextAction  =  EventHandler.CONTINUE;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
195	[BUG]  [BUGGY]    if(convergence  >  0)  {  handler  =  handler.next;  }  else  {  handler  =  handler.next;  }  [CE]  cannot  find  symbol  next  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    if(convergence  >  0)  {  handler  =  handler.next;  }  else  {  handler  =  handler.next;  }  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    if(convergence  >  0)  {  handler  =  handler.next;  }  else  {  handler  =  handler.next;  }		non-compiled	[CE]  cannot  find  symbol  next	10	None	add
4	[BUG]  [BUGGY]  pendingEvent=  real;  [CE]  cannot  find  symbol  real  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]  pendingEvent=  real;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	pendingEvent=  real;	pendingEvent=  false;  	non-compiled	[CE]  cannot  find  symbol  real	17	None	replace
21	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	add	    this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	8	1
22	[BUG]  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	8	1	add
22	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.getFirstEvent();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  handler.getFirstEvent();  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.pendingEventTime  =  handler.getFirstEvent();		non-compiled	[CE]  cannot  find  symbol	8	None	add
23	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  Math.pow(10,  maxCheckInterval);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	add	    this.pendingEventTime  =  Math.pow(10,  maxCheckInterval);		compilable	  [FE]  MathRuntimeException$4  closeEvents	8	1
24	[BUG]  [BUGGY]    this.pendingEventTime  =  Math.pow(10,  maxCheckInterval);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  Math.pow(10,  maxCheckInterval);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.pendingEventTime  =  Math.pow(10,  maxCheckInterval);		compilable	  [FE]  MathRuntimeException$4  closeEvents	8	1	add
24	[BUG]  [BUGGY]    this.pendingEventTime  =  Math.peek();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  Math.peek();  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.pendingEventTime  =  Math.peek();		non-compiled	[CE]  cannot  find  symbol	8	None	add
25	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  Math.pow(10,  0);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	add	    this.pendingEventTime  =  Math.pow(10,  0);		compilable	  [FE]  MathRuntimeException$4  closeEvents	8	1
26	[BUG]  [BUGGY]    this.pendingEventTime  =  Math.pow(10,  0);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  Math.pow(10,  0);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.pendingEventTime  =  Math.pow(10,  0);		compilable	  [FE]  MathRuntimeException$4  closeEvents	8	1	add
41	[BUG]  [BUGGY]  this.maxIterationCount  =  maxCheckInterval;  [CE]  possible  loss  of  precision  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxCheckInterval;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	this.maxIterationCount  =  maxCheckInterval;	this.maxIterationCount  =  maxIterationCount;  	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
43	[BUG]  [BUGGY]  this.maxIterationCount  =  maxCheckInterval  -  1;  [CE]  possible  loss  of  precision  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxCheckInterval  -  1;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	this.maxIterationCount  =  maxCheckInterval  -  1;	this.maxIterationCount  =  maxIterationCount;  	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
44	[BUG]  [BUGGY]  this.maxIterationCount  =  maxCheckInterval  +  1;  [CE]  possible  loss  of  precision  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxCheckInterval  +  1;  [BUGGY]    t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	this.maxIterationCount  =  maxCheckInterval  +  1;	this.maxIterationCount  =  maxIterationCount;  	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
63	[BUG]  [BUGGY]  this.handler  =  handler,  this.maxCheckInterval  =  maxCheckInterval;  [CE]  ';'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler,  this.maxCheckInterval  =  maxCheckInterval;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	this.handler  =  handler,  this.maxCheckInterval  =  maxCheckInterval;	this.handler  =  handler;  	non-compiled	[CE]  ';'  expected	3	None	replace
64	[BUG]  [BUGGY]  this.handler  =  handler,  this.nextAction  =  pendingEventTime;  [CE]  ';'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler,  this.nextAction  =  pendingEventTime;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	this.handler  =  handler,  this.nextAction  =  pendingEventTime;	this.handler  =  handler;  	non-compiled	[CE]  ';'  expected	3	None	replace
81	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	    this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1
82	[BUG]  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1	add
82	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEvent  =  pendingEvent;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	    this.pendingEvent  =  pendingEvent;		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1
83	[BUG]  [BUGGY]    this.pendingEvent  =  pendingEvent;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEvent  =  pendingEvent;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEvent  =  pendingEvent;		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1	add
83	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.getPreviousEventTime();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  handler.getPreviousEventTime();  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEventTime  =  handler.getPreviousEventTime();		non-compiled	[CE]  cannot  find  symbol	6	None	add
84	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.getLastActual();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  handler.getLastActual();  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEventTime  =  handler.getLastActual();		non-compiled	[CE]  cannot  find  symbol	6	None	add
85	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.getLastChild();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  handler.getLastChild();  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEventTime  =  handler.getLastChild();		non-compiled	[CE]  cannot  find  symbol	6	None	add
101	[BUG]  [BUGGY]    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  Math.pow(10,  0.0));  [CE]  ')'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  Math.pow(10,  0.0));  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  Math.pow(10,  0.0));		non-compiled	[CE]  ')'  expected	2	None	add
102	[BUG]  [BUGGY]    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  Math.sqrt(convergence));  [CE]  ')'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  Math.sqrt(convergence));  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  Math.sqrt(convergence));		non-compiled	[CE]  ')'  expected	2	None	add
103	[BUG]  [BUGGY]    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  this.maxCheckInterval);  [CE]  ')'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  this.maxCheckInterval);  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    final  EventHandler  handler  =  new  EventHandler(this.pendingEventTime,  this.maxCheckInterval);		non-compiled	[CE]  ')'  expected	2	None	add
104	[BUG]  [BUGGY]    final  EventHandler  handler  =  new  EventHandler(this.handler,  maxCheckInterval,  this.pendingEventTime);  [CE]  ')'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    final  EventHandler  handler  =  new  EventHandler(this.handler,  maxCheckInterval,  this.pendingEventTime);  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    final  EventHandler  handler  =  new  EventHandler(this.handler,  maxCheckInterval,  this.pendingEventTime);		non-compiled	[CE]  ')'  expected	2	None	add
105	[BUG]  [BUGGY]    handler.getParent(),  pendingEventTime);  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getParent(),  pendingEventTime);  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getParent(),  pendingEventTime);		non-compiled	[CE]  <identifier>  expected	2	None	add
121	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  true;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	    g0Positive=  true;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1
122	[BUG]  [BUGGY]    g0Positive=  true;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  true;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    g0Positive=  true;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1	add
122	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  false;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	    g0Positive=  false;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1
123	[BUG]  [BUGGY]    g0Positive=  false;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  false;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    g0Positive=  false;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1	add
124	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  false;  pendingEventTime  =  t0;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	    g0Positive=  false;  pendingEventTime  =  t0;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1
125	[BUG]  [BUGGY]    g0Positive=  false;  pendingEventTime  =  t0;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  false;  pendingEventTime  =  t0;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    g0Positive=  false;  pendingEventTime  =  t0;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1	add
125	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  false;  previousEventTime  =  Double.NaN;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	    g0Positive=  false;  previousEventTime  =  Double.NaN;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1
126	[BUG]  [BUGGY]    g0Positive=  false;  previousEventTime  =  Double.NaN;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive=  false;  previousEventTime  =  Double.NaN;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    g0Positive=  false;  previousEventTime  =  Double.NaN;		compilable	  [FE]  MathRuntimeException$4  closeEvents	14	1	add
141	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]  t0=  0;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	add	t0=  0;	t0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	11	1
142	[BUG]  [BUGGY]  t0=  0;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]  t0=  0;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	t0=  0;	t0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	11	1	replace
143	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]  t0=  0.0;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	add	t0=  0.0;	t0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	11	1
144	[BUG]  [BUGGY]  t0=  0.0;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]  t0=  0.0;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	t0=  0.0;	t0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	11	1	replace
162	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  -  1;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	this.maxCheckInterval  =  maxCheckInterval  -  1;	this.maxCheckInterval=  maxCheckInterval;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	5	1
163	[BUG]  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  -  1;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  -  1;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	this.maxCheckInterval  =  maxCheckInterval  -  1;	this.maxCheckInterval=  maxCheckInterval;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	5	1	replace
164	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  /  0;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	this.maxCheckInterval  =  maxCheckInterval  /  0;	this.maxCheckInterval=  maxCheckInterval;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	5	1
165	[BUG]  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  /  0;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]  this.maxCheckInterval  =  maxCheckInterval  /  0;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	this.maxCheckInterval  =  maxCheckInterval  /  0;	this.maxCheckInterval=  maxCheckInterval;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	5	1	replace
181	[BUG]  [BUGGY]  g0Positive=  Double.NaN;  [CE]  incompatible  types  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  g0Positive=  Double.NaN;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	g0Positive=  Double.NaN;	g0=  Double.NaN;  	non-compiled	[CE]  incompatible  types	13	None	replace
182	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  g0  =  0.0;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	g0  =  0.0;	g0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	13	1
183	[BUG]  [BUGGY]  g0  =  0.0;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  g0  =  0.0;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	g0  =  0.0;	g0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	13	1	replace
183	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  g0=  Double.NaN  +  1;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	add	g0=  Double.NaN  +  1;	g0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	13	1
184	[BUG]  [BUGGY]  g0=  Double.NaN  +  1;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  g0=  Double.NaN  +  1;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	g0=  Double.NaN  +  1;	g0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	13	1	replace
201	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.getPreviousEventTime();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    this.pendingEventTime  =  handler.getPreviousEventTime();  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    this.pendingEventTime  =  handler.getPreviousEventTime();		non-compiled	[CE]  cannot  find  symbol	10	None	add
202	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	add	    this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	10	1
203	[BUG]  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	10	1	add
203	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.getPosition();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    this.pendingEventTime  =  handler.getPosition();  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    this.pendingEventTime  =  handler.getPosition();		non-compiled	[CE]  cannot  find  symbol	10	None	add
204	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.getPositive();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    this.pendingEventTime  =  handler.getPositive();  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    this.pendingEventTime  =  handler.getPositive();		non-compiled	[CE]  cannot  find  symbol	10	None	add
205	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.next();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    this.pendingEventTime  =  handler.next();  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    this.pendingEventTime  =  handler.next();		non-compiled	[CE]  cannot  find  symbol	10	None	add
222	[BUG]  [BUGGY]  final  double  convergence,  final  int  maxCheckInterval)  {  [CE]  variable  maxCheckInterval  is  already  defined  in  constructor  EventState  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  double  convergence,  final  int  maxCheckInterval)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	final  double  convergence,  final  int  maxCheckInterval)  {	final  double  convergence,  final  int  maxIterationCount)  {  	non-compiled	[CE]  variable  maxCheckInterval  is  already  defined  in  constructor  EventState	1	None	replace
223	[BUG]  [BUGGY]  final  int  convergence,  maxCheckInterval)  {  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  int  convergence,  maxCheckInterval)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	final  int  convergence,  maxCheckInterval)  {	final  double  convergence,  final  int  maxIterationCount)  {  	non-compiled	[CE]  <identifier>  expected	1	None	replace
224	[BUG]  [BUGGY]  final  int  maxCheckInterval,  final  int  pendingEventTime)  {  [CE]  variable  maxCheckInterval  is  already  defined  in  constructor  EventState  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  int  maxCheckInterval,  final  int  pendingEventTime)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	final  int  maxCheckInterval,  final  int  pendingEventTime)  {	final  double  convergence,  final  int  maxIterationCount)  {  	non-compiled	[CE]  variable  maxCheckInterval  is  already  defined  in  constructor  EventState	1	None	replace
243	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence)>  0?  Math.abs(convergence):  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	add	this.convergence  =  Math.abs(convergence)>  0?  Math.abs(convergence):  Math.abs(convergence);	this.convergence  =  Math.abs(convergence);  	compilable	  [FE]  MathRuntimeException$4  closeEvents	7	1
244	[BUG]  [BUGGY]  this.convergence  =  Math.abs(convergence)>  0?  Math.abs(convergence):  Math.abs(convergence);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence)>  0?  Math.abs(convergence):  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	this.convergence  =  Math.abs(convergence)>  0?  Math.abs(convergence):  Math.abs(convergence);	this.convergence  =  Math.abs(convergence);  	compilable	  [FE]  MathRuntimeException$4  closeEvents	7	1	replace
244	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence)>  0.0?  convergence  :  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	add	this.convergence  =  Math.abs(convergence)>  0.0?  convergence  :  Math.abs(convergence);	this.convergence  =  Math.abs(convergence);  	compilable	  [FE]  MathRuntimeException$4  closeEvents	7	1
245	[BUG]  [BUGGY]  this.convergence  =  Math.abs(convergence)>  0.0?  convergence  :  Math.abs(convergence);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence)>  0.0?  convergence  :  Math.abs(convergence);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	this.convergence  =  Math.abs(convergence)>  0.0?  convergence  :  Math.abs(convergence);	this.convergence  =  Math.abs(convergence);  	compilable	  [FE]  MathRuntimeException$4  closeEvents	7	1	replace
261	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super();  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	add	    super();		compilable	  [FE]  MathRuntimeException$4  closeEvents	4	1
262	[BUG]  [BUGGY]    super();  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super();  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super();		compilable	  [FE]  MathRuntimeException$4  closeEvents	4	1	add
262	[BUG]  [BUGGY]    super(handler);  this.pendingEventTime  =  pendingEventTime;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super(handler);  this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super(handler);  this.pendingEventTime  =  pendingEventTime;		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	4	None	add
263	[BUG]  [BUGGY]    super(handler);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super(handler);  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super(handler);		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	4	None	add
264	[BUG]  [BUGGY]    super(handler);  this.pendingEventTime  =  nextAction;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super(handler);  this.pendingEventTime  =  nextAction;  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super(handler);  this.pendingEventTime  =  nextAction;		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	4	None	add
265	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super();  this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	add	    super();  this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	4	1
266	[BUG]  [BUGGY]    super();  this.pendingEventTime  =  pendingEventTime;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super();  this.pendingEventTime  =  pendingEventTime;  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super();  this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	4	1	add
281	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]  pendingEventTime  =  Double.NaN  +  1;  [BUGGY]  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	add	pendingEventTime  =  Double.NaN  +  1;	pendingEventTime=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	19	1
282	[BUG]  [BUGGY]  pendingEventTime  =  Double.NaN  +  1;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]  pendingEventTime  =  Double.NaN  +  1;  [BUGGY]  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	pendingEventTime  =  Double.NaN  +  1;	pendingEventTime=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	19	1	replace
283	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]  pendingEventTime  =  Double.NaN  +  2;  [BUGGY]  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	add	pendingEventTime  =  Double.NaN  +  2;	pendingEventTime=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	19	1
284	[BUG]  [BUGGY]  pendingEventTime  =  Double.NaN  +  2;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]  pendingEventTime  =  Double.NaN  +  2;  [BUGGY]  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	pendingEventTime  =  Double.NaN  +  2;	pendingEventTime=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	19	1	replace
301	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  Double.NaN;  g0Positive=  true;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	add	    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  Double.NaN;  g0Positive=  true;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	18	1
302	[BUG]  [BUGGY]    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  Double.NaN;  g0Positive=  true;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  Double.NaN;  g0Positive=  true;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  Double.NaN;  g0Positive=  true;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	18	1	add
302	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  t0;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	add	    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  t0;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	18	1
303	[BUG]  [BUGGY]    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  t0;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  t0;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  t0;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	18	1	add
304	[BUG]  [BUGGY]    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  Double.NaN;  nextAction=  EventHandler.END;  }  [CE]  cannot  find  symbol  END  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  Double.NaN;  nextAction=  EventHandler.END;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    if(t0  ==  0.0)  {  pendingEvent  =  false;  pendingEventTime  =  Double.NaN;  nextAction=  EventHandler.END;  }		non-compiled	[CE]  cannot  find  symbol  END	18	None	add
323	[BUG]  [BUGGY]    t0Positive=  true;  [CE]  cannot  find  symbol  t0Positive  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    t0Positive=  true;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    t0Positive=  true;		non-compiled	[CE]  cannot  find  symbol  t0Positive	16	None	add
324	[BUG]  [BUGGY]    t0Positive=  false;  [CE]  cannot  find  symbol  t0Positive  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    t0Positive=  false;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    t0Positive=  false;		non-compiled	[CE]  cannot  find  symbol  t0Positive	16	None	add
325	[BUG]  [BUGGY]    pendingEventTime  =  handler.getPreviousEventTime();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    pendingEventTime  =  handler.getPreviousEventTime();  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    pendingEventTime  =  handler.getPreviousEventTime();		non-compiled	[CE]  cannot  find  symbol	16	None	add
341	[BUG]  [BUGGY]    this.nextAction  =  handler.getAction();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    this.nextAction  =  handler.getAction();  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    this.nextAction  =  handler.getAction();		non-compiled	[CE]  cannot  find  symbol	12	None	add
342	[BUG]  [BUGGY]    pendingEventTime  =  handler.getPositive();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    pendingEventTime  =  handler.getPositive();  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    pendingEventTime  =  handler.getPositive();		non-compiled	[CE]  cannot  find  symbol	12	None	add
343	[BUG]  [BUGGY]    pendingEventTime  =  handler.getPreviousEventTime();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    pendingEventTime  =  handler.getPreviousEventTime();  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    pendingEventTime  =  handler.getPreviousEventTime();		non-compiled	[CE]  cannot  find  symbol	12	None	add
344	[BUG]  [BUGGY]    g0Positive  =  Math.pow(convergence);  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    g0Positive  =  Math.pow(convergence);  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    g0Positive  =  Math.pow(convergence);		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	12	None	add
345	[BUG]  [BUGGY]    this.nextAction  =  EventHandler.END;  [CE]  cannot  find  symbol  END  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    this.nextAction  =  EventHandler.END;  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    this.nextAction  =  EventHandler.END;		non-compiled	[CE]  cannot  find  symbol  END	12	None	add
362	[BUG]  [BUGGY]  if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0,  handler.getControlStructure();  g0Positive=  false;  }  [CE]  ';'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0,  handler.getControlStructure();  g0Positive=  false;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0,  handler.getControlStructure();  g0Positive=  false;  }	g0Positive=  true;  	non-compiled	[CE]  ';'  expected	15	None	replace
363	[BUG]  [BUGGY]  if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0.clone();  pendingEventTime  =  false;  nextAction=  EventHandler.END;  }  [CE]  variable  handler  is  already  defined  in  constructor  EventState(EventHandler,double,double,int)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0.clone();  pendingEventTime  =  false;  nextAction=  EventHandler.END;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0.clone();  pendingEventTime  =  false;  nextAction=  EventHandler.END;  }	g0Positive=  true;  	non-compiled	[CE]  variable  handler  is  already  defined  in  constructor  EventState(EventHandler,double,double,int)	15	None	replace
364	[BUG]  [BUGGY]  if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0,  handler.getTarget();  pendingEventTime  =  DateTimeUtils.currentTimeMillis();  }  [CE]  ';'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0,  handler.getTarget();  pendingEventTime  =  DateTimeUtils.currentTimeMillis();  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	if(t0  ==  0.0)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  (EventHandler)t0,  handler.getTarget();  pendingEventTime  =  DateTimeUtils.currentTimeMillis();  }	g0Positive=  true;  	non-compiled	[CE]  ';'  expected	15	None	replace
381	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    if(t0  ==  0.0)  {  pendingEventTime  =  t0;  pendingEventTime  =  t0;  }  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	add	    if(t0  ==  0.0)  {  pendingEventTime  =  t0;  pendingEventTime  =  t0;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	20	1
382	[BUG]  [BUGGY]    if(t0  ==  0.0)  {  pendingEventTime  =  t0;  pendingEventTime  =  t0;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    if(t0  ==  0.0)  {  pendingEventTime  =  t0;  pendingEventTime  =  t0;  }  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    if(t0  ==  0.0)  {  pendingEventTime  =  t0;  pendingEventTime  =  t0;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	20	1	add
382	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    if(t0  ==  0.0)  {  g0Positive=  false;  pendingEventTime  =  t0;  }  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	add	    if(t0  ==  0.0)  {  g0Positive=  false;  pendingEventTime  =  t0;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	20	1
383	[BUG]  [BUGGY]    if(t0  ==  0.0)  {  g0Positive=  false;  pendingEventTime  =  t0;  }  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    if(t0  ==  0.0)  {  g0Positive=  false;  pendingEventTime  =  t0;  }  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    if(t0  ==  0.0)  {  g0Positive=  false;  pendingEventTime  =  t0;  }		compilable	  [FE]  MathRuntimeException$4  closeEvents	20	1	add
383	[BUG]  [BUGGY]    if(t0  ==  0.0)  {  pendingEventTime  =  t0;  pendingEventTime  =  t0;  }  else  {  EventHandler  handler  =  new  EventHandler(nextAction);  for(int  i  =  0;  i  <  t0;  i++)  {  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    if(t0  ==  0.0)  {  pendingEventTime  =  t0;  pendingEventTime  =  t0;  }  else  {  EventHandler  handler  =  new  EventHandler(nextAction);  for(int  i  =  0;  i  <  t0;  i++)  {  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    if(t0  ==  0.0)  {  pendingEventTime  =  t0;  pendingEventTime  =  t0;  }  else  {  EventHandler  handler  =  new  EventHandler(nextAction);  for(int  i  =  0;  i  <  t0;  i++)  {  		non-compiled	[CE]  illegal  start  of  expression	20	None	add
1	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    g0Positive=  forward;  previousEventTime  =  Double.NaN;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	    g0Positive=  forward;  previousEventTime  =  Double.NaN;		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1
2	[BUG]  [BUGGY]    g0Positive=  forward;  previousEventTime  =  Double.NaN;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    g0Positive=  forward;  previousEventTime  =  Double.NaN;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    g0Positive=  forward;  previousEventTime  =  Double.NaN;		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1	add
2	[BUG]  [BUGGY]    g0  =  Math.sqrt(Double.isNaN(handler));  [CE]  no  suitable  method  found  for  isNaN(EventHandler)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    g0  =  Math.sqrt(Double.isNaN(handler));  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    g0  =  Math.sqrt(Double.isNaN(handler));		non-compiled	[CE]  no  suitable  method  found  for  isNaN(EventHandler)	16	None	add
3	[BUG]  [BUGGY]    while(handler.isActual())  {  g0Positive  =  false;  [CE]  illegal  start  of  expression  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    while(handler.isActual())  {  g0Positive  =  false;  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    while(handler.isActual())  {  g0Positive  =  false;		non-compiled	[CE]  illegal  start  of  expression	16	None	add
4	[BUG]  [BUGGY]    g0  =  Math.sqrt(Double.toString(t0,  g0));  [CE]  no  suitable  method  found  for  toString(double,double)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    g0  =  Math.sqrt(Double.toString(t0,  g0));  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    g0  =  Math.sqrt(Double.toString(t0,  g0));		non-compiled	[CE]  no  suitable  method  found  for  toString(double,double)	16	None	add
5	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    g0  =  Math.sqrt(convergence);  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	add	    g0  =  Math.sqrt(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1
6	[BUG]  [BUGGY]    g0  =  Math.sqrt(convergence);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]    g0  =  Math.sqrt(convergence);  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	    g0  =  Math.sqrt(convergence);		compilable	  [FE]  MathRuntimeException$4  closeEvents	16	1	add
31	[BUG]  [BUGGY]    this.nextAction  =  Math.sqrt(handler);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.nextAction  =  Math.sqrt(handler);  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.nextAction  =  Math.sqrt(handler);		non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	8	None	add
32	[BUG]  [BUGGY]    this.nextAction  =  handler.next();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.nextAction  =  handler.next();  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.nextAction  =  handler.next();		non-compiled	[CE]  cannot  find  symbol	8	None	add
34	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.nextAction;  [CE]  cannot  find  symbol  nextAction  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  handler.nextAction;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.pendingEventTime  =  handler.nextAction;		non-compiled	[CE]  cannot  find  symbol  nextAction	8	None	add
35	[BUG]  [BUGGY]    this.pendingEventTime  =  previousAction;  [CE]  cannot  find  symbol  previousAction  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]    this.pendingEventTime  =  previousAction;  [BUGGY]  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	    this.pendingEventTime  =  previousAction;		non-compiled	[CE]  cannot  find  symbol  previousAction	8	None	add
64	[BUG]  [BUGGY]  this.convergence  =  Math.abs(convergence,  0.0);  [CE]  no  suitable  method  found  for  abs(double,double)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  [BUGGY]  this.convergence  =  Math.abs(convergence,  0.0);  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	98	98	1	replace	this.convergence  =  Math.abs(convergence,  0.0);	this.convergence  =  Math.abs(convergence);  	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	7	None	replace
92	[BUG]  [BUGGY]    handler  =  handler.next();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    handler  =  handler.next();  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    handler  =  handler.next();		non-compiled	[CE]  cannot  find  symbol	10	None	add
93	[BUG]  [BUGGY]    handler  =  new  EventHandler(this.handler,  handler.getNext());  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    handler  =  new  EventHandler(this.handler,  handler.getNext());  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    handler  =  new  EventHandler(this.handler,  handler.getNext());		non-compiled	[CE]  cannot  find  symbol	10	None	add
95	[BUG]  [BUGGY]    handler  =  new  EventHandler(this.handler,  handler.next());  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  [BUGGY]    handler  =  new  EventHandler(this.handler,  handler.next());  [BUGGY]  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	99	99	1	replace	    handler  =  new  EventHandler(this.handler,  handler.next());		non-compiled	[CE]  cannot  find  symbol	10	None	add
151	[BUG]  [BUGGY]    while(t0  >  maxIterationCount  &&!t0Positive)  {  pendingEvent  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    while(t0  >  maxIterationCount  &&!t0Positive)  {  pendingEvent  =  true;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    while(t0  >  maxIterationCount  &&!t0Positive)  {  pendingEvent  =  true;		non-compiled	[CE]  illegal  start  of  expression	18	None	add
152	[BUG]  [BUGGY]    while(t0  >  maxIterationCount  &&!t0Positive)  {  this.handler  =  handler.next;  [CE]  illegal  start  of  expression  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    while(t0  >  maxIterationCount  &&!t0Positive)  {  this.handler  =  handler.next;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    while(t0  >  maxIterationCount  &&!t0Positive)  {  this.handler  =  handler.next;		non-compiled	[CE]  illegal  start  of  expression	18	None	add
154	[BUG]  [BUGGY]    while(t0  >  maxIterationCount  &&!t0Positive)  {  pendingEvent  =  false;  [CE]  illegal  start  of  expression  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    while(t0  >  maxIterationCount  &&!t0Positive)  {  pendingEvent  =  false;  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    while(t0  >  maxIterationCount  &&!t0Positive)  {  pendingEvent  =  false;		non-compiled	[CE]  illegal  start  of  expression	18	None	add
155	[BUG]  [BUGGY]    while(t0  >  maxIterationCount  &&!t0Positive)  {  this.handler  =  handler.next();  [CE]  illegal  start  of  expression  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]    while(t0  >  maxIterationCount  &&!t0Positive)  {  this.handler  =  handler.next();  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	    while(t0  >  maxIterationCount  &&!t0Positive)  {  this.handler  =  handler.next();		non-compiled	[CE]  illegal  start  of  expression	18	None	add
182	[BUG]  [BUGGY]  if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  new  EventHandler(handler,  maxCheckInterval,  convergence,  maxIterationCount);  g0Positive=  false;  }  [CE]  variable  handler  is  already  defined  in  constructor  EventState(EventHandler,double,double,int)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  new  EventHandler(handler,  maxCheckInterval,  convergence,  maxIterationCount);  g0Positive=  false;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler  handler  =  new  EventHandler(handler,  maxCheckInterval,  convergence,  maxIterationCount);  g0Positive=  false;  }	g0Positive=  true;  	non-compiled	[CE]  variable  handler  is  already  defined  in  constructor  EventState(EventHandler,double,double,int)	15	None	replace
183	[BUG]  [BUGGY]  if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler.initCase(t0,  handler,  maxCheckInterval,  maxCheckInterval);  g0Positive=  false;  }  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler.initCase(t0,  handler,  maxCheckInterval,  maxCheckInterval);  g0Positive=  false;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler.initCase(t0,  handler,  maxCheckInterval,  maxCheckInterval);  g0Positive=  false;  }	g0Positive=  true;  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
184	[BUG]  [BUGGY]  if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler.init(handler,  maxCheckInterval,  convergence,  maxIterationCount);  g0Positive=  false;  }  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  [BUGGY]  if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler.init(handler,  maxCheckInterval,  convergence,  maxIterationCount);  g0Positive=  false;  }  [BUGGY]  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	104	104	1	replace	if(g0Positive)  {  g0Positive=  true;  }  else  {  EventHandler.init(handler,  maxCheckInterval,  convergence,  maxIterationCount);  g0Positive=  false;  }	g0Positive=  true;  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
211	[BUG]  [BUGGY]    g0Positive  =  Math.pow(Double.doubleToLongBits(t0)||  Double.doubleToLongBits(t0));  [CE]  bad  operand  types  for  binary  operator  '||'  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive  =  Math.pow(Double.doubleToLongBits(t0)||  Double.doubleToLongBits(t0));  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    g0Positive  =  Math.pow(Double.doubleToLongBits(t0)||  Double.doubleToLongBits(t0));		non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	14	None	add
212	[BUG]  [BUGGY]    g0Positive  =  Math.pow(Double.toString(t0,  0.0));  [CE]  no  suitable  method  found  for  toString(double,double)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive  =  Math.pow(Double.toString(t0,  0.0));  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    g0Positive  =  Math.pow(Double.toString(t0,  0.0));		non-compiled	[CE]  no  suitable  method  found  for  toString(double,double)	14	None	add
213	[BUG]  [BUGGY]    g0Positive  =  Math.pow(Double.toString(t0));  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    g0Positive  =  Math.pow(Double.toString(t0));  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    g0Positive  =  Math.pow(Double.toString(t0));		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	14	None	add
214	[BUG]  [BUGGY]    t0  =  handler.next();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]    t0  =  handler.next();  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	    t0  =  handler.next();		non-compiled	[CE]  cannot  find  symbol	14	None	add
241	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.nextAction  =  Math.abs(nextAction);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	add	    this.nextAction  =  Math.abs(nextAction);		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1
242	[BUG]  [BUGGY]    this.nextAction  =  Math.abs(nextAction);  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.nextAction  =  Math.abs(nextAction);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.nextAction  =  Math.abs(nextAction);		compilable	  [FE]  MathRuntimeException$4  closeEvents	6	1	add
243	[BUG]  [BUGGY]    this.pendingEventTime  =  previousAction;  [CE]  cannot  find  symbol  previousAction  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.pendingEventTime  =  previousAction;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.pendingEventTime  =  previousAction;		non-compiled	[CE]  cannot  find  symbol  previousAction	6	None	add
244	[BUG]  [BUGGY]    this.nextAction  =  handler.getAction();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.nextAction  =  handler.getAction();  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.nextAction  =  handler.getAction();		non-compiled	[CE]  cannot  find  symbol	6	None	add
245	[BUG]  [BUGGY]    this.nextAction  =  Math.sqrt(handler);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  [BUGGY]    this.nextAction  =  Math.sqrt(handler);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	97	97	1	replace	    this.nextAction  =  Math.sqrt(handler);		non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	6	None	add
272	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]  t0  =  Double.NaN  +  1;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	add	t0  =  Double.NaN  +  1;	t0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	11	1
273	[BUG]  [BUGGY]  t0  =  Double.NaN  +  1;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]  t0  =  Double.NaN  +  1;  [BUGGY]  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	t0  =  Double.NaN  +  1;	t0=  Double.NaN;  	compilable	  [FE]  MathRuntimeException$4  closeEvents	11	1	replace
302	[BUG]  [BUGGY]    super();  this.handler  =  handler;  [CE]  variable  handler  might  already  have  been  assigned  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super();  this.handler  =  handler;  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super();  this.handler  =  handler;		non-compiled	[CE]  variable  handler  might  already  have  been  assigned	4	None	add
303	[BUG]  [BUGGY]    super();  handler  =  handler.this;  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super();  handler  =  handler.this;  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super();  handler  =  handler.this;		non-compiled	[CE]  cannot  find  symbol	4	None	add
304	[BUG]  [BUGGY]    super();  handler  =  handler.getNext();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super();  handler  =  handler.getNext();  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super();  handler  =  handler.getNext();		non-compiled	[CE]  cannot  find  symbol	4	None	add
305	[BUG]  [BUGGY]    super();  handler  =  handler;  [CE]  final  parameter  handler  may  not  be  assigned  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]    super();  handler  =  handler;  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	    super();  handler  =  handler;		non-compiled	[CE]  final  parameter  handler  may  not  be  assigned	4	None	add
332	[BUG]  [BUGGY]  this.handler  =  handler,  this.nextAction  =  0;  [CE]  ';'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler,  this.nextAction  =  0;  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	this.handler  =  handler,  this.nextAction  =  0;	this.handler  =  handler;  	non-compiled	[CE]  ';'  expected	3	None	replace
334	[BUG]  [BUGGY]  this.handler  =  handler?  handler  :  new  EventHandler(0.0,  0.0,  0.0,  0.0);  [CE]  incompatible  types  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler?  handler  :  new  EventHandler(0.0,  0.0,  0.0,  0.0);  [BUGGY]  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	96	96	1	replace	this.handler  =  handler?  handler  :  new  EventHandler(0.0,  0.0,  0.0,  0.0);	this.handler  =  handler;  	non-compiled	[CE]  incompatible  types	3	None	replace
361	[BUG]  [BUGGY]    handler  =  handler.next();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    handler  =  handler.next();  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    handler  =  handler.next();		non-compiled	[CE]  cannot  find  symbol	12	None	add
362	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	add	    this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	12	1
363	[BUG]  [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [FE]  MathRuntimeException$4  closeEvents  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    this.pendingEventTime  =  pendingEventTime;  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    this.pendingEventTime  =  pendingEventTime;		compilable	  [FE]  MathRuntimeException$4  closeEvents	12	1	add
363	[BUG]  [BUGGY]    this.nextAction  =  Math.abs(convergence);  [CE]  possible  loss  of  precision  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    this.nextAction  =  Math.abs(convergence);  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    this.nextAction  =  Math.abs(convergence);		non-compiled	[CE]  possible  loss  of  precision	12	None	add
364	[BUG]  [BUGGY]    this.pendingEventTime  =  handler.next();  [CE]  cannot  find  symbol  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    this.pendingEventTime  =  handler.next();  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    this.pendingEventTime  =  handler.next();		non-compiled	[CE]  cannot  find  symbol	12	None	add
365	[BUG]  [BUGGY]    this.forward  =  0;  [CE]  incompatible  types  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;    [BUGGY]    this.forward  =  0;  [BUGGY]  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	102	102	1	replace	    this.forward  =  0;		non-compiled	[CE]  incompatible  types	12	None	add
424	[BUG]  [BUGGY]  g0  =  Double.NaN  *  Math.pow(Double.toString(t0,  0.0));  [CE]  no  suitable  method  found  for  toString(double,double)  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  [BUGGY]  g0  =  Double.NaN  *  Math.pow(Double.toString(t0,  0.0));  [BUGGY]  g0Positive=  true;  pendingEvent=  false;  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	103	103	1	replace	g0  =  Double.NaN  *  Math.pow(Double.toString(t0,  0.0));	g0=  Double.NaN;  	non-compiled	[CE]  no  suitable  method  found  for  toString(double,double)	13	None	replace
452	[BUG]  [BUGGY]  final  int  maxIterationCount)  {  [CE]  variable  convergence  might  not  have  been  initialized  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  int  maxIterationCount)  {  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	final  int  maxIterationCount)  {	final  double  convergence,  final  int  maxIterationCount)  {  	non-compiled	[CE]  variable  convergence  might  not  have  been  initialized	1	None	replace
453	[BUG]  [BUGGY]  final  int  maxIterationCount  =  Math.max(maxCheckInterval,  0);  [CE]  ')'  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]  final  int  maxIterationCount  =  Math.max(maxCheckInterval,  0);  [BUGGY]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	final  int  maxIterationCount  =  Math.max(maxCheckInterval,  0);	final  double  convergence,  final  int  maxIterationCount)  {  	non-compiled	[CE]  ')'  expected	1	None	replace
481	[BUG]  [BUGGY]    handler.getImplicitReturn());  pendingEventTime  =  pendingEventTime;  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getImplicitReturn());  pendingEventTime  =  pendingEventTime;  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getImplicitReturn());  pendingEventTime  =  pendingEventTime;		non-compiled	[CE]  <identifier>  expected	2	None	add
482	[BUG]  [BUGGY]    handler.getEventHandler());  pendingEventTime  =  pendingEventTime;  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getEventHandler());  pendingEventTime  =  pendingEventTime;  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getEventHandler());  pendingEventTime  =  pendingEventTime;		non-compiled	[CE]  <identifier>  expected	2	None	add
483	[BUG]  [BUGGY]    pendingEventTime?  handler.getPreviousEvent()  :  handler.getNext());  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    pendingEventTime?  handler.getPreviousEvent()  :  handler.getNext());  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    pendingEventTime?  handler.getPreviousEvent()  :  handler.getNext());		non-compiled	[CE]  <identifier>  expected	2	None	add
484	[BUG]  [BUGGY]    handler.getImplicitReturn());  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    handler.getImplicitReturn());  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    handler.getImplicitReturn());		non-compiled	[CE]  <identifier>  expected	2	None	add
485	[BUG]  [BUGGY]    pendingEventTime?  handler.getEventTime()  :  handler.getEventTime());  [CE]  <identifier>  expected  [CONTEXT]  public  EventState(final  EventHandler  handler,  final  double  maxCheckInterval,  [BUGGY]    pendingEventTime?  handler.getEventTime()  :  handler.getEventTime());  [BUGGY]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	95	95	1	replace	    pendingEventTime?  handler.getEventTime()  :  handler.getEventTime());		non-compiled	[CE]  <identifier>  expected	2	None	add
513	[BUG]  [BUGGY]  pendingEventTime  =  Double.NaN  *  EventHandler.START_ELEMENT;  [CE]  cannot  find  symbol  START_ELEMENT  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]  pendingEventTime  =  Double.NaN  *  EventHandler.START_ELEMENT;  [BUGGY]  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	pendingEventTime  =  Double.NaN  *  EventHandler.START_ELEMENT;	pendingEventTime=  Double.NaN;  	non-compiled	[CE]  cannot  find  symbol  START_ELEMENT	19	None	replace
514	[BUG]  [BUGGY]  pendingEventTime  =  Double.NaN  *  EventHandler.START_ARRAY;  [CE]  cannot  find  symbol  START_ARRAY  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]  pendingEventTime  =  Double.NaN  *  EventHandler.START_ARRAY;  [BUGGY]  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	pendingEventTime  =  Double.NaN  *  EventHandler.START_ARRAY;	pendingEventTime=  Double.NaN;  	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	19	None	replace
543	[BUG]  [BUGGY]  pendingEvent= "true ";  [CE]  incompatible  types  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]  pendingEvent= "true ";  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	pendingEvent= "true ";	pendingEvent=  false;  	non-compiled	[CE]  incompatible  types	17	None	replace
544	[BUG]  [BUGGY]  pendingEvent=  null;  [CE]  incompatible  types  [CONTEXT]  final  double  convergence,  final  int  maxIterationCount)  {  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  [BUGGY]  pendingEvent=  null;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	105	105	1	replace	pendingEvent=  null;	pendingEvent=  false;  	non-compiled	[CE]  incompatible  types	17	None	replace
571	[BUG]  [BUGGY]    while(t0!=  0.0)  {  handler  =  EventHandler.END_ARG;  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0!=  0.0)  {  handler  =  EventHandler.END_ARG;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0!=  0.0)  {  handler  =  EventHandler.END_ARG;		non-compiled	[CE]  illegal  start  of  expression	20	None	add
572	[BUG]  [BUGGY]    while(t0  ==  0.0)  {  handler  =  EventHandler.END_ARG;  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0  ==  0.0)  {  handler  =  EventHandler.END_ARG;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0  ==  0.0)  {  handler  =  EventHandler.END_ARG;		non-compiled	[CE]  illegal  start  of  expression	20	None	add
573	[BUG]  [BUGGY]    while(t0!=  0.0)  {  handler  =  EventHandler.END;  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0!=  0.0)  {  handler  =  EventHandler.END;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0!=  0.0)  {  handler  =  EventHandler.END;		non-compiled	[CE]  illegal  start  of  expression	20	None	add
574	[BUG]  [BUGGY]    while(t0!=  0.0)  {  pendingEvent  =  handler.end();  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0!=  0.0)  {  pendingEvent  =  handler.end();  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0!=  0.0)  {  pendingEvent  =  handler.end();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
575	[BUG]  [BUGGY]    while(t0!=  0.0)  {  pendingEvent  =  EventHandler.END_ARG;  [CE]  illegal  start  of  expression  [CONTEXT]  this.handler  =  handler;  this.maxCheckInterval=  maxCheckInterval;  this.convergence  =  Math.abs(convergence);  this.maxIterationCount  =  maxIterationCount;  t0=  Double.NaN;  g0=  Double.NaN;  g0Positive=  true;  pendingEvent=  false;  [BUGGY]    while(t0!=  0.0)  {  pendingEvent  =  EventHandler.END_ARG;  [BUGGY]  pendingEventTime=  Double.NaN;  previousEventTime  =  Double.NaN;  increasing=  true;  nextAction=  EventHandler.CONTINUE;  }  [CLASS]  EventState  1  [METHOD]  <init>  [RETURN_TYPE]  EventHandler,double,double,int)  EventHandler  handler  final  double  maxCheckInterval  final  double  convergence  final  int  maxIterationCount  [VARIABLES]  EventHandler  handler  boolean  forward  g0Positive  increasing  pendingEvent  double  convergence  g0  maxCheckInterval  pendingEventTime  previousEventTime  t0  int  maxIterationCount  nextAction  	projects/Math78/src/main/java/org/apache/commons/math/ode/events/EventState.java	1.0	106	106	1	replace	    while(t0!=  0.0)  {  pendingEvent  =  EventHandler.END_ARG;		non-compiled	[CE]  illegal  start  of  expression	20	None	add
