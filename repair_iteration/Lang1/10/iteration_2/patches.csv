bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
2	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
3	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
4	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  ex);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  ex);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  ex);	  Number    nfe    =    createNumber(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
5	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  dec,  exp);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  dec,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  dec,  exp);	  Number    nfe    =    createNumber(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
6	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  str.length());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  str.length());	  Number    nfe    =    createNumber(str,    DECImal);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
8	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  DECIMAL_NUMBER);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  DECIMAL_NUMBER);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  DECIMAL_NUMBER);	  Number    nfe    =    createNumber(str,    DECImal);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
9	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  DECImal_ZERO);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  DECImal_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  DECImal_ZERO);	  Number    nfe    =    createNumber(str,    DECImal);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
10	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.toLowerCase();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =(str  ==  null)?  null  :  str.toLowerCase();	  String    str    =    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
11	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());	  String    str    =    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
12	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);	  String    str    =    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
13	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  hex_prefixes);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  hex_prefixes);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  hex_prefixes);	  Number    nfe    =    createNumber(str,    str);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(hex_prefixes))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(hex_prefixes))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  if(hex_prefixes.length()  ==  0  ||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(hex_prefixes.length()  ==  0  ||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(hex_prefixes.length()  ==  0  ||  StringUtils.isBlank(str))  {	  if(str.length()    ==    0    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
19	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  str.equals(hex_prefixes))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  str.equals(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  str.equals(hex_prefixes))  {	  if(str.length()    ==    0    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes,  str.length()))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes,  str.length()))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes,  str.length()))  {	  if(str.length()    ==    0    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  Number  nfe  =  getNumber(str,  false);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  getNumber(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  getNumber(str,  false);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  true,  false);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  true,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  true,  false);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)&&    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)&&  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)&&    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
26	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
27	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
28	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isLetter(str))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isLetter(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isLetter(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
29	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isWhitespace(str))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
30	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  false,  str.length());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  false,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  false,  str.length());	  Number    nfe    =    createNumber(str,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  false,  str);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  false,  str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  false,  str);	  Number    nfe    =    createNumber(str,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(hex_prefixes))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(hex_prefixes))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes,  null))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes,  null))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes,  null))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.length()  -  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.length()  +  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.length()  -  2;	  int    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
37	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.trim();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.trim();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =(str  ==  null)?  null  :  str.trim();	  String    str    =    this.str.trim();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
38	[BUG]  [BUGGY]  String  str  =  this.str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.str.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.str.substring(0,  str.length()  -  1);	  String    str    =    this.str.trim();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
39	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
40	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isNullOrEmpty(str)||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isNullOrEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isNullOrEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
41	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
42	[BUG]  [BUGGY]  if(str  ==  null  ||  str.isEmpty()  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  str.isEmpty()  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  str.isEmpty()  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
43	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
44	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
45	[BUG]  [BUGGY]  String  str  =  this.mant.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.mant.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.mant.substring(0,  str.length()  -  1);	  String    str    =    this.mant.trim();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
46	[BUG]  [BUGGY]  String  str  =  this.mant.trim(str);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.mant.trim(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.mant.trim(str);	  String    str    =    this.mant.trim();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
47	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DECEMBER_PREFIX);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  DECEMBER_PREFIX);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  DECEMBER_PREFIX);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
48	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DECEC_PREFIX);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  DECEC_PREFIX);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  DECEC_PREFIX);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
49	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DECECIMAL_PREFIX);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  DECECIMAL_PREFIX);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  DECECIMAL_PREFIX);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
50	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  exp);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
51	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
52	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  Character.isDigit(str.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  Character.isDigit(str.charAt(0)))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  Character.isDigit(str.charAt(0)))  {	  if(StringUtils.isBlank(str)&&    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
53	[BUG]  [BUGGY]  if(StringUtils.isBlank(string)&&  Character.isDigit(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(string)&&  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(string)&&  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)&&    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
54	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  16);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  16);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  16);	  int    decPos    =    str.lastIndexOf('.',    -1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
55	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  0);	  int    decPos    =    str.lastIndexOf('.',    -1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
56	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(hex_prefixes)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
57	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes)||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes)||  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(hex_prefixes)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
58	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(hex_prefixes)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
59	[BUG]  [BUGGY]  String  str  =  this.number.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.number.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.number.substring(0,  str.length()  -  1);	  String    str    =    this.number.trim();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
60	[BUG]  [BUGGY]  String  str  =  this.number.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.number.substring(0,  str.length()  -  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.number.substring(0,  str.length()  -  2);	  String    str    =    this.number.trim();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
61	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
62	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
63	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isEmpty(str)&&  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
64	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    Character.isDigit(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    Character.isDigit(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
66	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  Character.isDigit(str)||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  Character.isDigit(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  Character.isDigit(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    Character.isDigit(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
67	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  2);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  2);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
68	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  1);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
69	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  exp,  str);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  exp,  str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  exp,  str);	  Number    nfe    =    createNumber(str,    exp);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
70	[BUG]  [BUGGY]  if(StringUtils.isBlank(hex_prefixes)&&  StringUtils.isBlank(hex_prefixes))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(hex_prefixes)&&  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(hex_prefixes)&&  StringUtils.isBlank(hex_prefixes))  {	  if(StringUtils.isBlank(hex_prefixes)||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
71	[BUG]  [BUGGY]  if(!StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes))  {	  if(StringUtils.isBlank(hex_prefixes)||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
72	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
75	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
76	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
77	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  str.length());  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  null,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  null,  str.length());	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
78	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  str);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  null,  str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  null,  str);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
79	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  Character.isDigit(str.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  Character.isDigit(str.charAt(0)))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)&&  Character.isDigit(str.charAt(0)))  {	  if(!StringUtils.isBlank(str)&&    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
80	[BUG]  [BUGGY]  if(hex_prefixes  ==  null  ||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(hex_prefixes  ==  null  ||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(hex_prefixes  ==  null  ||  StringUtils.isBlank(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
81	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
82	[BUG]  [BUGGY]  if(str  ==  null  ||  str.equals(hex_prefixes))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  str.equals(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  str.equals(hex_prefixes))  {	  if(str    ==    null    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
83	[BUG]  [BUGGY]  if(Character.isWhitespace(str)||  Character.isWhitespace(str))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(Character.isWhitespace(str)||  Character.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(Character.isWhitespace(str)||  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
84	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  Character.isWhitespace(str))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  Character.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)||  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
85	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
86	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  0,  str.length());  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  0,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  0,  str.length());	  Number    nfe    =    createNumber(str,    0);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
87	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  4);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  4);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  4);	  Number    nfe    =    createNumber(str,    0);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
88	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  Character.isDigit(str))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isEmpty(str)||  Character.isDigit(str))  {	  if(!StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isDigit(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
90	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isLetterOrDigit(str))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isLetterOrDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isLetterOrDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
91	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  Character.isDigit(str))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  StringUtils.isEmpty(str)||  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
92	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.charAt(0)  ==  '-')  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.charAt(0)  ==  '-')  {	  if(str.length()    ==    0    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
93	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {	  if(str.length()    ==    0    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  str.substring(0,  str.length()  -  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	29	None	replace
95	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  str.substring(0,  str.length()  -  2));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	29	None	replace
96	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEMBER_PREFIX  +  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEMBER_PREFIX  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  DECEMBER_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DECEMBER_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
97	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  12);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  12);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  12);	  int    decPos    =    str.lastIndexOf('.',    DECEMBER_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
98	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
99	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isEmpty(str)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
100	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
101	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEC_PREFIX  +  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEC_PREFIX  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  DECEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DECEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
102	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  2);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  2);	  Number    nfe    =    createNumber(str,    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
103	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
104	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  str.length()!=  0)  {  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)||  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    str.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
105	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes))  {  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
106	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes,  0))  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes,  0))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isBlank(hex_prefixes,  0))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
107	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
108	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
109	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  ')'  expected	27	None	replace
110	[BUG]  [BUGGY]  if(hex_prefixes  ==  null  ||  StringUtils.isBlank(hex_prefixes))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(hex_prefixes  ==  null  ||  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(hex_prefixes  ==  null  ||  StringUtils.isBlank(hex_prefixes))  {	  if(str    ==    null    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  ')'  expected	27	None	replace
111	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
112	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEMBER_PREFIX  -  1);  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEMBER_PREFIX  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  DECEMBER_PREFIX  -  1);	  int    decPos    =    str.lastIndexOf('.',    DECEMBER_PREFIX);    	non-compiled	[CE]  ')'  expected	24	None	replace
113	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  decPos);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	22	None	replace
114	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DECImal);  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  DECImal);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  DECImal);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	22	None	replace
115	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  this);  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  this);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  this);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  ')'  expected	38	None	replace
116	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  0);  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  null,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  null,  0);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  ')'  expected	38	None	replace
117	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  String.class);  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  String.class);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  String.class);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  ')'  expected	38	None	replace
118	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isDigit(short))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isDigit(short))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  Character.isDigit(short))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  ')'  expected	40	None	replace
119	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  false,  hex_prefixes);  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  false,  hex_prefixes);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  false,  hex_prefixes);	  Number    nfe    =    createNumber(str,    false);    	non-compiled	[CE]  ')'  expected	3	None	replace
120	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
121	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
122	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  Integer.MAX_VALUE);  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  Integer.MAX_VALUE);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  Integer.MAX_VALUE);	  Number    nfe    =    createNumber(str,    DECImal);    	non-compiled	[CE]  ')'  expected	49	None	replace
123	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes))  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(hex_prefixes))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  ')'  expected	17	None	replace
124	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes))  {  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes))  {	  if(StringUtils.isBlank(hex_prefixes)||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  ')'  expected	26	None	replace
125	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  dec,  hex_prefixes);  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  dec,  hex_prefixes);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  dec,  hex_prefixes);	  Number    nfe    =    createNumber(str,    dec);    	non-compiled	[CE]  ')'  expected	47	None	replace
126	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  dec);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  ')'  expected	50	None	replace
127	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    Character.isWhitespace(str))    {    	non-compiled	[CE]  ')'  expected	31	None	replace
128	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  exp  +  1);  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  exp  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  exp  +  1);	  Number    nfe    =    createNumber(str,    exp);    	non-compiled	[CE]  ')'  expected	48	None	replace
129	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  exp,  hex_prefixes);  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  exp,  hex_prefixes);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  exp,  hex_prefixes);	  Number    nfe    =    createNumber(str,    exp);    	non-compiled	[CE]  ')'  expected	48	None	replace
130	[BUG]  [BUGGY]  Node  nfe  =  createNumber(str,  false);  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Node  nfe  =  createNumber(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Node  nfe  =  createNumber(str,  false);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  ')'  expected	4	None	replace
131	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(str))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
132	[BUG]  [BUGGY]  if(StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(hex_prefixes)||  StringUtils.isBlank(hex_prefixes)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(hex_prefixes)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	28	None	replace
133	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isWhitespace(str))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  ')'  expected	46	None	replace
134	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)&&  Character.isDigit(str))  {  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)&&  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)&&  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  ')'  expected	46	None	replace
135	[BUG]  [BUGGY]  String  str  =  this.str.substring(0,  this.str.length()  -  1);  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.str.substring(0,  this.str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.str.substring(0,  this.str.length()  -  1);	  String    str    =    this.str.trim();    	non-compiled	[CE]  ')'  expected	33	None	replace
136	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  ')'  expected	7	None	replace
137	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  ')'  expected	7	None	replace
138	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  -1);  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.',  -1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.indexOf('.',  -1);	  int    decPos    =    str.lastIndexOf('.',    -1);    	non-compiled	[CE]  ')'  expected	25	None	replace
139	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
140	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)&&  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
141	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)&&  Character.isDigit(str))  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)&&  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)&&  Character.isDigit(str))  {	  if(!StringUtils.isBlank(str)&&    Character.isDigit(str))    {    	non-compiled	[CE]  ')'  expected	32	None	replace
142	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  Character.isDigit(str))  {  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)||  Character.isDigit(str))  {	  if(!StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
143	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  Character.isDigit(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    Character.isDigit(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
144	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(hex_prefixes))  {	  if(str.length()    ==    0    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  ')'  expected	18	None	replace
145	[BUG]  [BUGGY]  if(string  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(string  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(string  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  ')'  expected	39	None	replace
146	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  ')'  expected	6	None	replace
147	[BUG]  [BUGGY]  String  str  =  this.number.substring(0,  this.number.length()  -  1);  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.number.substring(0,  this.number.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.number.substring(0,  this.number.length()  -  1);	  String    str    =    this.number.trim();    	non-compiled	[CE]  ')'  expected	36	None	replace
148	[BUG]  [BUGGY]  String  str  =  this.mant.substring(0,  this.mant.length()  -  1);  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.mant.substring(0,  this.mant.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.mant.substring(0,  this.mant.length()  -  1);	  String    str    =    this.mant.trim();    	non-compiled	[CE]  ')'  expected	35	None	replace
149	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
150	[BUG]  [BUGGY]  String  str  =  this.number;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.number;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.number;	  String    str    =    null;    	non-compiled	[CE]  ')'  expected	34	None	replace
151	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  Character.isWhitespace(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  Character.isWhitespace(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  Character.isWhitespace(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    Character.isWhitespace(str))    {    	non-compiled	[CE]  ')'  expected	31	None	replace
152	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  DEC);  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  DEC);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  DEC);	  Number    nfe    =    createNumber(str,    dec);    	non-compiled	[CE]  ')'  expected	47	None	replace
153	[BUG]  [BUGGY]  NullPointer  nfe  =  createNumber(str,  false);  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  NullPointer  nfe  =  createNumber(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	NullPointer  nfe  =  createNumber(str,  false);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  ')'  expected	4	None	replace
154	[BUG]  [BUGGY]  Node  nfe  =  createNumber(str,  true);  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Node  nfe  =  createNumber(str,  true);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Node  nfe  =  createNumber(str,  true);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  ')'  expected	4	None	replace
155	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  dec);  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  null,  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  null,  dec);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  ')'  expected	38	None	replace
156	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  exp);  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  null,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  null,  exp);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  ')'  expected	38	None	replace
157	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  DECIMAL_ZERO);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  DECIMAL_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  DECIMAL_ZERO);	  Number    nfe    =    createNumber(str,    str);    	non-compiled	[CE]  	1	None	replace
158	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  DECIAL_ZERO);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  DECIAL_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  DECIAL_ZERO);	  Number    nfe    =    createNumber(str,    str);    	non-compiled	[CE]  	1	None	replace
159	[BUG]  [BUGGY]  Integer  nfe  =  createNumber(str,  false);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  nfe  =  createNumber(str,  false);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Integer  nfe  =  createNumber(str,  false);	  Number    nfe    =    createNumber(str,    false);    	non-compiled	[CE]  	3	None	replace
160	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  DECIMAL);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  nfe  =  createNumber(str,  DECIMAL);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Number  nfe  =  createNumber(str,  DECIMAL);	  Number    nfe    =    createNumber(str,    DECImal);    	non-compiled	[CE]  	49	None	replace
161	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  Character.isDigit(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  Character.isDigit(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isEmpty(str)||  Character.isDigit(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    Character.isDigit(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
162	[BUG]  [BUGGY]  if(Character.isDigit(str)||  Character.isDigit(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(Character.isDigit(str)||  Character.isDigit(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(Character.isDigit(str)||  Character.isDigit(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    Character.isDigit(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
163	[BUG]  [BUGGY]  if(str.length()!=  0  ||  StringUtils.isBlank(hex_prefixes))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()!=  0  ||  StringUtils.isBlank(hex_prefixes))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()!=  0  ||  StringUtils.isBlank(hex_prefixes))  {	  if(str.length()    ==    0    ||    StringUtils.isBlank(hex_prefixes))    {    	non-compiled	[CE]  ')'  expected	18	None	replace
164	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  str.length()  >  0)  {  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  str.length()  >  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)&&  str.length()  >  0)  {	  if(StringUtils.isBlank(str)&&    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	20	None	replace
165	[BUG]  [BUGGY]  String  str  =  this.str.substring(0,  this.str.length());  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.str.substring(0,  this.str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.str.substring(0,  this.str.length());	  String    str    =    this.str.trim();    	non-compiled	[CE]  ')'  expected	33	None	replace
166	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)&&  Character.isDigit(str))  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)&&  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isEmpty(str)&&  Character.isDigit(str))  {	  if(!StringUtils.isBlank(str)&&    Character.isDigit(str))    {    	non-compiled	[CE]  ')'  expected	32	None	replace
167	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isDigit(str)||  Character.isDigit(str))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isDigit(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isDigit(str)||  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  ')'  expected	40	None	replace
168	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec  +  1);  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  dec  +  1);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  ')'  expected	50	None	replace
169	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(str.length()    ==    0    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
170	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	int  decPos  =  str.lastIndexOf('.',  decPos);	  int    decPos    =    str.lastIndexOf('.',    DECEMBER_PREFIX);    	non-compiled	[CE]  ')'  expected	24	None	replace
171	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  ')'  expected	45	None	replace
172	[BUG]  [BUGGY]  String  str  =  this.number.substring(0,  this.number.length()  -  2);  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  str  =  this.number.substring(0,  this.number.length()  -  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	String  str  =  this.number.substring(0,  this.number.length()  -  2);	  String    str    =    this.number.trim();    	non-compiled	[CE]  ')'  expected	36	None	replace
173	[BUG]  [BUGGY]  Node  nfe  =  createNumber(str,  dec);  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Node  nfe  =  createNumber(str,  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Node  nfe  =  createNumber(str,  dec);	  Number    nfe    =    createNumber(str,    exp);    	non-compiled	[CE]  ')'  expected	48	None	replace
174	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isLetter(str))  {  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isLetter(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  Character.isLetter(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  ')'  expected	46	None	replace
